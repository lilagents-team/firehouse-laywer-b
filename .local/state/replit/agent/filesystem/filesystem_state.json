{"file_contents":{"AUTHENTICATION_DEBUG.md":{"content":"# Authentication Debug Steps\n\n## Current Issue\nGitHub authentication not working after enabling Netlify Identity default GitHub integration.\n\n## Debug Steps\n\n### 1. Check Browser Developer Tools\nWhen you click \"Sign In with GitHub\":\n1. Open browser Developer Tools (F12)\n2. Go to Network tab\n3. Click \"Sign In with GitHub\" \n4. Look for any failed requests or 404 errors\n5. Check what URL it's trying to redirect to\n\n### 2. Verify Identity Status\nTest these URLs in your browser:\n- `https://firehouselawyer.netlify.app/.netlify/identity/settings` (should return JSON)\n- `https://firehouselawyer.netlify.app/.netlify/identity` (should show identity status)\n\n### 3. Check GitHub OAuth App Settings\nYour GitHub OAuth app should have:\n- **Application name**: Any name (e.g., \"Firehouse Lawyer CMS\")\n- **Homepage URL**: `https://firehouselawyer.netlify.app`\n- **Authorization callback URL**: `https://api.netlify.com/auth/done`\n\n### 4. Alternative: Delete and Recreate GitHub OAuth App\nIf the above doesn't work:\n1. Delete your current GitHub OAuth app\n2. Don't create a new one\n3. Try using Netlify's completely default GitHub integration\n4. Test authentication again\n\n### 5. Check Netlify Identity Configuration\nIn Netlify dashboard → Identity → External providers:\n- Should show \"GitHub (default)\" as enabled\n- No custom credentials should be entered if using default\n\n## Expected Behavior\n1. Click \"Sign In with GitHub\" in CMS\n2. Redirect to GitHub authorization page\n3. Authorize the application\n4. Redirect back to `https://firehouselawyer.netlify.app/admin` with user logged in\n\n## Common Issues\n- **GitHub OAuth app callback URL mismatch**\n- **Netlify Identity not fully enabled**\n- **CMS configuration pointing to wrong repository**\n- **Missing repository permissions on GitHub**\n\nPlease follow these debug steps and let me know what you discover!","size_bytes":1854},"CMS_SETUP_GUIDE.md":{"content":"# Sveltia CMS Setup Guide for Firehouse Lawyer Website\n\n## Overview\n\nI've successfully integrated Sveltia CMS (a modern, fast alternative to Decap/Netlify CMS) into your website. This provides a superior content editing experience with better performance, enhanced UX, and improved features while maintaining full compatibility with your existing content structure.\n\n## What's Been Implemented\n\n✅ **Complete Sveltia CMS Configuration** - All pages now support content editing with enhanced performance\n✅ **GitHub Authentication** - Secure login system\n✅ **Content Structure** - Organized markdown files for all content\n✅ **Modern Admin Interface** - Available at `/admin` with improved UX\n✅ **Content Types**:\n  - Page content (Home, Practice Areas, Attorneys, Newsletter, Contact)\n  - Attorney profiles with full biographical information\n  - Individual practice area details\n  - Newsletter issues with PDF links\n  - Site-wide settings\n\n## Required Setup Steps\n\n### 1. GitHub Repository Setup\n\n1. **Create or use existing GitHub repository** for your website\n2. **Update the CMS config** in `public/admin/config.yml`:\n   ```yaml\n   backend:\n     name: github\n     repo: YOUR-USERNAME/YOUR-REPO-NAME  # Replace with your actual repo\n     branch: main\n   ```\n\n### 2. Netlify Setup (Required for GitHub OAuth)\n\n1. **Deploy to Netlify**:\n   - Connect your GitHub repository to Netlify\n   - The build settings are pre-configured in `netlify.toml`:\n     - Build command: `npm run build && cp -r public/admin dist/public/ && cp -r content dist/public/`\n     - Publish directory: `dist/public`\n   - Netlify will automatically use these settings\n\n2. **Enable Netlify Identity**:\n   - Go to your Netlify site dashboard\n   - Navigate to Settings → Identity\n   - Click \"Enable Identity\"\n\n3. **Configure OAuth**:\n   - In Identity settings, go to \"External providers\"\n   - Enable GitHub as a provider\n   - Add your GitHub OAuth app credentials\n\n4. **Set Registration Preferences**:\n   - Go to Identity → Registration\n   - Set to \"Invite only\" for security\n   - Add yourself as a user\n\n### 3. GitHub OAuth Setup (for Netlify hosting)\n\n✅ **Since you're using Netlify**: You can use Netlify's built-in authentication!\n\n1. **Create GitHub OAuth App**:\n   - Go to GitHub Settings → Developer settings → OAuth Apps\n   - Click \"New OAuth App\"\n   - Settings:\n     - Application name: \"Firehouse Lawyer Sveltia CMS\"\n     - Homepage URL: `https://your-netlify-site.netlify.app`\n     - Authorization callback URL: `https://api.netlify.com/auth/done`\n\n2. **Configure in Netlify**:\n   - Site settings → Identity → External providers\n   - Enable GitHub\n   - Add Client ID and Client Secret from step 1\n\n### 4. Content Access Setup\n\nThe following content is now editable through the CMS:\n\n#### Pages\n- **Home Page**: Hero content, about section, images\n- **Practice Areas**: All practice area descriptions and content\n- **Attorneys**: Page headers and introductory content\n- **Newsletter**: Page content and featured issue details\n- **Contact**: Page headers and office information\n\n#### Individual Content Types\n- **Attorney Profiles**: Complete biographical information, contact details, education, experience\n- **Practice Areas**: Individual practice area pages with full content\n- **Newsletter Issues**: Individual newsletter issues with content and PDF links\n- **Site Settings**: Global site information, contact details, social media links\n\n## How to Use the CMS\n\n### Accessing the Admin Interface\n\n1. Navigate to `https://your-site.netlify.app/admin`\n2. Click \"Login with Netlify Identity\"\n3. Authenticate with your GitHub account\n4. Start editing content!\n\n### Editing Content\n\n1. **Page Content**: Click on \"Pages\" to edit main page content\n2. **Attorney Profiles**: Click on \"Attorney Profiles\" to add/edit attorney information\n3. **Practice Areas**: Click on \"Practice Areas\" to manage individual practice area content\n4. **Newsletter Issues**: Click on \"Newsletter Issues\" to add new issues or edit existing ones\n5. **Site Settings**: Click on \"Site Settings\" to update global site information\n\n### Sveltia CMS Features & Benefits\n\n- **Enhanced Performance**: Significantly faster loading and response times compared to Decap CMS\n- **Modern UI/UX**: Clean, intuitive interface with dark mode support\n- **Rich Text Editor**: Advanced markdown support with improved visual editing\n- **Asset Management**: Built-in image optimization and WebP conversion\n- **Stock Photo Integration**: Access to Pexels, Pixabay, and Unsplash directly in the editor\n- **Mobile Support**: Full tablet and mobile device compatibility\n- **Better i18n**: First-class internationalization support\n- **Image Upload**: Direct upload with automatic optimization\n- **Live Preview**: Real-time preview with better rendering\n- **Version Control**: All changes tracked in your GitHub repository\n- **Collaborative Editing**: Multi-user support with improved conflict resolution\n\n## File Structure\n\n```\ncontent/\n├── pages/           # Main page content\n├── attorneys/       # Attorney profile files\n├── practice-areas/  # Individual practice area content\n├── newsletters/     # Newsletter issue files\n└── settings/        # Site-wide settings\n```\n\n## Important Notes\n\n### Static Deployment Limitations\n- **API Endpoints**: Contact forms and newsletter subscriptions won't work on Netlify static hosting\n- **Backend Features**: Any server-side functionality requires a different hosting approach\n- **Content Management**: Sveltia CMS works perfectly for content editing via GitHub\n\n### Security\n- Only invited users can access the CMS\n- All changes are tracked in GitHub\n- Content is version controlled\n\n### Content Updates\n- Changes are reflected immediately on the live site\n- Content is cached for performance\n- Images are stored in your GitHub repository\n\n### Backup\n- All content is stored in your GitHub repository\n- Version history is maintained automatically\n- Easy to export or migrate content\n\n## Troubleshooting\n\n### Common Issues\n\n1. **Can't access /admin**: \n   - Ensure Netlify Identity is enabled\n   - Check that you're invited as a user\n\n2. **GitHub authentication fails**:\n   - Verify OAuth app credentials in Netlify\n   - Check callback URL is correct\n\n3. **Content not updating**:\n   - Clear browser cache\n   - Check that changes were committed to GitHub\n\n4. **Images not uploading**:\n   - Ensure Netlify Media folder is configured\n   - Check file size limits\n\n### Getting Help\n\n- Check Netlify Identity logs in dashboard\n- Review GitHub commit history for content changes\n- Ensure all URLs in config.yml are correct\n\n## Migration from Decap CMS\n\nThe website has been successfully migrated from Decap CMS to Sveltia CMS. Key changes:\n\n- **Single Line Change**: Updated the CMS script from Decap to Sveltia CMS\n- **Full Compatibility**: All existing content structure and configuration remains the same\n- **Enhanced Performance**: Immediate performance improvements with the new CMS\n- **Better UX**: Modern interface with improved editing experience\n\n## Next Steps\n\n1. Deploy to Netlify and configure as described above\n2. Test the admin interface at `/admin` - you'll notice the improved UI immediately\n3. Invite any additional content editors\n4. Enjoy the enhanced editing experience with Sveltia CMS!\n\nThe upgraded CMS is now fully integrated and ready to use once you complete the GitHub and Netlify setup steps. You'll immediately notice improved performance and a more modern interface compared to the previous Decap CMS.","size_bytes":7546},"NETLIFY_CMS_AUTH.md":{"content":"# Netlify + Sveltia CMS Authentication Setup\n\nSince your site is hosted on Netlify, you can use Netlify's built-in authentication system with Sveltia CMS. This is much simpler than setting up external OAuth services!\n\n## Quick Setup Steps\n\n### 1. Enable Netlify Identity (CRITICAL)\n\nThe 404 error you're seeing usually means Identity isn't properly enabled. Follow these exact steps:\n\n1. Go to your Netlify dashboard\n2. Select your site → **Site settings** → **Identity**\n3. If you see \"Identity is not enabled\", click **Enable Identity**\n4. **WAIT** for the service to fully initialize (30-60 seconds)\n5. Refresh the page and verify you see Identity settings\n6. Under **Registration**, set to **Invite only** (recommended for security)\n7. Click **Invite users** and add your email address\n8. **Test the endpoint**: Visit `https://firehouselawyer.netlify.app/.netlify/identity/settings`\n   - Should return JSON configuration (not 404)\n   - If 404, Identity isn't properly enabled\n\n### 2. Create GitHub OAuth App\n\n1. Go to [GitHub Developer Settings](https://github.com/settings/applications/new)\n2. Create new OAuth app with these **EXACT** settings:\n   ```\n   Application name: Firehouse Lawyer CMS\n   Homepage URL: https://firehouselawyer.netlify.app\n   Authorization callback URL: https://api.netlify.com/auth/done\n   ```\n   ⚠️ **Critical**: The callback URL must be exactly `https://api.netlify.com/auth/done`\n3. Click **Register application**\n4. Click **Generate a new client secret**\n5. Copy both **Client ID** and **Client Secret** (you'll need both)\n\n### 3. Configure GitHub Provider in Netlify\n\n1. Back in Netlify: **Site settings** → **Identity** → **External providers**\n2. Click **Add provider** and select **GitHub**\n3. Enter your GitHub OAuth credentials:\n   - **Client ID**: (from step 2)\n   - **Client Secret**: (from step 2)\n4. Click **Save**\n5. **Verify**: You should see GitHub listed as an enabled provider\n\n### 4. Update Repository Reference\n\nEdit `public/admin/config.yml` and replace the repository placeholder:\n\n```yaml\nbackend:\n  name: github\n  repo: YOUR-USERNAME/YOUR-REPO-NAME  # Replace with actual GitHub repo\n  branch: main\n  base_url: https://api.netlify.com\n  auth_endpoint: auth\n```\n\n## Testing Authentication\n\n1. Deploy your site to Netlify (or let auto-deploy finish)\n2. Visit `https://your-site.netlify.app/admin`\n3. Click **Login with Netlify Identity**\n4. You should be redirected to GitHub for authorization\n5. After authorizing, you'll be redirected back to the CMS interface\n\n## Troubleshooting\n\n**\"Authentication aborted. Please try again.\"** (Your current issue):\n- Identity is enabled ✅ but GitHub OAuth is not configured\n- You need to create a GitHub OAuth app and add it to Netlify Identity\n- **Solution**: Complete steps 2 and 3 above to set up GitHub OAuth\n- **Check**: In Netlify Identity settings, GitHub should be listed under External providers\n\n**\"Error: Failed to authenticate\"**:\n- Verify GitHub OAuth callback URL is exactly: `https://api.netlify.com/auth/done`\n- Check that you've enabled Netlify Identity\n- Ensure you've been invited as a user in Netlify Identity\n\n**\"Repository not found\"**:\n- Verify the repository name in config.yml matches your GitHub repo exactly\n- Ensure your GitHub account has access to the repository\n- Check that the repository is public or that your OAuth app has the right permissions\n\n**\"Access denied\"**:\n- Make sure you've been invited as a user in Netlify Identity\n- Check that the GitHub OAuth app belongs to the same account/organization as the repository\n\n**If Identity still doesn't work after enabling**:\n1. **Disable Identity** in Netlify dashboard\n2. Wait 30 seconds\n3. **Re-enable Identity**\n4. Test the settings endpoint again\n5. This forces a fresh Identity service instance\n\n## What This Setup Provides\n\n✅ **Secure authentication** through Netlify Identity + GitHub OAuth\n✅ **Direct GitHub integration** for content management\n✅ **No external services** required (everything through Netlify)\n✅ **Automatic deployments** when content is saved through the CMS\n\nThat's it! Your CMS should now work properly with GitHub authentication through Netlify.","size_bytes":4172},"NETLIFY_DEPLOYMENT.md":{"content":"# Netlify Deployment Guide\n\n## Overview\n\nYour website is now configured for deployment on Netlify with the following setup:\n\n✅ **Netlify Configuration**: `netlify.toml` configured for static deployment\n✅ **Sveltia CMS Integration**: Modern CMS with improved performance\n✅ **Build Process**: Automatically copies admin and content files\n✅ **Client-side Routing**: Proper redirects for React Router\n✅ **404 Handling**: Custom 404 page for unavailable API routes\n\n## Netlify Configuration\n\nThe `netlify.toml` file includes:\n\n### Build Settings\n- **Build Command**: `npm run build && cp -r public/admin dist/public/ && cp -r content dist/public/`\n- **Publish Directory**: `dist/public`\n- **Node Version**: 20\n\n### Redirects\n- **Admin Access**: `/admin` → `/admin/index.html` (Sveltia CMS)\n- **Content Files**: `/content/*` → static content files\n- **API Routes**: `/api/*` → 404 page (backend not available in static hosting)\n- **SPA Routing**: All other routes → `index.html` (React Router)\n\n## Deployment Steps\n\n### 1. Connect Repository to Netlify\n\n1. Go to [Netlify](https://netlify.com) and sign in\n2. Click \"New site from Git\"\n3. Connect your GitHub repository\n4. Netlify will automatically detect the `netlify.toml` configuration\n\n### 2. Configure Environment\n\nNo additional environment variables needed for the static frontend deployment.\n\n### 3. Deploy\n\n1. Click \"Deploy site\"\n2. Netlify will run the build command and deploy automatically\n3. Your site will be available at `https://[random-name].netlify.app`\n\n### 4. Set Up Custom Domain (Optional)\n\n1. In Netlify dashboard → Site settings → Domain management\n2. Add your custom domain\n3. Configure DNS records as instructed\n\n## Sveltia CMS Setup\n\n✅ **Good News**: Since your site IS hosted on Netlify, you can use Netlify's built-in authentication!\n\n### 1. Enable Netlify Identity\n\n1. In Netlify dashboard → Site settings → Identity\n2. Enable Identity service\n3. Set registration to \"Invite only\" for security\n4. Add yourself as a user (Site settings → Identity → Invite users)\n\n### 2. Configure GitHub OAuth in Netlify\n\n1. **Create GitHub OAuth App**:\n   - Go to GitHub Settings → Developer settings → OAuth Apps\n   - Click \"New OAuth App\"\n   - Settings:\n     - Application name: \"Firehouse Lawyer Sveltia CMS\"\n     - Homepage URL: `https://your-netlify-site.netlify.app`\n     - Authorization callback URL: `https://api.netlify.com/auth/done`\n\n2. **Add OAuth to Netlify**:\n   - In Netlify: Site settings → Identity → External providers\n   - Enable GitHub provider\n   - Add your GitHub OAuth Client ID and Client Secret\n\n### 3. Update CMS Configuration\n\nYour `public/admin/config.yml` is already configured correctly for Netlify:\n\n```yaml\nbackend:\n  name: github\n  repo: YOUR-USERNAME/YOUR-REPO-NAME  # Replace with your actual repo\n  branch: main\n  base_url: https://api.netlify.com\n  auth_endpoint: auth\n```\n\n### 4. Access Sveltia CMS\n\n1. Navigate to `https://your-site.netlify.app/admin`\n2. Click \"Login with Netlify Identity\"\n3. Authenticate with GitHub\n4. Start editing with the modern Sveltia CMS interface!\n\n## Important Limitations\n\n### Static Hosting Limitations\n\n⚠️ **Backend Features Not Available**:\n- Contact form submissions\n- Newsletter subscriptions\n- Any API endpoints requiring server-side processing\n\n### Alternative Solutions\n\nFor full functionality including backend features:\n\n1. **Deploy to Replit** (recommended for development/testing)\n2. **Use Netlify Functions** (requires additional setup)\n3. **Deploy to Vercel/Railway** (full-stack support)\n4. **Use form services** like Netlify Forms or Formspree\n\n## File Structure After Build\n\n```\ndist/public/\n├── admin/              # Sveltia CMS admin interface\n│   ├── config.yml      # CMS configuration\n│   └── index.html      # CMS interface\n├── content/            # Content files for CMS\n├── assets/             # Built CSS/JS assets\n├── index.html          # Main React app\n└── 404.html           # Custom 404 page\n```\n\n## Benefits of This Setup\n\n✅ **Fast Performance**: Static files served via CDN\n✅ **Modern CMS**: Sveltia CMS with improved UX\n✅ **Git-based**: All content version controlled\n✅ **Professional**: Custom domain support\n✅ **Secure**: GitHub OAuth authentication\n✅ **Mobile-friendly**: Responsive design + mobile CMS support\n\n## Testing Deployment\n\nAfter deployment, verify:\n\n1. **Homepage loads**: Main site functionality\n2. **Navigation works**: All page routes function\n3. **Admin accessible**: `/admin` loads Sveltia CMS\n4. **Content editable**: Can log in and edit content\n5. **Changes reflected**: Content updates appear on site\n\n## Troubleshooting\n\n### Common Issues\n\n1. **Build fails**: Check Node.js version (should be 20)\n2. **Admin not accessible**: Verify admin files copied correctly\n3. **CMS login fails**: Check GitHub OAuth configuration\n4. **Content not updating**: Clear browser cache, check GitHub commits\n\n### Support\n\n- Check Netlify deploy logs for build errors\n- Verify all paths in `netlify.toml` are correct\n- Ensure GitHub repo settings allow OAuth app access\n\nYour site is now ready for professional deployment with modern content management capabilities!","size_bytes":5232},"SVELTIA_AUTH_SETUP.md":{"content":"# Sveltia CMS Authentication Setup Guide\n\n## Why You Need This\n\nSveltia CMS requires a separate OAuth authentication service when not hosted on Netlify. Unlike Netlify/Decap CMS which provides built-in authentication, Sveltia CMS needs you to set up your own GitHub OAuth service.\n\n## Recommended Solution: Cloudflare Workers (FREE)\n\nThe easiest and most reliable method is using Cloudflare Workers, which offers:\n- ✅ **Free tier**: 100,000 requests/day (more than enough for CMS usage)\n- ✅ **Official support**: Created by Sveltia CMS team\n- ✅ **Easy setup**: One-click deployment\n- ✅ **Reliable**: Global CDN with 99.9% uptime\n\n## Step-by-Step Setup\n\n### Step 1: Deploy to Cloudflare Workers\n\n1. **Sign up for Cloudflare** (free account)\n2. **Click this deployment button**: \n   [![Deploy to Cloudflare Workers](https://deploy.workers.cloudflare.com/button)](https://deploy.workers.cloudflare.com/?url=https://github.com/sveltia/sveltia-cms-auth)\n\n3. **Follow the deployment process**:\n   - Authorize GitHub access\n   - Select your Cloudflare account\n   - Deploy the worker\n\n4. **Copy your Worker URL**: `https://sveltia-cms-auth.YOUR-SUBDOMAIN.workers.dev`\n\n### Step 2: Create GitHub OAuth App\n\n1. **Go to GitHub**: [Settings → Developer settings → OAuth Apps](https://github.com/settings/applications/new)\n\n2. **Register new OAuth app** with these settings:\n   ```\n   Application name: Firehouse Lawyer CMS\n   Homepage URL: https://your-netlify-site.netlify.app\n   Authorization callback URL: https://sveltia-cms-auth.YOUR-SUBDOMAIN.workers.dev/callback\n   ```\n\n3. **Generate client secret** and copy both:\n   - Client ID\n   - Client Secret\n\n### Step 3: Configure Cloudflare Worker\n\n1. **Go to Cloudflare Dashboard** → Workers & Pages → `sveltia-cms-auth`\n\n2. **Navigate to Settings** → Variables\n\n3. **Add these Environment Variables**:\n   ```\n   GITHUB_CLIENT_ID: [your-client-id-from-step-2]\n   GITHUB_CLIENT_SECRET: [your-client-secret] (click Encrypt)\n   ALLOWED_DOMAINS: your-netlify-site.netlify.app\n   ```\n\n4. **Save and Deploy**\n\n### Step 4: Update CMS Configuration\n\nI'll update your `public/admin/config.yml` to include the authentication service.\n\n**You'll need to replace `YOUR-WORKER-URL` with your actual Cloudflare Worker URL from Step 1.**\n\n## Alternative: Community Solutions\n\nIf you prefer not to use Cloudflare Workers, here are other options:\n\n### Railway/Vercel Deployment\n- Deploy the same code to Railway or Vercel\n- Configure OAuth app to point to your deployment\n- More complex but gives you full control\n\n### Use Existing OAuth Service\n- Some developers provide public OAuth services\n- ⚠️ **Security risk**: Your GitHub tokens go through third-party servers\n- Not recommended for production use\n\n## Next Steps\n\n1. **Complete the Cloudflare Workers setup** above\n2. **Update the CMS config** with your Worker URL (I'll help with this)\n3. **Test authentication** at your-site.netlify.app/admin\n4. **Start editing content** with full GitHub integration!\n\n## Troubleshooting\n\n### Common Issues\n\n**\"OAuth Error\" or 404 on login**:\n- Verify callback URL matches exactly: `https://your-worker.workers.dev/callback`\n- Check environment variables are set correctly\n- Ensure your site domain is in ALLOWED_DOMAINS\n\n**\"Access Denied\" errors**:\n- Verify GitHub OAuth app is for the correct repository\n- Check that your GitHub account has access to the repository\n- Ensure OAuth app permissions are correct\n\n**Worker not responding**:\n- Check Cloudflare Workers dashboard for error logs\n- Verify the worker is deployed and running\n- Test the worker URL directly in browser\n\n### Getting Help\n\n- Check Cloudflare Workers logs in dashboard\n- Verify GitHub OAuth app callback URL\n- Test authentication flow step by step\n- Ensure all environment variables are correctly set\n\nOnce this is set up, you'll have a fully functional CMS with GitHub authentication that works perfectly with your Netlify deployment!","size_bytes":3943},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"netlify.toml":{"content":"[build]\n  # Build command - builds frontend and copies necessary static files\n  command = \"npm run build && cp -r public/admin dist/public/ && cp -r content dist/public/\"\n  \n  # Directory to publish (contains the built frontend)\n  publish = \"dist/public\"\n\n[build.environment]\n  # Node.js version\n  NODE_VERSION = \"20\"\n\n# Admin CMS access - serve the CMS files\n[[redirects]]\n  from = \"/admin\"\n  to = \"/admin/index.html\"\n  status = 200\n\n[[redirects]]\n  from = \"/admin/*\"\n  to = \"/admin/:splat\"\n  status = 200\n\n# Content files\n[[redirects]]\n  from = \"/content/*\"\n  to = \"/content/:splat\"\n  status = 200\n\n# API routes - these will need to be handled differently on Netlify\n# For now, return 404 to indicate backend functionality isn't available\n[[redirects]]\n  from = \"/api/*\"\n  to = \"/404.html\"\n  status = 404\n\n# Client-side routing fallback - all other routes go to React app\n[[redirects]]\n  from = \"/*\"\n  to = \"/index.html\"\n  status = 200\n\n[dev]\n  # Command to run for local development\n  command = \"npm run dev\"\n  \n  # Port for local development\n  port = 5000\n  \n  # Framework detection\n  framework = \"#custom\"\n\n# Security headers\n[[headers]]\n  for = \"/*\"\n  [headers.values]\n    X-Frame-Options = \"DENY\"\n    X-XSS-Protection = \"1; mode=block\"\n    X-Content-Type-Options = \"nosniff\"\n    Referrer-Policy = \"strict-origin-when-cross-origin\"\n\n# Cache static assets\n[[headers]]\n  for = \"/assets/*\"\n  [headers.values]\n    Cache-Control = \"public, max-age=31536000, immutable\"\n\n# CMS admin security\n[[headers]]\n  for = \"/admin/*\"\n  [headers.values]\n    X-Frame-Options = \"SAMEORIGIN\"","size_bytes":1576},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Eric T. Quinn, P.S. - Fire Service Law Firm Website\n\n## Overview\n\nThis is a professional law firm website built for Eric T. Quinn, P.S., specializing in legal services for fire districts, regional fire authorities, and emergency services across the Pacific Northwest. The application is a modern full-stack web application using React for the frontend and Express.js for the backend.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## Recent Changes\n\n**August 13, 2025:**\n- Successfully migrated project from Replit Agent to standard Replit environment\n- Installed missing tsx dependency to resolve server startup issues  \n- Verified Express server running properly on port 5000 with Vite integration\n- Enhanced hero section contrast by increasing dark overlay opacity (from black/80-70-90 to black/90-85-95) for better text readability\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React with TypeScript\n- **Routing**: Wouter (lightweight client-side routing)\n- **UI Framework**: Shadcn/UI components built on Radix UI primitives\n- **Styling**: Tailwind CSS with custom fire service themed colors (fire-navy, fire-red, fire-orange)\n- **State Management**: TanStack React Query for server state management\n- **Build Tool**: Vite for development and production builds\n\n### Backend Architecture\n- **Framework**: Express.js with TypeScript\n- **Module System**: ES modules\n- **API Design**: RESTful endpoints for contact forms and newsletter subscriptions\n- **Request Logging**: Custom middleware for API request logging and performance monitoring\n- **Error Handling**: Centralized error handling middleware\n\n### Database Architecture\n- **ORM**: Drizzle ORM for type-safe database operations\n- **Database**: PostgreSQL (configured for Neon serverless)\n- **Schema Management**: Drizzle migrations in `/migrations` directory\n- **Current Storage**: In-memory storage implementation for users (to be replaced with actual database)\n\n## Key Components\n\n### Core Pages\n- **Home**: Hero section, practice areas overview, and newsletter subscription\n- **Practice Areas**: Detailed information about legal services offered\n- **Attorneys**: Profiles of Eric T. Quinn and Joseph F. Quinn\n- **Newsletter**: Current and archived issues with subscription functionality\n- **Contact**: Contact form and office information\n\n### UI Components\n- Comprehensive Shadcn/UI component library including forms, navigation, cards, and dialogs\n- Custom newsletter subscription component with sidebar variant\n- Responsive navigation with mobile menu support\n- Professional footer with contact information and quick links\n\n### Backend Services\n- Contact form submission endpoint (`/api/contact`)\n- Newsletter subscription endpoint (`/api/newsletter/subscribe`)\n- Input validation using Zod schemas\n- Placeholder for email service integration\n- Static content serving for CMS markdown files\n\n### Content Management System\n- **CMS**: Sveltia CMS (modern alternative to Decap CMS) integration\n- **Authentication**: GitHub OAuth for secure content editing\n- **Content Structure**: Markdown files with frontmatter for all page content\n- **Content Types**: Pages, Attorney profiles, Practice areas, Newsletter issues, Site settings\n- **Admin Interface**: Available at `/admin` with enhanced visual editing interface and improved performance\n\n## Data Flow\n\n1. **Client Requests**: React components make API calls using TanStack Query and load CMS content\n2. **API Processing**: Express routes handle requests with validation and logging\n3. **Content Management**: Markdown files with frontmatter served statically, parsed client-side\n4. **Data Persistence**: Currently uses in-memory storage, designed for PostgreSQL integration\n5. **Response Handling**: Standardized JSON responses with success/error messaging\n6. **UI Updates**: React Query manages cache invalidation and optimistic updates\n7. **CMS Integration**: Sveltia CMS provides GitHub-authenticated content editing interface with enhanced performance and modern UX\n\n## External Dependencies\n\n### Core Dependencies\n- **UI**: Radix UI primitives, Tailwind CSS, Lucide React icons\n- **Forms**: React Hook Form with Hookform Resolvers for validation\n- **Database**: Drizzle ORM with Neon serverless PostgreSQL driver\n- **Content**: Gray-matter for markdown parsing, Remark for HTML processing\n- **Utilities**: Date-fns for date formatting, clsx for conditional styling\n\n### Development Tools\n- **Build**: Vite with React plugin and ESBuild for production\n- **Types**: TypeScript with strict configuration\n- **Linting**: Path aliases configured for clean imports\n- **Development**: Hot module replacement and error overlay\n\n## Deployment Strategy\n\n### Build Process\n- **Frontend**: Vite builds optimized React bundle to `/dist/public`\n- **Backend**: ESBuild bundles Express server to `/dist/index.js`\n- **Assets**: Static assets served from `/attached_assets` (law firm content)\n\n### Environment Configuration\n- **Development**: Vite dev server with Express backend integration\n- **Production**: Single Node.js process serving both static files and API\n- **Database**: Requires `DATABASE_URL` environment variable for PostgreSQL connection\n\n### Key Scripts\n- `npm run dev`: Development with hot reload\n- `npm run build`: Production build for both frontend and backend\n- `npm run start`: Production server\n- `npm run db:push`: Apply database schema changes\n\nThe application follows a monorepo structure with shared types and schemas, making it easy to maintain consistency between frontend and backend while supporting the specific needs of a professional law firm website.","size_bytes":5643},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2627},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nimport { vitePluginRss } from './client/vite-plugin-rss';\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    vitePluginRss(), \n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1052},"attached_assets/REPLIT_SETUP_GUIDE_1753916069403.md":{"content":"# Professional Website with Content Management System\n\nBuild a modern website with a powerful admin interface for managing content. Perfect for blogs, business sites, portfolios, and more. This setup gives you a professional CMS without the complexity or cost of traditional solutions.\n\n## What You'll Build\n- **Professional Website**: Fast, responsive, modern design\n- **Content Management**: Easy-to-use admin interface for blog posts and pages\n- **Automatic Publishing**: Write content and it goes live automatically\n- **No Technical Skills Required**: Content creators can manage everything through a web interface\n- **Free Hosting**: Deploy and host for free using industry-standard tools\n\n## How It Works\n1. **Develop**: Build your site in Replit with full development environment\n2. **Manage Content**: Use a web-based CMS to create blog posts and pages\n3. **Auto-Deploy**: Content automatically publishes to your live website\n4. **Version Control**: All content and code backed up in GitHub\n\n## Tech Stack\n- **Frontend**: React + Vite for fast, modern web development\n- **CMS**: Decap CMS for user-friendly content management\n- **Hosting**: GitHub for code storage, Netlify for website deployment\n- **Content**: Markdown files with automatic processing\n\n## Prerequisites\n- GitHub account (free)\n- Netlify account (free)  \n- Replit account (free)\n\n*No prior experience with CMS or deployment required - this guide covers everything step by step.*\n\n## Step 1: Create Your Project in Replit\n\n### 1.1 Start with a React Template\n1. In Replit, click \"Create Repl\"\n2. Choose \"Vite React\" template\n3. Name your project (e.g., \"my-website\")\n\n### 1.2 Setup Basic Structure\nCreate these folders and files in your project:\n\n```\nproject/\n├── public/\n│   └── admin/              # CMS admin interface\n├── src/                    # React app\n├── content/\n│   └── blog/              # Blog posts (markdown)\n├── netlify.toml           # Deployment config\n└── package.json\n```\n\n## Step 2: Install Dependencies\n\nIn Replit's Shell tab, run:\n```bash\nnpm install gray-matter\n```\n\nThis package helps read markdown files with frontmatter (metadata).\n\n## Step 3: Create CMS Admin Interface\n\n### 3.1 Create Admin HTML File\nCreate `public/admin/index.html`:\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Content Manager</title>\n</head>\n<body>\n  <!-- Netlify Identity for authentication -->\n  <script src=\"https://identity.netlify.com/v1/netlify-identity-widget.js\"></script>\n  \n  <!-- Decap CMS -->\n  <script src=\"https://unpkg.com/decap-cms@^3.0.0/dist/decap-cms.js\"></script>\n  \n  <!-- Authentication handling -->\n  <script>\n    if (window.netlifyIdentity) {\n      window.netlifyIdentity.on(\"init\", user => {\n        if (!user) {\n          window.netlifyIdentity.on(\"login\", () => {\n            document.location.href = \"/admin/\";\n          });\n        }\n      });\n    }\n  </script>\n</body>\n</html>\n```\n\n### 3.2 Create CMS Configuration\nCreate `public/admin/config.yml`:\n\n```yaml\nbackend:\n  name: github\n  repo: your-username/your-repo-name  # You'll update this later\n  branch: main\n\nmedia_folder: \"public/images\"\npublic_folder: \"/images\"\n\ncollections:\n  - name: \"blog\"\n    label: \"Blog Posts\"\n    folder: \"content/blog\"\n    create: true\n    slug: \"{{year}}-{{month}}-{{day}}-{{slug}}\"\n    fields:\n      - {label: \"Title\", name: \"title\", widget: \"string\"}\n      - {label: \"Date\", name: \"date\", widget: \"datetime\"}\n      - {label: \"Featured Image\", name: \"image\", widget: \"image\", required: false}\n      - {label: \"Excerpt\", name: \"excerpt\", widget: \"text\", required: false}\n      - {label: \"Body\", name: \"body\", widget: \"markdown\"}\n      \n  - name: \"pages\"\n    label: \"Pages\"\n    folder: \"content/pages\"\n    create: true\n    slug: \"{{slug}}\"\n    fields:\n      - {label: \"Title\", name: \"title\", widget: \"string\"}\n      - {label: \"Body\", name: \"body\", widget: \"markdown\"}\n```\n\n## Step 4: Create Sample Content\n\n### 4.1 Create Directories\nMake these folders:\n- `content/blog/`\n- `content/pages/`\n- `public/images/`\n\n### 4.2 Create Sample Blog Post\nCreate `content/blog/2024-01-01-welcome.md`:\n\n```markdown\n---\ntitle: \"Welcome to My Website\"\ndate: 2024-01-01T12:00:00.000Z\nexcerpt: \"This is my first blog post!\"\n---\n\n# Welcome!\n\nThis is my first blog post created with the CMS. \n\nYou can edit this content through the admin interface at `/admin`.\n\n## Features\n\n- Easy content management\n- Markdown support\n- Image uploads\n- SEO friendly\n```\n\n## Step 5: Setup Blog Reading\n\n### 5.1 Create Blog Data Script\nCreate `scripts/build-blog-data.js`:\n\n```javascript\nimport fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter';\n\nconst BLOG_DIR = 'content/blog';\nconst OUTPUT_DIR = 'public/data';\n\n// Create output directory if it doesn't exist\nif (!fs.existsSync(OUTPUT_DIR)) {\n  fs.mkdirSync(OUTPUT_DIR, { recursive: true });\n}\n\n// Read all blog posts\nconst posts = [];\nif (fs.existsSync(BLOG_DIR)) {\n  const files = fs.readdirSync(BLOG_DIR);\n  \n  files.forEach(file => {\n    if (file.endsWith('.md')) {\n      const filePath = path.join(BLOG_DIR, file);\n      const fileContent = fs.readFileSync(filePath, 'utf8');\n      const { data, content } = matter(fileContent);\n      \n      posts.push({\n        slug: file.replace('.md', ''),\n        title: data.title || 'Untitled',\n        date: data.date || new Date().toISOString(),\n        excerpt: data.excerpt || content.substring(0, 150) + '...',\n        image: data.image || null,\n        content: content\n      });\n    }\n  });\n}\n\n// Sort by date (newest first)\nposts.sort((a, b) => new Date(b.date) - new Date(a.date));\n\n// Write to JSON file\nfs.writeFileSync(\n  path.join(OUTPUT_DIR, 'blog-posts.json'), \n  JSON.stringify(posts, null, 2)\n);\n\nconsole.log(`Built ${posts.length} blog posts`);\n```\n\n### 5.2 Update package.json\nAdd this to your `scripts` section in `package.json`:\n\n```json\n{\n  \"scripts\": {\n    \"build-blog\": \"node scripts/build-blog-data.js\",\n    \"prebuild\": \"npm run build-blog\",\n    \"dev\": \"npm run build-blog && vite\",\n    \"build\": \"npm run build-blog && vite build\"\n  }\n}\n```\n\n## Step 6: Create Netlify Configuration\n\nCreate `netlify.toml` in your project root:\n\n```toml\n[build]\n  publish = \"dist\"\n  command = \"npm run build\"\n\n# Redirect all routes to index.html for single-page app\n[[redirects]]\n  from = \"/*\"\n  to = \"/index.html\"\n  status = 200\n\n[build.environment]\n  NODE_VERSION = \"18\"\n```\n\n## Step 7: Add Blog to Your React App\n\n### 7.1 Create Blog Components\nCreate `src/components/BlogList.jsx`:\n\n```jsx\nimport { useState, useEffect } from 'react';\n\nfunction BlogList() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch('/data/blog-posts.json')\n      .then(res => res.json())\n      .then(data => {\n        setPosts(data);\n        setLoading(false);\n      })\n      .catch(err => {\n        console.error('Error loading blog posts:', err);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) return <div>Loading...</div>;\n\n  return (\n    <div className=\"blog-list\">\n      <h1>Blog</h1>\n      {posts.map(post => (\n        <article key={post.slug} className=\"blog-post-preview\">\n          <h2>{post.title}</h2>\n          <p className=\"date\">{new Date(post.date).toLocaleDateString()}</p>\n          {post.image && <img src={post.image} alt={post.title} />}\n          <p>{post.excerpt}</p>\n          <a href={`/blog/${post.slug}`}>Read More</a>\n        </article>\n      ))}\n    </div>\n  );\n}\n\nexport default BlogList;\n```\n\n### 7.2 Update Your App\nUpdate `src/App.jsx` to include the blog:\n\n```jsx\nimport BlogList from './components/BlogList';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>My Website</h1>\n        <nav>\n          <a href=\"/\">Home</a>\n          <a href=\"/blog\">Blog</a>\n          <a href=\"/admin\">Admin</a>\n        </nav>\n      </header>\n      \n      <main>\n        <BlogList />\n      </main>\n      \n      <footer>\n        <p>&copy; 2024 My Website</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n```\n\n## Step 8: Push to GitHub\n\n### 8.1 Create GitHub Repository\n1. Go to [GitHub](https://github.com)\n2. Click \"New repository\"\n3. Name it (e.g., \"my-website\")\n4. Make it public\n5. Don't initialize with README (you already have files)\n\n### 8.2 Connect Replit to GitHub\nIn Replit:\n1. Click the Version Control tab (Git icon)\n2. Click \"Create a Git Repo\"\n3. Connect to your GitHub repository\n4. Commit and push your files\n\n### 8.3 Update CMS Config\nEdit `public/admin/config.yml` and update the repo line:\n```yaml\nbackend:\n  name: github\n  repo: your-github-username/your-repo-name  # Update this!\n  branch: main\n```\n\nCommit and push this change.\n\n## Step 9: Deploy to Netlify\n\n### 9.1 Connect to Netlify\n1. Go to [Netlify](https://netlify.com)\n2. Click \"New site from Git\"\n3. Choose GitHub and select your repository\n4. Netlify will automatically detect the build settings from `netlify.toml`\n5. Click \"Deploy site\"\n\n### 9.2 Enable Authentication (IMPORTANT!)\nAfter deployment:\n\n1. **Enable Identity**:\n   - Go to your site dashboard\n   - Click \"Site Settings\" → \"Identity\"\n   - Click \"Enable Identity\"\n\n2. **Set Registration**:\n   - Under \"Registration preferences\", select \"Invite only\"\n   - This prevents random people from accessing your CMS\n\n3. **Enable Git Gateway** (for Decap CMS only):\n   - In Identity settings, scroll to \"Services\"\n   - Click \"Enable Git Gateway\"\n   - This allows Decap CMS to save content to your GitHub repo\n   - **Note**: Skip this step if you plan to use Sveltia CMS\n\n4. **Invite Yourself**:\n   - Go to the \"Identity\" tab in your dashboard\n   - Click \"Invite users\"\n   - Enter your email address\n\n### 9.3 Test Your CMS\n1. Visit `https://your-site-name.netlify.app/admin`\n2. Click \"Login with Netlify Identity\"\n3. Check your email and set your password\n4. You should see the Decap CMS interface!\n\n## Step 10: Upgrade to Modern CMS (Recommended)\n\nFor better performance and user experience, you can upgrade to Sveltia CMS, which is faster and more modern than Decap CMS while being fully compatible.\n\n### 10.1 Simple One-Line Change\nIn `public/admin/index.html`, replace the Decap script:\n\n```html\n<!-- Replace this line: -->\n<script src=\"https://unpkg.com/decap-cms@^3.0.0/dist/decap-cms.js\"></script>\n\n<!-- With this line: -->\n<script src=\"https://unpkg.com/@sveltia/cms/dist/sveltia-cms.js\"></script>\n```\n\n### 10.2 Disable Git Gateway (Important!)\nIf you enabled Git Gateway in Step 9.2, you need to disable it for Sveltia CMS:\n\n1. Go to your Netlify site dashboard\n2. Click \"Site Settings\" → \"Identity\" → \"Services\"\n3. **Disable Git Gateway**\n4. Sveltia CMS connects directly to GitHub and doesn't need Git Gateway\n\n### 10.3 Everything Else Stays the Same\n- Your `config.yml` works exactly the same\n- All your content remains unchanged\n- Authentication works identically\n- Just commit and push the change\n\nSveltia CMS provides the same functionality with better performance, a more modern interface, and direct GitHub integration.\n\n## How to Use Your CMS\n\n### Creating Blog Posts\n1. Visit `https://your-site-name.netlify.app/admin`\n2. Login with your credentials\n3. Click \"Blog Posts\" → \"New Blog Post\"\n4. Fill out the form:\n   - **Title**: Your post title\n   - **Date**: Publication date\n   - **Featured Image**: Upload an image (optional)\n   - **Excerpt**: Short description\n   - **Body**: Write your content in markdown\n5. Click \"Publish\" or save as draft\n6. The CMS automatically commits to GitHub\n7. Netlify rebuilds your site (takes 1-2 minutes)\n\n### Managing Pages\nCreate static pages like \"About\", \"Contact\", \"Services\":\n1. Click \"Pages\" → \"New Page\"\n2. Add title and content\n3. Publish\n\n### Uploading Images\n- Use the image widget in any post/page\n- Images are stored in `public/images/`\n- Automatically optimized by Netlify\n\n## Advanced Customization\n\n### Adding New Content Types\nWant to manage products, team members, or testimonials? Add to `config.yml`:\n\n```yaml\ncollections:\n  - name: \"products\"\n    label: \"Products\"\n    folder: \"content/products\"\n    create: true\n    fields:\n      - {label: \"Name\", name: \"name\", widget: \"string\"}\n      - {label: \"Price\", name: \"price\", widget: \"number\"}\n      - {label: \"Image\", name: \"image\", widget: \"image\"}\n      - {label: \"Description\", name: \"description\", widget: \"markdown\"}\n      \n  - name: \"team\"\n    label: \"Team Members\"\n    folder: \"content/team\"\n    create: true\n    fields:\n      - {label: \"Name\", name: \"name\", widget: \"string\"}\n      - {label: \"Role\", name: \"role\", widget: \"string\"}\n      - {label: \"Photo\", name: \"photo\", widget: \"image\"}\n      - {label: \"Bio\", name: \"bio\", widget: \"markdown\"}\n```\n\n### Styling Your Site\n- Edit CSS in `src/App.css`\n- Add Tailwind CSS for modern styling\n- Use CSS modules for component-specific styles\n\n### Adding More Features\n- Contact forms (use Netlify Forms)\n- Search functionality\n- Comments (integrate Disqus or similar)\n- Analytics (Google Analytics)\n- SEO optimization\n\n## Troubleshooting\n\n### CMS Won't Load\n- Check that Netlify Identity is enabled\n- Make sure you accepted the email invitation\n- For Decap CMS: Verify Git Gateway is enabled\n- For Sveltia CMS: Ensure Git Gateway is DISABLED\n- Check browser console for errors\n\n### Content Not Updating\n- Check Netlify deploy logs for build errors\n- Verify your markdown files have proper frontmatter\n- Ensure the `scripts/build-blog-data.js` runs successfully\n\n### Build Failures\n- Check that all required folders exist\n- Verify package.json scripts are correct\n- Look at Netlify build logs for specific errors\n\n### Authentication Issues\n- Make sure you're using the correct email\n- Check spam folder for invitation email\n- Try incognito/private browsing mode\n- Clear browser cache\n\n## Security Notes\n\n✅ **Your content is secure**: Stored in your GitHub repo  \n✅ **Admin access controlled**: Only invited users can login  \n✅ **No database to hack**: Static files only  \n✅ **HTTPS by default**: Netlify provides SSL certificates  \n✅ **Backup included**: Git history preserves all changes  \n\n## Performance Benefits\n\n✅ **Fast loading**: Static files served from CDN  \n✅ **SEO friendly**: Server-side rendering for search engines  \n✅ **Mobile optimized**: Responsive design out of the box  \n✅ **Offline capable**: Can work without internet (with service worker)  \n\n## What You've Built\n\n🎉 **Professional Website**: Modern, fast, and SEO-optimized  \n🎉 **Content Management System**: Easy editing for non-technical users  \n🎉 **Automated Workflow**: Content goes live automatically when published  \n🎉 **Scalable Platform**: Handles traffic growth without performance issues  \n🎉 **Cost-Effective Solution**: Free hosting and deployment for most sites  \n🎉 **Version Control**: Complete backup and history of all changes  \n\nThis setup provides enterprise-level capabilities using free, industry-standard tools. Content creators can manage the website without technical knowledge, while developers maintain full control over design and functionality.\n\n## Benefits of This Approach\n\n### For Content Creators\n✅ **User-Friendly Interface**: Write and publish content through a web interface  \n✅ **No Technical Skills Required**: WYSIWYG editor with markdown support  \n✅ **Instant Publishing**: Content goes live automatically after saving  \n✅ **Media Management**: Upload and manage images directly through the CMS  \n\n### For Developers  \n✅ **Modern Development Environment**: Full React development in Replit  \n✅ **Version Control**: All changes tracked and backed up in GitHub  \n✅ **Automated Deployment**: No manual deployment steps required  \n✅ **Scalable Architecture**: Static files served from global CDN  \n\n### For Website Owners\n✅ **Fast Performance**: Static sites load incredibly quickly  \n✅ **SEO Optimized**: Search engines easily index static content  \n✅ **Secure by Design**: No database or server vulnerabilities  \n✅ **Cost Effective**: Free hosting handles most traffic levels  \n\n## Extending Your Website\n\nThis foundation supports unlimited growth and customization:\n\n1. **Add New Content Types**: Products, team members, testimonials, portfolios\n2. **Enhance Design**: Custom themes, animations, and interactive elements  \n3. **Integrate Services**: Contact forms, newsletters, analytics, e-commerce\n4. **Advanced Features**: Search, comments, user accounts, payment processing\n5. **Performance Optimization**: Image optimization, caching, CDN configuration\n\nThe architecture scales from simple blogs to complex business websites while maintaining the same easy content management experience.\n","size_bytes":16743},"attached_assets/REPLIT_SETUP_GUIDE_1753916087318.md":{"content":"# Professional Website with Content Management System\n\nBuild a modern website with a powerful admin interface for managing content. Perfect for blogs, business sites, portfolios, and more. This setup gives you a professional CMS without the complexity or cost of traditional solutions.\n\n## What You'll Build\n- **Professional Website**: Fast, responsive, modern design\n- **Content Management**: Easy-to-use admin interface for blog posts and pages\n- **Automatic Publishing**: Write content and it goes live automatically\n- **No Technical Skills Required**: Content creators can manage everything through a web interface\n- **Free Hosting**: Deploy and host for free using industry-standard tools\n\n## How It Works\n1. **Develop**: Build your site in Replit with full development environment\n2. **Manage Content**: Use a web-based CMS to create blog posts and pages\n3. **Auto-Deploy**: Content automatically publishes to your live website\n4. **Version Control**: All content and code backed up in GitHub\n\n## Tech Stack\n- **Frontend**: React + Vite for fast, modern web development\n- **CMS**: Decap CMS for user-friendly content management\n- **Hosting**: GitHub for code storage, Netlify for website deployment\n- **Content**: Markdown files with automatic processing\n\n## Prerequisites\n- GitHub account (free)\n- Netlify account (free)  \n- Replit account (free)\n\n*No prior experience with CMS or deployment required - this guide covers everything step by step.*\n\n## Step 1: Create Your Project in Replit\n\n### 1.1 Start with a React Template\n1. In Replit, click \"Create Repl\"\n2. Choose \"Vite React\" template\n3. Name your project (e.g., \"my-website\")\n\n### 1.2 Setup Basic Structure\nCreate these folders and files in your project:\n\n```\nproject/\n├── public/\n│   └── admin/              # CMS admin interface\n├── src/                    # React app\n├── content/\n│   └── blog/              # Blog posts (markdown)\n├── netlify.toml           # Deployment config\n└── package.json\n```\n\n## Step 2: Install Dependencies\n\nIn Replit's Shell tab, run:\n```bash\nnpm install gray-matter\n```\n\nThis package helps read markdown files with frontmatter (metadata).\n\n## Step 3: Create CMS Admin Interface\n\n### 3.1 Create Admin HTML File\nCreate `public/admin/index.html`:\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Content Manager</title>\n</head>\n<body>\n  <!-- Netlify Identity for authentication -->\n  <script src=\"https://identity.netlify.com/v1/netlify-identity-widget.js\"></script>\n  \n  <!-- Decap CMS -->\n  <script src=\"https://unpkg.com/decap-cms@^3.0.0/dist/decap-cms.js\"></script>\n  \n  <!-- Authentication handling -->\n  <script>\n    if (window.netlifyIdentity) {\n      window.netlifyIdentity.on(\"init\", user => {\n        if (!user) {\n          window.netlifyIdentity.on(\"login\", () => {\n            document.location.href = \"/admin/\";\n          });\n        }\n      });\n    }\n  </script>\n</body>\n</html>\n```\n\n### 3.2 Create CMS Configuration\nCreate `public/admin/config.yml`:\n\n```yaml\nbackend:\n  name: github\n  repo: your-username/your-repo-name  # You'll update this later\n  branch: main\n\nmedia_folder: \"public/images\"\npublic_folder: \"/images\"\n\ncollections:\n  - name: \"blog\"\n    label: \"Blog Posts\"\n    folder: \"content/blog\"\n    create: true\n    slug: \"{{year}}-{{month}}-{{day}}-{{slug}}\"\n    fields:\n      - {label: \"Title\", name: \"title\", widget: \"string\"}\n      - {label: \"Date\", name: \"date\", widget: \"datetime\"}\n      - {label: \"Featured Image\", name: \"image\", widget: \"image\", required: false}\n      - {label: \"Excerpt\", name: \"excerpt\", widget: \"text\", required: false}\n      - {label: \"Body\", name: \"body\", widget: \"markdown\"}\n      \n  - name: \"pages\"\n    label: \"Pages\"\n    folder: \"content/pages\"\n    create: true\n    slug: \"{{slug}}\"\n    fields:\n      - {label: \"Title\", name: \"title\", widget: \"string\"}\n      - {label: \"Body\", name: \"body\", widget: \"markdown\"}\n```\n\n## Step 4: Create Sample Content\n\n### 4.1 Create Directories\nMake these folders:\n- `content/blog/`\n- `content/pages/`\n- `public/images/`\n\n### 4.2 Create Sample Blog Post\nCreate `content/blog/2024-01-01-welcome.md`:\n\n```markdown\n---\ntitle: \"Welcome to My Website\"\ndate: 2024-01-01T12:00:00.000Z\nexcerpt: \"This is my first blog post!\"\n---\n\n# Welcome!\n\nThis is my first blog post created with the CMS. \n\nYou can edit this content through the admin interface at `/admin`.\n\n## Features\n\n- Easy content management\n- Markdown support\n- Image uploads\n- SEO friendly\n```\n\n## Step 5: Setup Blog Reading\n\n### 5.1 Create Blog Data Script\nCreate `scripts/build-blog-data.js`:\n\n```javascript\nimport fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter';\n\nconst BLOG_DIR = 'content/blog';\nconst OUTPUT_DIR = 'public/data';\n\n// Create output directory if it doesn't exist\nif (!fs.existsSync(OUTPUT_DIR)) {\n  fs.mkdirSync(OUTPUT_DIR, { recursive: true });\n}\n\n// Read all blog posts\nconst posts = [];\nif (fs.existsSync(BLOG_DIR)) {\n  const files = fs.readdirSync(BLOG_DIR);\n  \n  files.forEach(file => {\n    if (file.endsWith('.md')) {\n      const filePath = path.join(BLOG_DIR, file);\n      const fileContent = fs.readFileSync(filePath, 'utf8');\n      const { data, content } = matter(fileContent);\n      \n      posts.push({\n        slug: file.replace('.md', ''),\n        title: data.title || 'Untitled',\n        date: data.date || new Date().toISOString(),\n        excerpt: data.excerpt || content.substring(0, 150) + '...',\n        image: data.image || null,\n        content: content\n      });\n    }\n  });\n}\n\n// Sort by date (newest first)\nposts.sort((a, b) => new Date(b.date) - new Date(a.date));\n\n// Write to JSON file\nfs.writeFileSync(\n  path.join(OUTPUT_DIR, 'blog-posts.json'), \n  JSON.stringify(posts, null, 2)\n);\n\nconsole.log(`Built ${posts.length} blog posts`);\n```\n\n### 5.2 Update package.json\nAdd this to your `scripts` section in `package.json`:\n\n```json\n{\n  \"scripts\": {\n    \"build-blog\": \"node scripts/build-blog-data.js\",\n    \"prebuild\": \"npm run build-blog\",\n    \"dev\": \"npm run build-blog && vite\",\n    \"build\": \"npm run build-blog && vite build\"\n  }\n}\n```\n\n## Step 6: Create Netlify Configuration\n\nCreate `netlify.toml` in your project root:\n\n```toml\n[build]\n  publish = \"dist\"\n  command = \"npm run build\"\n\n# Redirect all routes to index.html for single-page app\n[[redirects]]\n  from = \"/*\"\n  to = \"/index.html\"\n  status = 200\n\n[build.environment]\n  NODE_VERSION = \"18\"\n```\n\n## Step 7: Add Blog to Your React App\n\n### 7.1 Create Blog Components\nCreate `src/components/BlogList.jsx`:\n\n```jsx\nimport { useState, useEffect } from 'react';\n\nfunction BlogList() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch('/data/blog-posts.json')\n      .then(res => res.json())\n      .then(data => {\n        setPosts(data);\n        setLoading(false);\n      })\n      .catch(err => {\n        console.error('Error loading blog posts:', err);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) return <div>Loading...</div>;\n\n  return (\n    <div className=\"blog-list\">\n      <h1>Blog</h1>\n      {posts.map(post => (\n        <article key={post.slug} className=\"blog-post-preview\">\n          <h2>{post.title}</h2>\n          <p className=\"date\">{new Date(post.date).toLocaleDateString()}</p>\n          {post.image && <img src={post.image} alt={post.title} />}\n          <p>{post.excerpt}</p>\n          <a href={`/blog/${post.slug}`}>Read More</a>\n        </article>\n      ))}\n    </div>\n  );\n}\n\nexport default BlogList;\n```\n\n### 7.2 Update Your App\nUpdate `src/App.jsx` to include the blog:\n\n```jsx\nimport BlogList from './components/BlogList';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>My Website</h1>\n        <nav>\n          <a href=\"/\">Home</a>\n          <a href=\"/blog\">Blog</a>\n          <a href=\"/admin\">Admin</a>\n        </nav>\n      </header>\n      \n      <main>\n        <BlogList />\n      </main>\n      \n      <footer>\n        <p>&copy; 2024 My Website</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n```\n\n## Step 8: Push to GitHub\n\n### 8.1 Create GitHub Repository\n1. Go to [GitHub](https://github.com)\n2. Click \"New repository\"\n3. Name it (e.g., \"my-website\")\n4. Make it public\n5. Don't initialize with README (you already have files)\n\n### 8.2 Connect Replit to GitHub\nIn Replit:\n1. Click the Version Control tab (Git icon)\n2. Click \"Create a Git Repo\"\n3. Connect to your GitHub repository\n4. Commit and push your files\n\n### 8.3 Update CMS Config\nEdit `public/admin/config.yml` and update the repo line:\n```yaml\nbackend:\n  name: github\n  repo: your-github-username/your-repo-name  # Update this!\n  branch: main\n```\n\nCommit and push this change.\n\n## Step 9: Deploy to Netlify\n\n### 9.1 Connect to Netlify\n1. Go to [Netlify](https://netlify.com)\n2. Click \"New site from Git\"\n3. Choose GitHub and select your repository\n4. Netlify will automatically detect the build settings from `netlify.toml`\n5. Click \"Deploy site\"\n\n### 9.2 Enable Authentication (IMPORTANT!)\nAfter deployment:\n\n1. **Enable Identity**:\n   - Go to your site dashboard\n   - Click \"Site Settings\" → \"Identity\"\n   - Click \"Enable Identity\"\n\n2. **Set Registration**:\n   - Under \"Registration preferences\", select \"Invite only\"\n   - This prevents random people from accessing your CMS\n\n3. **Enable Git Gateway** (for Decap CMS only):\n   - In Identity settings, scroll to \"Services\"\n   - Click \"Enable Git Gateway\"\n   - This allows Decap CMS to save content to your GitHub repo\n   - **Note**: Skip this step if you plan to use Sveltia CMS\n\n4. **Invite Yourself**:\n   - Go to the \"Identity\" tab in your dashboard\n   - Click \"Invite users\"\n   - Enter your email address\n\n### 9.3 Test Your CMS\n1. Visit `https://your-site-name.netlify.app/admin`\n2. Click \"Login with Netlify Identity\"\n3. Check your email and set your password\n4. You should see the Decap CMS interface!\n\n## Step 10: Upgrade to Modern CMS (Recommended)\n\nFor better performance and user experience, you can upgrade to Sveltia CMS, which is faster and more modern than Decap CMS while being fully compatible.\n\n### 10.1 Simple One-Line Change\nIn `public/admin/index.html`, replace the Decap script:\n\n```html\n<!-- Replace this line: -->\n<script src=\"https://unpkg.com/decap-cms@^3.0.0/dist/decap-cms.js\"></script>\n\n<!-- With this line: -->\n<script src=\"https://unpkg.com/@sveltia/cms/dist/sveltia-cms.js\"></script>\n```\n\n### 10.2 Disable Git Gateway (Important!)\nIf you enabled Git Gateway in Step 9.2, you need to disable it for Sveltia CMS:\n\n1. Go to your Netlify site dashboard\n2. Click \"Site Settings\" → \"Identity\" → \"Services\"\n3. **Disable Git Gateway**\n4. Sveltia CMS connects directly to GitHub and doesn't need Git Gateway\n\n### 10.3 Everything Else Stays the Same\n- Your `config.yml` works exactly the same\n- All your content remains unchanged\n- Authentication works identically\n- Just commit and push the change\n\nSveltia CMS provides the same functionality with better performance, a more modern interface, and direct GitHub integration.\n\n## How to Use Your CMS\n\n### Creating Blog Posts\n1. Visit `https://your-site-name.netlify.app/admin`\n2. Login with your credentials\n3. Click \"Blog Posts\" → \"New Blog Post\"\n4. Fill out the form:\n   - **Title**: Your post title\n   - **Date**: Publication date\n   - **Featured Image**: Upload an image (optional)\n   - **Excerpt**: Short description\n   - **Body**: Write your content in markdown\n5. Click \"Publish\" or save as draft\n6. The CMS automatically commits to GitHub\n7. Netlify rebuilds your site (takes 1-2 minutes)\n\n### Managing Pages\nCreate static pages like \"About\", \"Contact\", \"Services\":\n1. Click \"Pages\" → \"New Page\"\n2. Add title and content\n3. Publish\n\n### Uploading Images\n- Use the image widget in any post/page\n- Images are stored in `public/images/`\n- Automatically optimized by Netlify\n\n## Advanced Customization\n\n### Adding New Content Types\nWant to manage products, team members, or testimonials? Add to `config.yml`:\n\n```yaml\ncollections:\n  - name: \"products\"\n    label: \"Products\"\n    folder: \"content/products\"\n    create: true\n    fields:\n      - {label: \"Name\", name: \"name\", widget: \"string\"}\n      - {label: \"Price\", name: \"price\", widget: \"number\"}\n      - {label: \"Image\", name: \"image\", widget: \"image\"}\n      - {label: \"Description\", name: \"description\", widget: \"markdown\"}\n      \n  - name: \"team\"\n    label: \"Team Members\"\n    folder: \"content/team\"\n    create: true\n    fields:\n      - {label: \"Name\", name: \"name\", widget: \"string\"}\n      - {label: \"Role\", name: \"role\", widget: \"string\"}\n      - {label: \"Photo\", name: \"photo\", widget: \"image\"}\n      - {label: \"Bio\", name: \"bio\", widget: \"markdown\"}\n```\n\n### Styling Your Site\n- Edit CSS in `src/App.css`\n- Add Tailwind CSS for modern styling\n- Use CSS modules for component-specific styles\n\n### Adding More Features\n- Contact forms (use Netlify Forms)\n- Search functionality\n- Comments (integrate Disqus or similar)\n- Analytics (Google Analytics)\n- SEO optimization\n\n## Troubleshooting\n\n### CMS Won't Load\n- Check that Netlify Identity is enabled\n- Make sure you accepted the email invitation\n- For Decap CMS: Verify Git Gateway is enabled\n- For Sveltia CMS: Ensure Git Gateway is DISABLED\n- Check browser console for errors\n\n### Content Not Updating\n- Check Netlify deploy logs for build errors\n- Verify your markdown files have proper frontmatter\n- Ensure the `scripts/build-blog-data.js` runs successfully\n\n### Build Failures\n- Check that all required folders exist\n- Verify package.json scripts are correct\n- Look at Netlify build logs for specific errors\n\n### Authentication Issues\n- Make sure you're using the correct email\n- Check spam folder for invitation email\n- Try incognito/private browsing mode\n- Clear browser cache\n\n## Security Notes\n\n✅ **Your content is secure**: Stored in your GitHub repo  \n✅ **Admin access controlled**: Only invited users can login  \n✅ **No database to hack**: Static files only  \n✅ **HTTPS by default**: Netlify provides SSL certificates  \n✅ **Backup included**: Git history preserves all changes  \n\n## Performance Benefits\n\n✅ **Fast loading**: Static files served from CDN  \n✅ **SEO friendly**: Server-side rendering for search engines  \n✅ **Mobile optimized**: Responsive design out of the box  \n✅ **Offline capable**: Can work without internet (with service worker)  \n\n## What You've Built\n\n🎉 **Professional Website**: Modern, fast, and SEO-optimized  \n🎉 **Content Management System**: Easy editing for non-technical users  \n🎉 **Automated Workflow**: Content goes live automatically when published  \n🎉 **Scalable Platform**: Handles traffic growth without performance issues  \n🎉 **Cost-Effective Solution**: Free hosting and deployment for most sites  \n🎉 **Version Control**: Complete backup and history of all changes  \n\nThis setup provides enterprise-level capabilities using free, industry-standard tools. Content creators can manage the website without technical knowledge, while developers maintain full control over design and functionality.\n\n## Benefits of This Approach\n\n### For Content Creators\n✅ **User-Friendly Interface**: Write and publish content through a web interface  \n✅ **No Technical Skills Required**: WYSIWYG editor with markdown support  \n✅ **Instant Publishing**: Content goes live automatically after saving  \n✅ **Media Management**: Upload and manage images directly through the CMS  \n\n### For Developers  \n✅ **Modern Development Environment**: Full React development in Replit  \n✅ **Version Control**: All changes tracked and backed up in GitHub  \n✅ **Automated Deployment**: No manual deployment steps required  \n✅ **Scalable Architecture**: Static files served from global CDN  \n\n### For Website Owners\n✅ **Fast Performance**: Static sites load incredibly quickly  \n✅ **SEO Optimized**: Search engines easily index static content  \n✅ **Secure by Design**: No database or server vulnerabilities  \n✅ **Cost Effective**: Free hosting handles most traffic levels  \n\n## Extending Your Website\n\nThis foundation supports unlimited growth and customization:\n\n1. **Add New Content Types**: Products, team members, testimonials, portfolios\n2. **Enhance Design**: Custom themes, animations, and interactive elements  \n3. **Integrate Services**: Contact forms, newsletters, analytics, e-commerce\n4. **Advanced Features**: Search, comments, user accounts, payment processing\n5. **Performance Optimization**: Image optimization, caching, CDN configuration\n\nThe architecture scales from simple blogs to complex business websites while maintaining the same easy content management experience.\n","size_bytes":16743},"attached_assets/content-1753900550388.md":{"content":"### About our law firm\n\nAt Eric T. Quinn, P.S, we have a common goal: Representing the Fire Service.\n\nManaging a government agency is no easy task. Every day you address many challenges, and we will help you solve them. We understand that the ultimate goal of the fire service is to ensure the safety and wellness of every citizen. But that does not come without a cost to management. You may face an employee who alleges discrimination; a citizen who makes numerous public records requests; or the passage of an excess levy, which requires not only political will, but financial and organizational knowledge. The list goes on. Without guidance in these circumstances, you may face financial difficulty. We can help you avoid that, through a rigorous practice of collaboration and communication, whether it be speaking with you directly or updating our monthly newsletter, The Firehouse Lawyer. We understand your issues.\n\n### [Our Newsletter](https://firehouselawyer.com/Newsletter.aspx)\n\n#### [Our latest issue…](https://firehouselawyer.com/Newsletters/July2025FINAL.pdf)\n\nSpecial-Meeting Notices Are KeyToday we discuss two OPMA cases involving notices of special meetings; we also consider apprenticeship reqiurements in public-works contracts, deductions from leave banks of FLSA-exempt employees, \"reverse distrimination,\" and some miscellaneous laws.\n\nSubscribe\n\n### [Our Practice Areas](https://firehouselawyer.com/PracticeAreas.aspx)\n\n- [Mergers and Consolidations](https://firehouselawyer.com/PracticeAreas.aspx#MergersAndConsolidations)\n- [Public Records](https://firehouselawyer.com/PracticeAreas.aspx#PublicRecordsAct)\n- [HIPAA Compliance](https://firehouselawyer.com/PracticeAreas.aspx#HIPAACompliance)\n- [Open Meetings](https://firehouselawyer.com/PracticeAreas.aspx#OpenPublicMeetings)\n- [Personnel Matters](https://firehouselawyer.com/PracticeAreas.aspx#PersonnelMatters)\n- [Negotiation and Arbitration](https://firehouselawyer.com/PracticeAreas.aspx#LaborNegotiationAndArbitration)\n- [Contract Review and Drafting](https://firehouselawyer.com/PracticeAreas.aspx#ContractReviewAndDrafting)\n- [Financial Management](https://firehouselawyer.com/PracticeAreas.aspx#FinancialManagement)\n- [Other](https://firehouselawyer.com/PracticeAreas.aspx#Other)\n\n### Our Attorneys\n\n#### [Eric T. Quinn](https://firehouselawyer.com/AttorneyEricQuinn.aspx)\n\nEric T. Quinn has recently joined Joe in his law practice, after graduating from Seattle University School of Law (Joe’s alma mater). He amassed numerous experiences in law school as a legal intern, ranging from criminal defense to civil litigation. Eric decided to join Joe’s firm during law school, after having won the first-year mock trial competition and desiring to transfer that skill to serve a sophisticated government clientele.\n\n#### [Joseph Quinn, Of Counsel](https://firehouselawyer.com/AttorneyJosephQuinn.aspx)\n\nJoseph F. Quinn represents virtually all of the Pierce County fire districts, among various other fire districts and regional fire authorities, along with 911 dispatch centers. He has argued before the United States Supreme Court. His extensive litigation and appellate experience, and his years spent as a commissioner of the Public Employment Relations Commission (appointed by Governor Booth Gardner, in 1986) is quite useful in this practice.\n\nSubscribe to our monthly newsletter and you will receive an email each month when our latest issue is published.\n\nYour EmailYour email is required to subscribe.\n\nreCAPTCHA\n\nRecaptcha requires verification.\n\nI'm not a robot\n\nreCAPTCHA\n\n[Privacy](https://www.google.com/intl/en/policies/privacy/) \\- [Terms](https://www.google.com/intl/en/policies/terms/)\n\nreCAPTCHA","size_bytes":3703},"attached_assets/content-1753900634484.md":{"content":"### Mergers and Consolidations\n\nMergers and Consolidations require a skilled attorney who understands not only their legal implications, but their political implications as well. Although Mergers and Consolidations has been a hot topic at many conferences in recent years, Mr. Quinn has actually been very active in consolidation and merger work since 1990.\n\nHe was personally very involved and remains involved in the following agencies formed as a result of such alliances: Central Pierce Fire & Rescue, East Pierce Fire & Rescue, West Pierce Fire & Rescue, Valley Regional Fire Authority, Riverside Fire Authority (Centralia area), West Thurston Regional Fire Authority, South King Fire & Rescue, and the list goes on and on.\n\nHe has also consulted with or advised planning groups, cities or towns and fire districts on such matters without being their attorney, such as Friday Harbor and San Juan Fire District No. 3, Bremerton and two Kitsap County fire districts, and many others. He has vigorously sought, throughout his entire career, to facilitate meaningful and lasting relationships between municipal entities.\n\n### Board Retreats\n\nEric and Joe Quinn facilitate annual Board retreats to train commissioners and administration about governance issues and working as a team, as is absolutely crucial in the fire service and government in general.\n\n### Open Public Meetings\n\nThe Open Public Meetings Act (OPMA) requires that all meetings of a governing body of an agency be open to the public, with limited exceptions. For years, Mr. Quinn has navigated these exceptions, and understands how your agency may fully comply with the OPMA. He has more than thirty years’ experience with such issues and deals with them every week in his practice. Now he often teaches classes on this law to fire commissioners, fire chiefs and their employees and/or volunteers to ensure compliance with state laws and regulations on retention of records.\n\n### Public Records Act\n\nThe Washington Public Records Act (PRA) is another “sunshine law” mandating government transparency. Much like the OPMA, this law is construed broadly and its exemptions are construed narrowly. This growing area of law requires that your staff be well trained on the intricacies of the PRA, but when counsel is needed, we are there for you quickly and with detailed advice. We deal with PRA issues in this office, practically on a daily basis, so we know when to claim an exemption and when not to bother. We have conducted trainings on this law as well.\n\n### HIPAA Compliance/Medical Records\n\nWashington and federal law are both very protective of the medical information of individual persons. Quite often, Mr. Quinn addresses the intricacies of these laws, to avoid the consequences of disclosing protected health information without proper authority. He is very conversant with these laws; sometimes we receive requests for advice on medical records issues many times in one week! He has developed numerous forms and policies to deal with HIPAA and the state's Health Care Information Act, so he often teaches classes on these laws.\n\n### Personnel/Labor Matters\n\nWe work in a fire station, and keep our doors open. Labor questions arise all the time, and fall under various different laws: Worker’s compensation, disability leave, employment discrimination (ADA/WLAD), workplace safety (WISHA/OSHA), harassment, policies and procedures, collective bargaining, employment contracts, the Fair Labor Standards Act, and the Family Medical Leave Act. The list goes on. Mr. Quinn's forty or more fire service clients probably employ approximately 2,000 employees and volunteers, so it is no wonder that personnel issues abound. This requires knowledge of numerous federal and state statutory schemes and some of them are complex. On any given week, 50% of the issues we address relate to personnel and labor.\n\n### Labor Negotiation and Arbitration\n\nWe are also available to assist in labor negotiations at the bargaining table or behind the scenes, and have done so on various occasions. If there is a contract grievance filed, and arbitration is needed, we are willing to represent the employer throughout the arbitration proceedings. If negotiations reach impasse and no labor contract can be reached through bargaining, remember that firefighter and police bargaining units are entitled to go to \"interest arbitration\" in which a three-member panel arbitrates the parties' differences and \"makes the contract\" for the parties. As a past PERC Commissioner, Mr. Quinn is very familiar with the attitude and interests of neutral arbitrators, and what they are looking for in an interest arbitration proceeding.\n\n### Contract Review and Drafting\n\nMore often than not, legal issues are resolved by recognizing the needs of those who have contrary interests to a client. Mr. Quinn has crafted and reviewed various mutual aid agreements and fire protection contracts, which were favorable to all parties involved, but most importantly, to his clients and the public they serve.\n\n### Financial Management\n\nProperty taxes and other financial issues can be baffling to elected officials and fire chiefs, but after more than thirty years in \"this business\" of local government, Mr. Quinn has considerable expertise with regard to property taxes, fire benefit charges, interlocal agreements, and just contracts in general. Whether it is public works or purchasing apparatus, we are familiar with all of the laws, exceptions and rules regarding procurement. We have also led our clients through proposing maintenance and operations levies, EMS levies, and bond issues. Additionally, we keep our clients informed about numerous methods of financing, including, but not limited to, the utilization of SEPA mitigation, service fees, benefit charges, and impact fees.\n\n### Other\n\nIn addition to all of the fire service work, we occasionally still practice in the area of land use and zoning. Even fire districts and RFA's occasionally need to get a permit to conduct certain activities on the land, such as a conditional use permit for a new fire station. Last, Mr. Quinn has drafted or reviewed scores of cellular site leases for various owners of property who hire him to deal with the major national and international companies who lease space on cell towers, water tanks, and sometimes fire and/or police emergency communications facilities.","size_bytes":6405},"attached_assets/content-1753900638729.md":{"content":"### Personal Background\n\nEric Quinn was born in University Place, Washington in 1982, and has lived in the Pacific Northwest his whole life, aside from a one-year stint in Michigan for law school. He graduated from Pacific Lutheran University in 2006. He is a member of the Rotary Club of Lakewood. Eric loves the outdoors and is also a performance artist. He does, however, spend most of his non-attorney time with family.\n\n### Legal Education\n\nEric graduated from the Seattle University School of Law, where he was a finalist in the second-year mock trial competition. He worked as a legal intern throughout all three years of his law school career.\n\n### Legal Background\n\nDuring his first year of law school, Eric worked at the State Appellate Defender's Office (SADO) in Detroit, Michigan. At SADO, he analyzed boxes (and boxes) of case files to determine if individuals had been wrongfully convicted of crimes based on faulty DNA evidence. After transferring to Seattle University for his second year of law school, he worked at the law firm of Patterson, Buchanan, Fobes, Leitch and Kalzer, P.S., where he dealt with issues including, but not limited to, the Public Records Act and the First Amendment. In his third year of law school he enjoyed an externship at the Snohomish County Prosecutor's Office, in the misdemeanor division, where he gained invaluable experience in the court room. That same year, he did another externship at the Pierce County Prosecutor's Office, in the Civil Division, where Joe Quinn had practiced between 1979 and 1983. There, Eric assisted in the defense of Pierce County against claims of defamation and negligence, either through oral advocacy in the courtroom or by writing motions and memoranda. He has done various presentations to the Washington Fire Commissioners Association and the Washington State Risk Management Group, addressing common issues arising in the Practice Areas of Eric T. Quinn, P.S.\n\n### Bar Admissions\n\nState of Washington, 2014","size_bytes":1993},"attached_assets/content-1753900641844.md":{"content":"# Server Error in '/' Application.\n\n## _The resource cannot be found._\n\n**Description:** HTTP 404. The resource you are looking for (or one of its dependencies) could have been removed, had its name changed, or is temporarily unavailable.  Please review the following URL and make sure that it is spelled correctly.\n\n\n**Requested URL:**/AttorneyJosephQuinn.aspxAttorneyEricQuinn.aspx","size_bytes":384},"attached_assets/content-1753900648372.md":{"content":"### Contact the Firehouse Lawyer today!\n\nEric T. Quinn\n\n[(253) 590-6628](tel:12535906628)\n\n[ericquinn@firehouselawyer2.com](mailto:ericquinn@firehouselawyer2.com)\n\nJoseph F. Quinn, Of Counsel\n\n[(253) 576-3232](tel:12535763232)\n\n[joequinn@firehouselawyer.com](mailto:joequinn@firehouselawyer.com)\n\n* * *\n\n### Office Location and Mailing Address\n\n7403 Lakewood Drive West, Suite # 11\n\nLakewood, WA 98499-7951\n\n\nBESbswy","size_bytes":416},"attached_assets/content-1753912460132.md":{"content":"[Skip to content](https://github.com/sveltia/sveltia-cms#start-of-content)\n\n[sveltia](https://github.com/sveltia)/ **[sveltia-cms](https://github.com/sveltia/sveltia-cms)** Public\n\n- [Notifications](https://github.com/login?return_to=%2Fsveltia%2Fsveltia-cms) You must be signed in to change notification settings\n- [Fork\\\\\n86](https://github.com/login?return_to=%2Fsveltia%2Fsveltia-cms)\n- [Star\\\\\n1.6k](https://github.com/login?return_to=%2Fsveltia%2Fsveltia-cms)\n\n\nNetlify/Decap CMS alternative. Fast, lightweight, Git-based headless CMS. Modern UX, first-class i18n support, mobile support + 100s of improvements. Framework-agnostic, open source & free.\n\n\n### License\n\n[MIT license](https://github.com/sveltia/sveltia-cms/blob/main/LICENSE.txt)\n\n[1.6k\\\\\nstars](https://github.com/sveltia/sveltia-cms/stargazers) [86\\\\\nforks](https://github.com/sveltia/sveltia-cms/forks) [Branches](https://github.com/sveltia/sveltia-cms/branches) [Tags](https://github.com/sveltia/sveltia-cms/tags) [Activity](https://github.com/sveltia/sveltia-cms/activity)\n\n[Star](https://github.com/login?return_to=%2Fsveltia%2Fsveltia-cms)\n\n[Notifications](https://github.com/login?return_to=%2Fsveltia%2Fsveltia-cms) You must be signed in to change notification settings\n\n# sveltia/sveltia-cms\n\nmain\n\n[**1** Branch](https://github.com/sveltia/sveltia-cms/branches) [**374** Tags](https://github.com/sveltia/sveltia-cms/tags)\n\n[Go to Branches page](https://github.com/sveltia/sveltia-cms/branches)[Go to Tags page](https://github.com/sveltia/sveltia-cms/tags)\n\nGo to file\n\nCode\n\nOpen more actions menu\n\n## Folders and files\n\n| Name | Name | Last commit message | Last commit date |\n| --- | --- | --- | --- |\n| ## Latest commit<br>[![kyoshino](https://avatars.githubusercontent.com/u/2929505?v=4&size=40)](https://github.com/kyoshino)[kyoshino](https://github.com/sveltia/sveltia-cms/commits?author=kyoshino)<br>[Hide sign-in options from test-repo](https://github.com/sveltia/sveltia-cms/commit/43e098c49892e45ea6b09dc8180aa19754b38994)<br>success<br>Jul 30, 2025<br>[43e098c](https://github.com/sveltia/sveltia-cms/commit/43e098c49892e45ea6b09dc8180aa19754b38994) · Jul 30, 2025<br>## History<br>[2,910 Commits](https://github.com/sveltia/sveltia-cms/commits/main/) <br>Open commit details<br>[View commit history for this file.](https://github.com/sveltia/sveltia-cms/commits/main/) |\n| [.github](https://github.com/sveltia/sveltia-cms/tree/main/.github \".github\") | [.github](https://github.com/sveltia/sveltia-cms/tree/main/.github \".github\") |  |  |\n| [.vscode](https://github.com/sveltia/sveltia-cms/tree/main/.vscode \".vscode\") | [.vscode](https://github.com/sveltia/sveltia-cms/tree/main/.vscode \".vscode\") |  |  |\n| [docs](https://github.com/sveltia/sveltia-cms/tree/main/docs \"docs\") | [docs](https://github.com/sveltia/sveltia-cms/tree/main/docs \"docs\") |  |  |\n| [scripts](https://github.com/sveltia/sveltia-cms/tree/main/scripts \"scripts\") | [scripts](https://github.com/sveltia/sveltia-cms/tree/main/scripts \"scripts\") |  |  |\n| [src/lib](https://github.com/sveltia/sveltia-cms/tree/main/src/lib \"This path skips through empty directories\") | [src/lib](https://github.com/sveltia/sveltia-cms/tree/main/src/lib \"This path skips through empty directories\") |  |  |\n| [.editorconfig](https://github.com/sveltia/sveltia-cms/blob/main/.editorconfig \".editorconfig\") | [.editorconfig](https://github.com/sveltia/sveltia-cms/blob/main/.editorconfig \".editorconfig\") |  |  |\n| [.eslintignore](https://github.com/sveltia/sveltia-cms/blob/main/.eslintignore \".eslintignore\") | [.eslintignore](https://github.com/sveltia/sveltia-cms/blob/main/.eslintignore \".eslintignore\") |  |  |\n| [.eslintrc.yaml](https://github.com/sveltia/sveltia-cms/blob/main/.eslintrc.yaml \".eslintrc.yaml\") | [.eslintrc.yaml](https://github.com/sveltia/sveltia-cms/blob/main/.eslintrc.yaml \".eslintrc.yaml\") |  |  |\n| [.gitattributes](https://github.com/sveltia/sveltia-cms/blob/main/.gitattributes \".gitattributes\") | [.gitattributes](https://github.com/sveltia/sveltia-cms/blob/main/.gitattributes \".gitattributes\") |  |  |\n| [.gitignore](https://github.com/sveltia/sveltia-cms/blob/main/.gitignore \".gitignore\") | [.gitignore](https://github.com/sveltia/sveltia-cms/blob/main/.gitignore \".gitignore\") |  |  |\n| [.ncurc.yaml](https://github.com/sveltia/sveltia-cms/blob/main/.ncurc.yaml \".ncurc.yaml\") | [.ncurc.yaml](https://github.com/sveltia/sveltia-cms/blob/main/.ncurc.yaml \".ncurc.yaml\") |  |  |\n| [.npmrc](https://github.com/sveltia/sveltia-cms/blob/main/.npmrc \".npmrc\") | [.npmrc](https://github.com/sveltia/sveltia-cms/blob/main/.npmrc \".npmrc\") |  |  |\n| [.nvmrc](https://github.com/sveltia/sveltia-cms/blob/main/.nvmrc \".nvmrc\") | [.nvmrc](https://github.com/sveltia/sveltia-cms/blob/main/.nvmrc \".nvmrc\") |  |  |\n| [.prettierignore](https://github.com/sveltia/sveltia-cms/blob/main/.prettierignore \".prettierignore\") | [.prettierignore](https://github.com/sveltia/sveltia-cms/blob/main/.prettierignore \".prettierignore\") |  |  |\n| [.prettierrc.yaml](https://github.com/sveltia/sveltia-cms/blob/main/.prettierrc.yaml \".prettierrc.yaml\") | [.prettierrc.yaml](https://github.com/sveltia/sveltia-cms/blob/main/.prettierrc.yaml \".prettierrc.yaml\") |  |  |\n| [.stylelintrc.yaml](https://github.com/sveltia/sveltia-cms/blob/main/.stylelintrc.yaml \".stylelintrc.yaml\") | [.stylelintrc.yaml](https://github.com/sveltia/sveltia-cms/blob/main/.stylelintrc.yaml \".stylelintrc.yaml\") |  |  |\n| [CONTRIBUTING.md](https://github.com/sveltia/sveltia-cms/blob/main/CONTRIBUTING.md \"CONTRIBUTING.md\") | [CONTRIBUTING.md](https://github.com/sveltia/sveltia-cms/blob/main/CONTRIBUTING.md \"CONTRIBUTING.md\") |  |  |\n| [LICENSE.txt](https://github.com/sveltia/sveltia-cms/blob/main/LICENSE.txt \"LICENSE.txt\") | [LICENSE.txt](https://github.com/sveltia/sveltia-cms/blob/main/LICENSE.txt \"LICENSE.txt\") |  |  |\n| [README.md](https://github.com/sveltia/sveltia-cms/blob/main/README.md \"README.md\") | [README.md](https://github.com/sveltia/sveltia-cms/blob/main/README.md \"README.md\") |  |  |\n| [cspell.config.yaml](https://github.com/sveltia/sveltia-cms/blob/main/cspell.config.yaml \"cspell.config.yaml\") | [cspell.config.yaml](https://github.com/sveltia/sveltia-cms/blob/main/cspell.config.yaml \"cspell.config.yaml\") |  |  |\n| [index.html](https://github.com/sveltia/sveltia-cms/blob/main/index.html \"index.html\") | [index.html](https://github.com/sveltia/sveltia-cms/blob/main/index.html \"index.html\") |  |  |\n| [jsconfig.json](https://github.com/sveltia/sveltia-cms/blob/main/jsconfig.json \"jsconfig.json\") | [jsconfig.json](https://github.com/sveltia/sveltia-cms/blob/main/jsconfig.json \"jsconfig.json\") |  |  |\n| [package.json](https://github.com/sveltia/sveltia-cms/blob/main/package.json \"package.json\") | [package.json](https://github.com/sveltia/sveltia-cms/blob/main/package.json \"package.json\") |  |  |\n| [pnpm-lock.yaml](https://github.com/sveltia/sveltia-cms/blob/main/pnpm-lock.yaml \"pnpm-lock.yaml\") | [pnpm-lock.yaml](https://github.com/sveltia/sveltia-cms/blob/main/pnpm-lock.yaml \"pnpm-lock.yaml\") |  |  |\n| [vite.config.js](https://github.com/sveltia/sveltia-cms/blob/main/vite.config.js \"vite.config.js\") | [vite.config.js](https://github.com/sveltia/sveltia-cms/blob/main/vite.config.js \"vite.config.js\") |  |  |\n| View all files |\n\n## Repository files navigation\n\n# Sveltia CMS: Netlify/Decap CMS alternative\n\n[Permalink: Sveltia CMS: Netlify/Decap CMS alternative](https://github.com/sveltia/sveltia-cms#sveltia-cms-netlifydecap-cms-alternative)\n\nSveltia CMS is a Git-based lightweight headless CMS under active development as a modern, powerful, quick replacement for Netlify CMS and Decap CMS. In some simple cases, migration is as easy as a single line of code change, although we are still working on improving compatibility.\n\nThe free, open source alternative/successor to Netlify/Decap CMS is now in public beta, turbocharged with great UX, performance, i18n support and so many more enhancements.\n\n[![Git-based headless CMS made right](https://raw.githubusercontent.com/sveltia/sveltia-cms/main/docs/screenshot-1.webp?20250405)](https://raw.githubusercontent.com/sveltia/sveltia-cms/main/docs/screenshot-1.webp?20250405)\n\n[![Fast and lightweight; modern UX/UI with dark mode](https://raw.githubusercontent.com/sveltia/sveltia-cms/main/docs/screenshot-2.webp?20250405)](https://raw.githubusercontent.com/sveltia/sveltia-cms/main/docs/screenshot-2.webp?20250405)\n\n[![Stock photo integration: Pexels, Pixabay, Unsplash](https://raw.githubusercontent.com/sveltia/sveltia-cms/main/docs/screenshot-3.webp?20250405)](https://raw.githubusercontent.com/sveltia/sveltia-cms/main/docs/screenshot-3.webp?20250405)\n\n[![Full-fledged Asset Library; first-class internationalization support; translation API integration](https://raw.githubusercontent.com/sveltia/sveltia-cms/main/docs/screenshot-4.webp?20250625)](https://raw.githubusercontent.com/sveltia/sveltia-cms/main/docs/screenshot-4.webp?20250625)\n\n[![Built-in image optimizer for WebP and SVG; mobile & tablet support](https://raw.githubusercontent.com/sveltia/sveltia-cms/main/docs/screenshot-5.webp?20250409)](https://raw.githubusercontent.com/sveltia/sveltia-cms/main/docs/screenshot-5.webp?20250409)\n\n[![Streamlined local and remote workflow; GitHub, GitLab Gitea & Forgejo support; single-line migration from Netlify/Decap CMS (depending on your current setup); Sveltia CMS](https://raw.githubusercontent.com/sveltia/sveltia-cms/main/docs/screenshot-6.webp?20250712)](https://raw.githubusercontent.com/sveltia/sveltia-cms/main/docs/screenshot-6.webp?20250712)\n\n## Table of contents\n\n[Permalink: Table of contents](https://github.com/sveltia/sveltia-cms#table-of-contents)\n\n- [Motivation](https://github.com/sveltia/sveltia-cms#motivation)\n  - [Our advantage](https://github.com/sveltia/sveltia-cms#our-advantage)\n  - [Our goals](https://github.com/sveltia/sveltia-cms#our-goals)\n- [Project status](https://github.com/sveltia/sveltia-cms#project-status)\n- [Differentiators](https://github.com/sveltia/sveltia-cms#differentiators)\n  - [Better UX](https://github.com/sveltia/sveltia-cms#better-ux)\n  - [Better performance](https://github.com/sveltia/sveltia-cms#better-performance)\n  - [Better productivity](https://github.com/sveltia/sveltia-cms#better-productivity)\n  - [Better accessibility](https://github.com/sveltia/sveltia-cms#better-accessibility)\n  - [Better security](https://github.com/sveltia/sveltia-cms#better-security)\n  - [Better installation](https://github.com/sveltia/sveltia-cms#better-installation)\n  - [Better configuration](https://github.com/sveltia/sveltia-cms#better-configuration)\n  - [Better backend support](https://github.com/sveltia/sveltia-cms#better-backend-support)\n  - [Better i18n support](https://github.com/sveltia/sveltia-cms#better-i18n-support)\n  - [Better collections](https://github.com/sveltia/sveltia-cms#better-collections)\n  - [Better content editing](https://github.com/sveltia/sveltia-cms#better-content-editing)\n  - [Better content preview](https://github.com/sveltia/sveltia-cms#better-content-preview)\n  - [Better data output](https://github.com/sveltia/sveltia-cms#better-data-output)\n  - [Better widgets](https://github.com/sveltia/sveltia-cms#better-widgets)\n    - [New widgets](https://github.com/sveltia/sveltia-cms#new-widgets)\n  - [Better asset management](https://github.com/sveltia/sveltia-cms#better-asset-management)\n  - [Better customization](https://github.com/sveltia/sveltia-cms#better-customization)\n  - [Better localization](https://github.com/sveltia/sveltia-cms#better-localization)\n- [Compatibility](https://github.com/sveltia/sveltia-cms#compatibility)\n  - [Features not to be implemented](https://github.com/sveltia/sveltia-cms#features-not-to-be-implemented)\n  - [Current limitations](https://github.com/sveltia/sveltia-cms#current-limitations)\n  - [Compatibility with Static CMS](https://github.com/sveltia/sveltia-cms#compatibility-with-static-cms)\n  - [Framework support](https://github.com/sveltia/sveltia-cms#framework-support)\n  - [Backend support](https://github.com/sveltia/sveltia-cms#backend-support)\n  - [Browser support](https://github.com/sveltia/sveltia-cms#browser-support)\n  - [Other notes](https://github.com/sveltia/sveltia-cms#other-notes)\n- [Getting started](https://github.com/sveltia/sveltia-cms#getting-started)\n  - [Installation & setup](https://github.com/sveltia/sveltia-cms#installation--setup)\n  - [Migration](https://github.com/sveltia/sveltia-cms#migration)\n    - [Editing the configuration file](https://github.com/sveltia/sveltia-cms#editing-the-configuration-file)\n    - [Migrating from Git Gateway backend](https://github.com/sveltia/sveltia-cms#migrating-from-git-gateway-backend)\n  - [Installing with npm](https://github.com/sveltia/sveltia-cms#installing-with-npm)\n  - [Updates](https://github.com/sveltia/sveltia-cms#updates)\n- [Tips & tricks](https://github.com/sveltia/sveltia-cms#tips--tricks)\n  - [Moving your site from Netlify to another hosting service](https://github.com/sveltia/sveltia-cms#moving-your-site-from-netlify-to-another-hosting-service)\n  - [Enabling autocomplete and validation for the configuration file](https://github.com/sveltia/sveltia-cms#enabling-autocomplete-and-validation-for-the-configuration-file)\n  - [Providing a JSON configuration file](https://github.com/sveltia/sveltia-cms#providing-a-json-configuration-file)\n  - [Providing multiple configuration files](https://github.com/sveltia/sveltia-cms#providing-multiple-configuration-files)\n  - [Working around an authentication error](https://github.com/sveltia/sveltia-cms#working-around-an-authentication-error)\n  - [Working with a local Git repository](https://github.com/sveltia/sveltia-cms#working-with-a-local-git-repository)\n  - [Enabling local development in Brave](https://github.com/sveltia/sveltia-cms#enabling-local-development-in-brave)\n  - [Using a custom icon for a collection](https://github.com/sveltia/sveltia-cms#using-a-custom-icon-for-a-collection)\n  - [Adding dividers to the collection list](https://github.com/sveltia/sveltia-cms#adding-dividers-to-the-collection-list)\n  - [Using a custom media folder for a collection](https://github.com/sveltia/sveltia-cms#using-a-custom-media-folder-for-a-collection)\n  - [Specifying default sort field and direction](https://github.com/sveltia/sveltia-cms#specifying-default-sort-field-and-direction)\n  - [Including Hugo’s special index file in a folder collection](https://github.com/sveltia/sveltia-cms#including-hugos-special-index-file-in-a-folder-collection)\n  - [Using singletons](https://github.com/sveltia/sveltia-cms#using-singletons)\n  - [Using keyboard shortcuts](https://github.com/sveltia/sveltia-cms#using-keyboard-shortcuts)\n  - [Translating entry fields with one click](https://github.com/sveltia/sveltia-cms#translating-entry-fields-with-one-click)\n  - [Localizing entry slugs](https://github.com/sveltia/sveltia-cms#localizing-entry-slugs)\n  - [Disabling non-default locale content](https://github.com/sveltia/sveltia-cms#disabling-non-default-locale-content)\n  - [Using a random ID for an entry slug](https://github.com/sveltia/sveltia-cms#using-a-random-id-for-an-entry-slug)\n  - [Configuring multiple media libraries](https://github.com/sveltia/sveltia-cms#configuring-multiple-media-libraries)\n  - [Optimizing images for upload](https://github.com/sveltia/sveltia-cms#optimizing-images-for-upload)\n  - [Disabling stock assets](https://github.com/sveltia/sveltia-cms#disabling-stock-assets)\n  - [Editing site deployment configuration files](https://github.com/sveltia/sveltia-cms#editing-site-deployment-configuration-files)\n  - [Editing data files with a top-level list](https://github.com/sveltia/sveltia-cms#editing-data-files-with-a-top-level-list)\n  - [Changing the input type of a DateTime field](https://github.com/sveltia/sveltia-cms#changing-the-input-type-of-a-datetime-field)\n  - [Rendering soft line breaks as hard line breaks in Markdown](https://github.com/sveltia/sveltia-cms#rendering-soft-line-breaks-as-hard-line-breaks-in-markdown)\n  - [Controlling data output](https://github.com/sveltia/sveltia-cms#controlling-data-output)\n  - [Understanding exceptions in data output](https://github.com/sveltia/sveltia-cms#understanding-exceptions-in-data-output)\n  - [Disabling automatic deployments](https://github.com/sveltia/sveltia-cms#disabling-automatic-deployments)\n  - [Setting up Content Security Policy](https://github.com/sveltia/sveltia-cms#setting-up-content-security-policy)\n  - [Showing the CMS version](https://github.com/sveltia/sveltia-cms#showing-the-cms-version)\n- [Support & feedback](https://github.com/sveltia/sveltia-cms#support--feedback)\n- [Contributions](https://github.com/sveltia/sveltia-cms#contributions)\n- [Roadmap](https://github.com/sveltia/sveltia-cms#roadmap)\n  - [v1.0](https://github.com/sveltia/sveltia-cms#v10)\n  - [v2.0](https://github.com/sveltia/sveltia-cms#v20)\n  - [Future](https://github.com/sveltia/sveltia-cms#future)\n- [Trivia](https://github.com/sveltia/sveltia-cms#trivia)\n- [Related links](https://github.com/sveltia/sveltia-cms#related-links)\n  - [As seen on](https://github.com/sveltia/sveltia-cms#as-seen-on)\n- [Disclaimer](https://github.com/sveltia/sveltia-cms#disclaimer)\n\n## Motivation\n\n[Permalink: Motivation](https://github.com/sveltia/sveltia-cms#motivation)\n\nSveltia CMS was born in November 2022, when the progress of Netlify CMS was stalled for more than six months. [@kyoshino](https://github.com/kyoshino)’s clients wanted to replace their Netlify CMS instances without much effort, mainly to get better internationalization (i18n) support.\n\nTo achieve radical improvements in UX, performance, i18n and other areas, it was ultimately decided to build an alternative from the ground up, while ensuring an easy migration path from the other. After proving the idea with a rapid [Svelte](https://svelte.dev/) prototype, development was accelerated to address their primary use cases. The new product has since been named Sveltia CMS and released as open source software to encourage wider adoption.\n\nWe loved the simple architecture of Netlify CMS that turned a Git repository into a database with a single page app served from a CDN plus a plain YAML config file. In support of the [Jamstack](https://jamstack.org/) concept, we wanted to revive it, modernize it, and take it to the next level.\n\n### Our advantage\n\n[Permalink: Our advantage](https://github.com/sveltia/sveltia-cms#our-advantage)\n\nDue to its unfortunate abandonment in early 2022, Netlify CMS spawned 3 successors:\n\n- [Static CMS](https://github.com/StaticJsCMS/static-cms): a community fork, initial commit made in September 2022 — discontinued in September 2024 after making meaningful improvements\n- **Sveltia CMS**: not a fork but a **complete rewrite** or “total reboot”, started in November 2022, first appeared on GitHub in March 2023\n- [Decap CMS](https://github.com/decaporg/decap-cms): a rebranded version, [announced in February 2023](https://www.netlify.com/blog/netlify-cms-to-become-decap-cms/) as the official successor with a Netlify agency partner taking ownership — mostly stagnant, with only occasional releases\n\nSveltia CMS is the only project that doesn’t inherit the complexity, technical debt, and numerous bugs of Netlify CMS, which was launched in 2015. Our product is better by design: We have rebuilt the app from the ground up using a [modern framework](https://svelte.dev/) while closely monitoring and analyzing the predecessor’s issue tracker. We don’t use any of their code. This allows us to make [hundreds of improvements](https://github.com/sveltia/sveltia-cms#differentiators) without getting stuck in an old system.\n\nWhile Sveltia CMS was created to replace legacy Netlify CMS instances, it can also be used as an alternative to other Netlify CMS successors. With its [solid i18n support](https://github.com/sveltia/sveltia-cms#better-i18n-support), we’re hoping our product will eventually be an appearing option for anyone looking for a free headless CMS.\n\n### Our goals\n\n[Permalink: Our goals](https://github.com/sveltia/sveltia-cms#our-goals)\n\n- Making Sveltia CMS a viable, definitive successor to Netlify CMS\n- Empowering SMBs and individuals who need a free, yet powerful, high-quality CMS solution\n- Emerging as the leading open source offering in the Git-based CMS market\n- Extending its capabilities as digital asset management (DAM) software\n- Showcasing the power of Svelte and UX engineering\n\n## Project status\n\n[Permalink: Project status](https://github.com/sveltia/sveltia-cms#project-status)\n\nSveltia CMS is currently in **beta** and version 1.0 (GA) is expected to ship in late 2025. Check our [release notes](https://github.com/sveltia/sveltia-cms/releases) and follow us on [Bluesky](https://bsky.app/profile/sveltiacms.app) for updates. See also our [roadmap](https://github.com/sveltia/sveltia-cms#roadmap).\n\nWhile we fix reported bugs as quickly as possible, usually within 24 hours, our overall progress may be slower than you think. The thing is, it’s not just a personal project of [@kyoshino](https://github.com/kyoshino), but also a complicated system involving various kinds of activities that require considerable effort:\n\n- Ensuring substantial [compatibility with Netlify/Decap CMS](https://github.com/sveltia/sveltia-cms#compatibility)\n- Tackling as many [Netlify/Decap CMS issues](https://github.com/decaporg/decap-cms/issues) as possible\n\n  - So far, 240+ issues, or 495+ if including duplicates, have been effectively solved in Sveltia CMS (Yes, you read it right)\n  - Target:\n    - 250 issues, or 500 if including duplicates, by GA — Almost there!\n    - 400 issues, or 800 if including duplicates, in the future 💪\n    - or every single issue that’s relevant, fixable, and worth dealing with 🔥\n  - Issues include everything from feature requests to bug reports and [issues closed as stale](https://github.com/decaporg/decap-cms/issues?q=is%3Aissue+%22Closing+as+stale%22) or without an effective solution, as well as [discussions](https://github.com/decaporg/decap-cms/discussions) and stalled [pull requests](https://github.com/decaporg/decap-cms/pulls)\n  - Many of the bugs, including the annoying crashes, have already been solved\n    - The remaining bugs are mostly related to [unimplemented features](https://github.com/sveltia/sveltia-cms#current-limitations)\n  - Many of their [top-voted features](https://github.com/decaporg/decap-cms/issues?q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc) are on our table or already implemented in Sveltia CMS\n- Solving [our own issues](https://github.com/sveltia/sveltia-cms/issues)\n- Implementing our own enhancement ideas for every part of the product\n- Responding to requests from the maintainer’s clients\n- Making the code clean and maintainable\n\n[![240 Netlify/Decap CMS issues solved in Sveltia CMS](https://raw.githubusercontent.com/sveltia/sveltia-cms/main/docs/headline-1.webp?20250729)](https://raw.githubusercontent.com/sveltia/sveltia-cms/main/docs/headline-1.webp?20250729)\n\n## Differentiators\n\n[Permalink: Differentiators](https://github.com/sveltia/sveltia-cms#differentiators)\n\nNetlify/Decap CMS users will definitely be pleased and surprised by the numerous improvements we have made, from the small to the large. Here’s what makes Sveltia CMS different. Look how serious we are!\n\nNote: This lengthy section compares Sveltia CMS with both Netlify CMS and Decap CMS. Some of the listed bugs may have been fixed in the current version of Decap CMS.\n\n### Better UX\n\n[Permalink: Better UX](https://github.com/sveltia/sveltia-cms#better-ux)\n\n- Created and actively maintained by an [experienced UX engineer](https://github.com/kyoshino) who loves code, design, marketing and problem solving. You can expect constant improvements to the user experience (UX) and developer experience (DX) across the platform.\n- The maintainer tries to respond to bug reports as quickly as possible. While there are no guarantees, the typical turnaround time for a bug fix is less than 24 hours.\n- Frequent releases deliver new features and enhancements to users faster. Most of our minor [releases](https://github.com/sveltia/sveltia-cms/releases) address one or more Netlify/Decap CMS issues, giving you even more reasons to switch from the legacy predecessor.\n- Offers a modern, intuitive user interface that utilizes the full viewport,[1](https://github.com/sveltia/sveltia-cms#user-content-fn-178-badaa007462add5cc68ab2bbbaa66912) inspired in part by the Netlify CMS v3 prototype.[2](https://github.com/sveltia/sveltia-cms#user-content-fn-1-badaa007462add5cc68ab2bbbaa66912)[3](https://github.com/sveltia/sveltia-cms#user-content-fn-211-badaa007462add5cc68ab2bbbaa66912)[4](https://github.com/sveltia/sveltia-cms#user-content-fn-212-badaa007462add5cc68ab2bbbaa66912)[5](https://github.com/sveltia/sveltia-cms#user-content-fn-213-badaa007462add5cc68ab2bbbaa66912)[6](https://github.com/sveltia/sveltia-cms#user-content-fn-214-badaa007462add5cc68ab2bbbaa66912)\n- Provides immersive dark mode.[7](https://github.com/sveltia/sveltia-cms#user-content-fn-2-badaa007462add5cc68ab2bbbaa66912) The UI theme follows the user’s system preference by default and can be changed in the application settings.\n- Users can easily manage content on-the-go with mobile and tablet support.[8](https://github.com/sveltia/sveltia-cms#user-content-fn-18-badaa007462add5cc68ab2bbbaa66912)[9](https://github.com/sveltia/sveltia-cms#user-content-fn-215-badaa007462add5cc68ab2bbbaa66912)\n  - For a smoother experience, we even go beyond responsive design with optimized navigation, [view transitions](https://developer.chrome.com/docs/web-platform/view-transitions), larger buttons, and other tweaks. However, there are still rough edges, and we are working to fully optimize the app for small screens and touch devices.\n  - If you’re already signed in on your desktop, open the Account menu in the top right corner of the CMS, click Sign In with Mobile, and scan the QR code for passwordless sign-in. Your settings will be automatically copied.\n- Made with [Svelte](https://svelte.dev/), not React, means we can spend more time on UX rather than tedious state management. It also allows us to avoid common fatal React application crashes.[10](https://github.com/sveltia/sveltia-cms#user-content-fn-113-badaa007462add5cc68ab2bbbaa66912)[11](https://github.com/sveltia/sveltia-cms#user-content-fn-129-badaa007462add5cc68ab2bbbaa66912) Best of all, Svelte offers great performance.\n- Other crashes in Netlify/Decap CMS are also irrelevant to us, making Sveltia CMS much more stable.[12](https://github.com/sveltia/sveltia-cms#user-content-fn-112-badaa007462add5cc68ab2bbbaa66912)[13](https://github.com/sveltia/sveltia-cms#user-content-fn-203-badaa007462add5cc68ab2bbbaa66912)[14](https://github.com/sveltia/sveltia-cms#user-content-fn-204-badaa007462add5cc68ab2bbbaa66912)[15](https://github.com/sveltia/sveltia-cms#user-content-fn-260-badaa007462add5cc68ab2bbbaa66912)[16](https://github.com/sveltia/sveltia-cms#user-content-fn-265-badaa007462add5cc68ab2bbbaa66912)\n- We build [our own UI component library](https://github.com/sveltia/sveltia-ui), including custom dialogs, to ensure optimal usability without compromising accessibility.[17](https://github.com/sveltia/sveltia-cms#user-content-fn-196-badaa007462add5cc68ab2bbbaa66912)[18](https://github.com/sveltia/sveltia-cms#user-content-fn-205-badaa007462add5cc68ab2bbbaa66912)[19](https://github.com/sveltia/sveltia-cms#user-content-fn-206-badaa007462add5cc68ab2bbbaa66912)[20](https://github.com/sveltia/sveltia-cms#user-content-fn-207-badaa007462add5cc68ab2bbbaa66912)[21](https://github.com/sveltia/sveltia-cms#user-content-fn-208-badaa007462add5cc68ab2bbbaa66912)[22](https://github.com/sveltia/sveltia-cms#user-content-fn-209-badaa007462add5cc68ab2bbbaa66912)[23](https://github.com/sveltia/sveltia-cms#user-content-fn-210-badaa007462add5cc68ab2bbbaa66912)\n- Users can personalize the application with various settings, including appearance and language. Developer Mode can also be enabled.\n- Never miss out on the latest features and bug fixes by being notified when an update to the CMS is available.[24](https://github.com/sveltia/sveltia-cms#user-content-fn-31-badaa007462add5cc68ab2bbbaa66912) Then update to the latest version with a single click.[25](https://github.com/sveltia/sveltia-cms#user-content-fn-66-badaa007462add5cc68ab2bbbaa66912)\n\n### Better performance\n\n[Permalink: Better performance](https://github.com/sveltia/sveltia-cms#better-performance)\n\n- Built completely from scratch with [Svelte](https://svelte.dev/) instead of forking React-based Netlify/Decap CMS. The app starts fast and stays fast with [no virtual DOM overhead](https://svelte.dev/blog/virtual-dom-is-pure-overhead). Note that Svelte is a compiler and Sveltia CMS is framework-agnostic; it’s served as a vanilla JavaScript bundle.\n- Small footprint: The bundle size is less than 500 KB when minified and [brotlied](https://en.wikipedia.org/wiki/Brotli), which is much lighter than Netlify CMS (1.5 MB), Decap CMS (1.5 MB) and Static CMS (2.6 MB).[26](https://github.com/sveltia/sveltia-cms#user-content-fn-57-badaa007462add5cc68ab2bbbaa66912)[27](https://github.com/sveltia/sveltia-cms#user-content-fn-64-badaa007462add5cc68ab2bbbaa66912) This number is remarkable because even though some Netlify/Decap CMS features are [omitted](https://github.com/sveltia/sveltia-cms#features-not-to-be-implemented) or [unimplemented](https://github.com/sveltia/sveltia-cms#current-limitations) in Sveltia CMS, we have added a lot of new features. That’s the power of [Svelte 5](https://svelte.dev/blog/svelte-5-is-alive) \\+ [Vite](https://vite.dev/).\n- Uses the GraphQL API for GitHub and GitLab to quickly fetch content at once, so that entries and assets can be listed and searched instantly[28](https://github.com/sveltia/sveltia-cms#user-content-fn-32-badaa007462add5cc68ab2bbbaa66912)[29](https://github.com/sveltia/sveltia-cms#user-content-fn-65-badaa007462add5cc68ab2bbbaa66912) (the useless `search` configuration option is therefore ignored). It also avoids the slowness and potential API rate limit violations caused by hundreds of requests with Relation fields.[30](https://github.com/sveltia/sveltia-cms#user-content-fn-14-badaa007462add5cc68ab2bbbaa66912)\n- Saving entries and assets to GitHub is also much faster thanks to the [GraphQL mutation](https://github.blog/changelog/2021-09-13-a-simpler-api-for-authoring-commits/).\n- The Gitea/Forgejo backend is also faster because it utilizes an efficient API method introduced in Gitea 1.24 and Forgejo 12.0.\n- Our [local repository workflow](https://github.com/sveltia/sveltia-cms#working-with-a-local-git-repository) utilizes the modern [File System Access API](https://developer.chrome.com/docs/capabilities/web-apis/file-system-access) to read and write files natively through the web browser, rather than using a slow, ad hoc REST API through a proxy server.\n- Sorting, filtering and grouping of entries is done instantly without reloading the entire content.\n- Uses caching, lazy loading and infinite scrolling techniques. A list of repository files is stored locally for faster startup and bandwidth savings.\n- Thumbnails of assets, including videos and PDF files, are generated and cached for faster rendering of the Asset Library and other parts of the CMS.[31](https://github.com/sveltia/sveltia-cms#user-content-fn-39-badaa007462add5cc68ab2bbbaa66912)[32](https://github.com/sveltia/sveltia-cms#user-content-fn-38-badaa007462add5cc68ab2bbbaa66912)\n- No typing lag on input fields, especially within nested lists and objects.[33](https://github.com/sveltia/sveltia-cms#user-content-fn-77-badaa007462add5cc68ab2bbbaa66912)\n- The entry preview doesn’t use an `<iframe>` by default because it’s a performance overhead.[34](https://github.com/sveltia/sveltia-cms#user-content-fn-179-badaa007462add5cc68ab2bbbaa66912)\n\n### Better productivity\n\n[Permalink: Better productivity](https://github.com/sveltia/sveltia-cms#better-productivity)\n\n- Developers can [work with a local Git repository](https://github.com/sveltia/sveltia-cms#working-with-a-local-git-repository) without any additional configuration or proxy server, resulting in a streamlined workflow and improved performance.[35](https://github.com/sveltia/sveltia-cms#user-content-fn-26-badaa007462add5cc68ab2bbbaa66912)\n  - It also avoids a number of issues, including potential dependency corruption,[36](https://github.com/sveltia/sveltia-cms#user-content-fn-158-badaa007462add5cc68ab2bbbaa66912) a 30 MB file size limit,[37](https://github.com/sveltia/sveltia-cms#user-content-fn-51-badaa007462add5cc68ab2bbbaa66912) an unknown error with `publish_mode`,[38](https://github.com/sveltia/sveltia-cms#user-content-fn-75-badaa007462add5cc68ab2bbbaa66912) and an unused `logo_url`.[39](https://github.com/sveltia/sveltia-cms#user-content-fn-49-badaa007462add5cc68ab2bbbaa66912)\n  - When you delete an entry or an asset file, the empty folder that contains it is also deleted, so you don’t have to delete it manually.\n- Provides a smoother user experience in the Content Editor:\n  - A local backup of an entry draft is automatically created without interruption by a confirmation dialog, which annoys users and can cause a page navigation problem if dismissed.[40](https://github.com/sveltia/sveltia-cms#user-content-fn-106-badaa007462add5cc68ab2bbbaa66912) The backup can then be reliably restored without unexpected overwriting.[41](https://github.com/sveltia/sveltia-cms#user-content-fn-85-badaa007462add5cc68ab2bbbaa66912)\n  - Click once (the Save button) instead of twice (Publish > Publish now) to save an entry. Or just hit the `Ctrl+S` (Windows/Linux) or `Command+S` (macOS) key to save your time.\n  - The editor closes automatically when an entry is saved. This behaviour can be changed in the application settings.\n- Uploading files can be done with drag and drop.[42](https://github.com/sveltia/sveltia-cms#user-content-fn-20-badaa007462add5cc68ab2bbbaa66912)\n- Users can upload multiple files at once to the Asset Library.\n- Users can delete multiple entries and assets at once.\n- Instant full-text search with results sorted by relevance helps you find entries faster.\n- Some [keyboard shortcuts](https://github.com/sveltia/sveltia-cms#using-keyboard-shortcuts) are available for faster editing.\n\n### Better accessibility\n\n[Permalink: Better accessibility](https://github.com/sveltia/sveltia-cms#better-accessibility)\n\n- Improved keyboard handling lets you efficiently navigate through UI elements using the Tab, Space, Enter and arrow keys.[43](https://github.com/sveltia/sveltia-cms#user-content-fn-17-badaa007462add5cc68ab2bbbaa66912)[44](https://github.com/sveltia/sveltia-cms#user-content-fn-67-badaa007462add5cc68ab2bbbaa66912)\n- Comprehensive [WAI-ARIA](https://w3c.github.io/aria/) support enables users who rely on screen readers such as NVDA and VoiceOver.[45](https://github.com/sveltia/sveltia-cms#user-content-fn-228-badaa007462add5cc68ab2bbbaa66912) An announcement is read out when you navigate to another page.\n- The rich text editor is built with [Lexical](https://lexical.dev/), which is said to follow accessibility best practices. The [Dragon NaturallySpeaking support](https://lexical.dev/docs/packages/lexical-dragon) is enabled.\n- Ensures sufficient contrast between the foreground text and background colours.\n- Enabled and disabled buttons can be clearly distinguished.[46](https://github.com/sveltia/sveltia-cms#user-content-fn-105-badaa007462add5cc68ab2bbbaa66912)\n- Links are underlined by default to make them easier to recognize. This behaviour can be changed in the Accessibility Settings if you prefer.\n- Honours your operating system’s [reduced motion](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion) and [reduced transparency](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-transparency) settings. Support for [high contrast mode](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-contrast) will be added later.\n- Browser console logs for developers are readable in either light or dark mode.[47](https://github.com/sveltia/sveltia-cms#user-content-fn-116-badaa007462add5cc68ab2bbbaa66912)\n- We’ll continue to test and improve the application to meet [WCAG 2.2](https://w3c.github.io/wcag/guidelines/22/).\n\n### Better security\n\n[Permalink: Better security](https://github.com/sveltia/sveltia-cms#better-security)\n\n- Avoids vulnerabilities in dependencies through constant updates, Dependabot alerts, [`pnpm audit`](https://pnpm.io/cli/audit), and frequent releases, unlike Netlify/Decap CMS where a number of high severity vulnerabilities remain unpatched for a long time.[48](https://github.com/sveltia/sveltia-cms#user-content-fn-33-badaa007462add5cc68ab2bbbaa66912)\n- Thanks to pnpm, Svelte, Vite, GitHub Actions and [npm package provenance](https://github.blog/security/supply-chain-security/introducing-npm-package-provenance/), our release process is fast, reliable and transparent. This setup makes it easy to verify the integrity of published code and assets. It also helps us avoid errors that can occur with manual build steps.[49](https://github.com/sveltia/sveltia-cms#user-content-fn-264-badaa007462add5cc68ab2bbbaa66912)\n- We have documented how to [set up a Content Security Policy](https://github.com/sveltia/sveltia-cms#setting-up-content-security-policy) for the CMS to prevent any unexpected errors or otherwise insecure configuration.[50](https://github.com/sveltia/sveltia-cms#user-content-fn-108-badaa007462add5cc68ab2bbbaa66912)\n- The `unsafe-eval` and `unsafe-inline` keywords are not needed in the `script-src` CSP directive.[51](https://github.com/sveltia/sveltia-cms#user-content-fn-34-badaa007462add5cc68ab2bbbaa66912)\n- The `same-origin` referrer policy is automatically set with a `<meta>` tag.\n- Sveltia CMS has a [secure context](https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts) requirement that forces the site content, including the CMS configuration file, to be served over HTTPS.\n- GitHub commits are automatically GPG-signed and [marked as verified](https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification).[52](https://github.com/sveltia/sveltia-cms#user-content-fn-144-badaa007462add5cc68ab2bbbaa66912)\n- Our [local repository workflow](https://github.com/sveltia/sveltia-cms#working-with-a-local-git-repository) doesn’t require a proxy server, reducing an attack surface.[36](https://github.com/sveltia/sveltia-cms#user-content-fn-158-badaa007462add5cc68ab2bbbaa66912)\n\n### Better installation\n\n[Permalink: Better installation](https://github.com/sveltia/sveltia-cms#better-installation)\n\n- Sveltia CMS is built with [Svelte](https://svelte.dev/), and we only publish compiled vanilla JavaScript bundles, so there are no React compatibility issues that might prevent developers from upgrading a project for many months.[53](https://github.com/sveltia/sveltia-cms#user-content-fn-177-badaa007462add5cc68ab2bbbaa66912) We haven’t actually integrated React for custom widgets and other features yet, but anyway, no dependencies will be installed when you [install the app with npm](https://github.com/sveltia/sveltia-cms#installing-with-npm).\n- Sveltia CMS also won’t cause peer dependency conflicts mainly due to legacy third-party React UI libraries.[54](https://github.com/sveltia/sveltia-cms#user-content-fn-175-badaa007462add5cc68ab2bbbaa66912)[55](https://github.com/sveltia/sveltia-cms#user-content-fn-237-badaa007462add5cc68ab2bbbaa66912) We build the app using [our own Svelte UI component library](https://github.com/sveltia/sveltia-ui) to reduce reliance on third parties.\n- Some servers and frameworks are known to remove the trailing slash from the CMS URL ( `/admin`) depending on the configuration. In such cases, the config file is loaded from the proper URL ( `/admin/config.yml`) instead of a regular relative URL ( `./config.yml` = `/config.yml`), which results in a 404 Not Found error.[56](https://github.com/sveltia/sveltia-cms#user-content-fn-107-badaa007462add5cc68ab2bbbaa66912)\n- The [robots `meta` tag](https://developers.google.com/search/docs/crawling-indexing/robots-meta-tag) is automatically added to HTML to prevent the admin page from being indexed by search engines.[57](https://github.com/sveltia/sveltia-cms#user-content-fn-174-badaa007462add5cc68ab2bbbaa66912) Developers are still encouraged to manually add `<meta name=\"robots\" content=\"noindex\">` to `index.html`, as not all crawlers support dynamically added tags. However, our solution should at least work with Google in case you forget to do so.\n- Initializing the CMS twice (due to the incorrect or missing placement of `window.CMS_MANUAL_INIT`) will not result in a `NotFoundError`.[58](https://github.com/sveltia/sveltia-cms#user-content-fn-251-badaa007462add5cc68ab2bbbaa66912)\n- Sveltia CMS automatically enables [manual initialization](https://decapcms.org/docs/manual-initialization/) when you import the JavaScript module, so you don’t need to have `window.CMS_MANUAL_INIT = true` in your code.\n\n### Better configuration\n\n[Permalink: Better configuration](https://github.com/sveltia/sveltia-cms#better-configuration)\n\n- Sveltia CMS supports a [JSON configuration file](https://github.com/sveltia/sveltia-cms#providing-a-json-configuration-file) that can be generated for bulk or complex collections.[59](https://github.com/sveltia/sveltia-cms#user-content-fn-60-badaa007462add5cc68ab2bbbaa66912)\n- Also supports [multiple configuration files](https://github.com/sveltia/sveltia-cms#providing-multiple-configuration-files) to allow developers to modularize the configuration.[60](https://github.com/sveltia/sveltia-cms#user-content-fn-197-badaa007462add5cc68ab2bbbaa66912)\n- We provide an [up-to-date JSON schema](https://github.com/sveltia/sveltia-cms#enabling-autocomplete-and-validation-for-the-configuration-file) for YAML/JSON configuration files, which enables autocomplete and validation in VS Code and other code editors.[61](https://github.com/sveltia/sveltia-cms#user-content-fn-253-badaa007462add5cc68ab2bbbaa66912)\n- Improved TypeScript support: We keep our type definitions for `CMS.init()` and other methods complete, accurate, up-to-date and annotated.[62](https://github.com/sveltia/sveltia-cms#user-content-fn-190-badaa007462add5cc68ab2bbbaa66912)[63](https://github.com/sveltia/sveltia-cms#user-content-fn-191-badaa007462add5cc68ab2bbbaa66912)[64](https://github.com/sveltia/sveltia-cms#user-content-fn-192-badaa007462add5cc68ab2bbbaa66912)[65](https://github.com/sveltia/sveltia-cms#user-content-fn-193-badaa007462add5cc68ab2bbbaa66912)[66](https://github.com/sveltia/sveltia-cms#user-content-fn-227-badaa007462add5cc68ab2bbbaa66912) This makes it easier to provide a site config object when [manually initializing](https://decapcms.org/docs/manual-initialization/) the CMS.\n\n### Better backend support\n\n[Permalink: Better backend support](https://github.com/sveltia/sveltia-cms#better-backend-support)\n\nThe [GitHub](https://decapcms.org/docs/github-backend/), [GitLab](https://decapcms.org/docs/gitlab-backend/), [Gitea/Forgejo](https://decapcms.org/docs/gitea-backend/) and [Test](https://decapcms.org/docs/test-backend/) backends are available in Sveltia CMS. For [performance reasons](https://github.com/sveltia/sveltia-cms#features-not-to-be-implemented), we don’t support [Azure](https://decapcms.org/docs/azure-backend/), [Bitbucket](https://decapcms.org/docs/bitbucket-backend/) and [Git Gateway](https://decapcms.org/docs/git-gateway-backend/).\n\n- Uses the GraphQL API where possible for better performance, as mentioned above. You don’t need to set the `use_graphql` option to enable it for GitHub and GitLab.[29](https://github.com/sveltia/sveltia-cms#user-content-fn-65-badaa007462add5cc68ab2bbbaa66912)\n- The Git branch name is automatically set to the repository’s default branch ( `main`, `master` or whatever) if not specified in the configuration file, preventing data loading errors due to a hardcoded fallback to `master`.[67](https://github.com/sveltia/sveltia-cms#user-content-fn-95-badaa007462add5cc68ab2bbbaa66912)[68](https://github.com/sveltia/sveltia-cms#user-content-fn-27-badaa007462add5cc68ab2bbbaa66912) If a branch name is specified, it works as expected.[69](https://github.com/sveltia/sveltia-cms#user-content-fn-232-badaa007462add5cc68ab2bbbaa66912)\n- It’s possible to [disable automatic deployments](https://github.com/sveltia/sveltia-cms#disabling-automatic-deployments) by default or on demand to save costs and resources associated with CI/CD and to publish multiple changes at once.[70](https://github.com/sveltia/sveltia-cms#user-content-fn-24-badaa007462add5cc68ab2bbbaa66912)\n- The GitLab backend support comes with background [service status](https://status.gitlab.com/) checking, just like GitHub.\n- Service status checks are performed frequently and an incident notification is displayed prominently.\n- Users can quickly open the source file of an entry or asset in your repository via the 3-dot menu when Developer Mode is enabled.\n- We provide [our own OAuth client](https://github.com/sveltia/sveltia-cms-auth) for GitHub and GitLab.\n- The GitLab backend supports Git LFS ( [documentation](https://docs.gitlab.com/topics/git/lfs/)).[71](https://github.com/sveltia/sveltia-cms#user-content-fn-231-badaa007462add5cc68ab2bbbaa66912)\n- Users won’t get a 404 Not Found error when you sign in to the GitLab backend.[72](https://github.com/sveltia/sveltia-cms#user-content-fn-115-badaa007462add5cc68ab2bbbaa66912)\n- Our Gitea/Forgejo backend is high-performing because it retrieves multiple entries at once. It also supports Git LFS ( [documentation](https://docs.gitea.com/administration/git-lfs-setup)). Additionally, the backend won’t cause 400 Bad Request errors due to the presence of `DRAFT_MEDIA_FILES` in file paths.[73](https://github.com/sveltia/sveltia-cms#user-content-fn-222-badaa007462add5cc68ab2bbbaa66912)\n- Users can sign in directly with a Git-based backend using a personal access token (PAT) instead of going through the regular OAuth flow.[74](https://github.com/sveltia/sveltia-cms#user-content-fn-258-badaa007462add5cc68ab2bbbaa66912) To do so, click the small arrow button next to the Sign In button, and select Use Personal Access Token.\n- The OAuth access token is automatically renewed when using the GitLab or Gitea/Forgejo backend with PKCE authorization.[75](https://github.com/sveltia/sveltia-cms#user-content-fn-224-badaa007462add5cc68ab2bbbaa66912) Token renewal for other backend configurations will be implemented later.\n- Features the all-new [local repository workflow](https://github.com/sveltia/sveltia-cms#working-with-a-local-git-repository) that boosts DX. See the [productivity section](https://github.com/sveltia/sveltia-cms#better-productivity) above.\n- Developers can select the local and remote backends while working on a local server.\n- The Test backend saves entries and assets in the browser’s [origin private file system](https://web.dev/articles/origin-private-file-system) (OPFS) so that changes are not discarded when the browser tab is closed or reloaded.[76](https://github.com/sveltia/sveltia-cms#user-content-fn-194-badaa007462add5cc68ab2bbbaa66912) The persistent storage support works with all modern browsers [except Safari](https://bugs.webkit.org/show_bug.cgi?id=254726).\n\n### Better i18n support\n\n[Permalink: Better i18n support](https://github.com/sveltia/sveltia-cms#better-i18n-support)\n\nSveltia CMS has been built with a multilingual architecture from the very beginning. You can expect first-class internationalization (i18n) support, as it’s required by clients of maintainer [@kyoshino](https://github.com/kyoshino), who himself was a long-time Japanese localizer for [Mozilla](https://www.mozilla.org/) and currently lives in the [most diverse city in the world](https://en.wikipedia.org/wiki/Toronto) where 150+ languages are spoken.\n\n- Configuration\n  - The [i18n limitations](https://decapcms.org/docs/i18n/#limitations) in Netlify/Decap CMS do not apply to Sveltia CMS:\n\n    - File collections support multiple files/folders i18n structures.[77](https://github.com/sveltia/sveltia-cms#user-content-fn-87-badaa007462add5cc68ab2bbbaa66912) To enable it, simply use the `{{locale}}` template tag in the `file` path option, e.g. `content/pages/about.{{locale}}.json` or `content/pages/{{locale}}/about.json`. For backward compatibility, the global `structure` option only applies to folder collections, and the default i18n structure for file collections remains single file.\n    - The List and Object widgets support the `i18n: duplicate` field configuration so that changes made with these widgets are duplicated between locales.[78](https://github.com/sveltia/sveltia-cms#user-content-fn-7-badaa007462add5cc68ab2bbbaa66912)[79](https://github.com/sveltia/sveltia-cms#user-content-fn-68-badaa007462add5cc68ab2bbbaa66912) The `i18n` configuration can normally be used for the subfields.\n  - The new `multiple_folders_i18n_root` i18n structure allows to have locale folders below the project root: `<locale>/<folder>/<slug>.<extension>`.[80](https://github.com/sveltia/sveltia-cms#user-content-fn-182-badaa007462add5cc68ab2bbbaa66912)\n  - The new `omit_default_locale_from_filename` i18n option allows to exclude the default locale from filenames. This option applies to entry collections with the `multiple_files` i18n structure enabled, as well as to file collection items with the `file` path ending with `.{{locale}}.<extension>`, aiming to support [Zola’s multilingual sites](https://www.getzola.org/documentation/content/multilingual/). ( [Discussion](https://github.com/sveltia/sveltia-cms/discussions/394))\n  - The `required` field option accepts an array of locale codes in addition to a boolean, making the field required for a subset of locales when i18n support is enabled. For example, if only English is required, you could write `required: [en]`. An empty array is equivalent to `required: false`.\n  - [Entry-relative media folders](https://decapcms.org/docs/collection-folder/#media-and-public-folder) can be used in conjunction with the `multiple_folders` i18n structure.[81](https://github.com/sveltia/sveltia-cms#user-content-fn-21-badaa007462add5cc68ab2bbbaa66912)\n  - The `{{locale}}` template tag can be used in the [`preview_path`](https://decapcms.org/docs/configuration-options/#preview_path) collection option to provide site preview links for each language.[82](https://github.com/sveltia/sveltia-cms#user-content-fn-63-badaa007462add5cc68ab2bbbaa66912)\n  - It’s possible to [use a random UUID for an entry slug](https://github.com/sveltia/sveltia-cms#using-a-random-id-for-an-entry-slug), which is a good option for locales that write in non-Latin characters.\n  - It’s possible to [localize entry slugs](https://github.com/sveltia/sveltia-cms#localizing-entry-slugs) while linking the localized files,[83](https://github.com/sveltia/sveltia-cms#user-content-fn-80-badaa007462add5cc68ab2bbbaa66912) thanks to the support for Hugo’s `translationKey`.[84](https://github.com/sveltia/sveltia-cms#user-content-fn-81-badaa007462add5cc68ab2bbbaa66912)\n  - When the `clean_accents` option is enabled for [entry slugs](https://decapcms.org/docs/configuration-options/#slug-type), certain characters, such as German umlauts, will be [transliterated](https://en.wikipedia.org/wiki/Transliteration).[85](https://github.com/sveltia/sveltia-cms#user-content-fn-99-badaa007462add5cc68ab2bbbaa66912)\n  - It’s possible to embed the locale code in an entry by using `widget: hidden` along with `default: '{{locale}}'`.[86](https://github.com/sveltia/sveltia-cms#user-content-fn-101-badaa007462add5cc68ab2bbbaa66912)\n  - The `value_field` Relation field option can contain a locale prefix like `{{locale}}/{{slug}}`, which will be replaced with the current locale. It’s intended to support i18n in Astro. ( [Discussion](https://github.com/sveltia/sveltia-cms/discussions/302))\n- User interface\n  - Eliminates UI confusion: The Preview Pane can be displayed without toggling i18n in the Content Editor. Both panes are scrollable. There is no condition where both panes are edited in the same language at the same time.\n  - Users can easily switch between locales while editing by clicking a button instead of a dropdown list when there are less than 5 locales.\n  - Language labels appear in human-readable display names instead of ISO 639 language codes because it’s not easy for everyone to recognize `DE` as German, `NL` as Dutch, `ZH` as Chinese, and so on.\n- Content editing\n  - [Integrates a translation service](https://github.com/sveltia/sveltia-cms#translating-entry-fields-with-one-click) to allow translation of text fields from another locale with one click.\n  - The Content Editor supports [RTL scripts](https://en.wikipedia.org/wiki/Right-to-left_script) such as Arabic, Hebrew and Persian.[87](https://github.com/sveltia/sveltia-cms#user-content-fn-146-badaa007462add5cc68ab2bbbaa66912)\n  - It’s possible to [disable non-default locale content](https://github.com/sveltia/sveltia-cms#disabling-non-default-locale-content).[88](https://github.com/sveltia/sveltia-cms#user-content-fn-15-badaa007462add5cc68ab2bbbaa66912)\n  - Boolean, DateTime, List and Number fields in the entry preview are displayed in a localized format.\n  - Boolean fields are updated in real time between locales like other widgets to avoid confusion.[89](https://github.com/sveltia/sveltia-cms#user-content-fn-35-badaa007462add5cc68ab2bbbaa66912)\n  - Relation fields with i18n enabled won’t trigger a change in the content draft status when you start editing an existing entry.[90](https://github.com/sveltia/sveltia-cms#user-content-fn-84-badaa007462add5cc68ab2bbbaa66912)\n  - Solves problems with Chinese, Japanese and Korean (CJK) [IME](https://en.wikipedia.org/wiki/Input_method) text input in the rich text editor for the Markdown widget.[91](https://github.com/sveltia/sveltia-cms#user-content-fn-54-badaa007462add5cc68ab2bbbaa66912)\n  - Raises a validation error instead of failing silently if the `single_file` structure is used and a required field is not filled in any of the locales.[92](https://github.com/sveltia/sveltia-cms#user-content-fn-55-badaa007462add5cc68ab2bbbaa66912)\n  - Fields in non-default locales are validated as expected.[93](https://github.com/sveltia/sveltia-cms#user-content-fn-13-badaa007462add5cc68ab2bbbaa66912)\n  - No internal error is thrown when changing the locale.[94](https://github.com/sveltia/sveltia-cms#user-content-fn-103-badaa007462add5cc68ab2bbbaa66912)\n  - Duplicating an entry duplicates all locale content, not just the default locale.[95](https://github.com/sveltia/sveltia-cms#user-content-fn-170-badaa007462add5cc68ab2bbbaa66912)\n  - Copying Markdown from another locale using the menu works as expected.[96](https://github.com/sveltia/sveltia-cms#user-content-fn-236-badaa007462add5cc68ab2bbbaa66912)\n\n### Better collections\n\n[Permalink: Better collections](https://github.com/sveltia/sveltia-cms#better-collections)\n\n- Configuration\n  - Provides some new options, including:\n    - `icon`: [Choose a custom icon for each collection](https://github.com/sveltia/sveltia-cms#using-a-custom-icon-for-a-collection).[97](https://github.com/sveltia/sveltia-cms#user-content-fn-3-badaa007462add5cc68ab2bbbaa66912)\n      - The option can also be used for individual files within a file collection. The specified icon will then appear in the file list.\n    - `thumbnail`: Specify the field name for a thumbnail displayed on the entry list, like `thumbnail: featuredImage`.[98](https://github.com/sveltia/sveltia-cms#user-content-fn-130-badaa007462add5cc68ab2bbbaa66912)\n      - A nested field can be specified using dot notation, e.g. `heroImage.src`.\n      - A wildcard in the field name is also supported, e.g. `images.*.src`.\n      - Multiple field names can be specified as an array for fallback purpose, e.g. `[thumbnail, cover]`.\n      - Occasionally, you may not have suitable images for thumbnails. For example, your images may have subtle differences or varied aspect ratios. In that case, you can disable the thumbnail with `thumbnail: []`.\n      - If this option is omitted, any non-nested, non-empty Image or File field will be used.[99](https://github.com/sveltia/sveltia-cms#user-content-fn-173-badaa007462add5cc68ab2bbbaa66912)\n    - `limit`: Specify the maximum number of entries that can be created in a folder collection.[100](https://github.com/sveltia/sveltia-cms#user-content-fn-185-badaa007462add5cc68ab2bbbaa66912)\n    - `divider`: [Add dividers to the collection list](https://github.com/sveltia/sveltia-cms#adding-dividers-to-the-collection-list).\n  - Enhancements to the entry `filter` option for folder collections:\n\n    - Boolean `value` works as expected.[101](https://github.com/sveltia/sveltia-cms#user-content-fn-93-badaa007462add5cc68ab2bbbaa66912)\n    - `value` accepts `null` to match an undefined field value.\n    - `value` accepts an array to provide multiple possible values.[102](https://github.com/sveltia/sveltia-cms#user-content-fn-151-badaa007462add5cc68ab2bbbaa66912)\n    - `pattern` can be used instead of `value` to provide a regular expression, just like the `view_filters` collection option.[103](https://github.com/sveltia/sveltia-cms#user-content-fn-153-badaa007462add5cc68ab2bbbaa66912)\n  - Enhancements to [summary string transformations](https://decapcms.org/docs/summary-strings/):\n\n    - Transformations can be used in more places than just the collection `summary`:\n\n      - The `slug` and `preview_path` collection options[104](https://github.com/sveltia/sveltia-cms#user-content-fn-29-badaa007462add5cc68ab2bbbaa66912)\n      - The `summary` field option for the List and Object widgets\n    - The `default` transformation accepts a template tag like `{{fields.slug | default('{{fields.title}}')}}`, making it possible to fall back to a different field value. ( [Discussion](https://github.com/sveltia/sveltia-cms/issues/345))\n    - The `date` transformation supports the time zone argument. The only available value is `utc`, which converts a date to UTC. This is useful if the specified DateTime field is local, but you want to force UTC in the entry slug, e.g. `{{date | date('YYYYMMDD-HHmm', 'utc')}}`. ( [Discussion](https://github.com/sveltia/sveltia-cms/issues/278#issuecomment-2565313420))\n    - The `date` transformation returns an empty string if an invalid date is given.[105](https://github.com/sveltia/sveltia-cms#user-content-fn-176-badaa007462add5cc68ab2bbbaa66912)\n    - Multiple transformations can be chained like `{{title | upper | truncate(20)}}`.\n  - Enhancements to file collections:\n    - Sveltia CMS supports [singletons](https://github.com/sveltia/sveltia-cms#using-singletons), a simple form of a file collection.[106](https://github.com/sveltia/sveltia-cms#user-content-fn-233-badaa007462add5cc68ab2bbbaa66912)\n    - File collections support files without extensions.[107](https://github.com/sveltia/sveltia-cms#user-content-fn-255-badaa007462add5cc68ab2bbbaa66912) This is useful for [editing site deployment configuration files](https://github.com/sveltia/sveltia-cms#editing-site-deployment-configuration-files), such as `_headers` and `_redirects`.\n    - Each file in a file collection has the `format` and `frontmatter_delimiter` options, which can be used to specify the file format, making it possible to have `yaml-frontmatter`, `toml-frontmatter` and `json-frontmatter` side by side.[108](https://github.com/sveltia/sveltia-cms#user-content-fn-218-badaa007462add5cc68ab2bbbaa66912)\n  - The collection `label` defaults to the `name` value according to the [Decap CMS document](https://decapcms.org/docs/configuration-options/#collections), while Netlify/Decap CMS actually throws a configuration error if the `label` option is omitted.\n  - Nested fields (dot notation) can be used in the `path` option for a folder collection, e.g. `{{fields.state.name}}/{{slug}}`.[109](https://github.com/sveltia/sveltia-cms#user-content-fn-62-badaa007462add5cc68ab2bbbaa66912)\n  - Markdown is supported in the `description` collection option.[110](https://github.com/sveltia/sveltia-cms#user-content-fn-79-badaa007462add5cc68ab2bbbaa66912) Bold, italic, strikethrough, code and links are allowed.\n  - The collection `folder` can be an empty string (or `.` or `/`) if you want to store entries in the root folder. This supports a typical VitePress setup.\n- Entry slugs\n  - It’s possible to [use a random UUID for an entry slug](https://github.com/sveltia/sveltia-cms#using-a-random-id-for-an-entry-slug).\n  - Slug generation is fail-safe: If a slug cannot be determined from entry content, part of a random UUID is used instead of throwing an error or filling in with arbitrary string field values.[111](https://github.com/sveltia/sveltia-cms#user-content-fn-133-badaa007462add5cc68ab2bbbaa66912)\n  - Users can edit entry slugs via the 3-dot menu in the Content Editor.[112](https://github.com/sveltia/sveltia-cms#user-content-fn-184-badaa007462add5cc68ab2bbbaa66912)\n  - If a collection only has the Markdown `body` field, an entry slug will be generated from a header in the `body`, if exists. This supports a typical VitePress setup.\n  - Entry slug template tags support [transformations](https://decapcms.org/docs/summary-strings/) just like summary string template tags.[104](https://github.com/sveltia/sveltia-cms#user-content-fn-29-badaa007462add5cc68ab2bbbaa66912)\n  - Single quotes (apostrophes) in a slug will be replaced with `sanitize_replacement` (default: hyphen) rather than being removed.[113](https://github.com/sveltia/sveltia-cms#user-content-fn-52-badaa007462add5cc68ab2bbbaa66912)\n  - The maximum number of characters for an entry slug can be set with the new `slug_length` collection option to avoid deployment errors with Netlify or other platforms.[114](https://github.com/sveltia/sveltia-cms#user-content-fn-25-badaa007462add5cc68ab2bbbaa66912)\n  - Setting the collection `path` doesn’t affect the entry slugs stored with the Relation widget.[115](https://github.com/sveltia/sveltia-cms#user-content-fn-137-badaa007462add5cc68ab2bbbaa66912)\n  - Entry slugs are [localizable](https://github.com/sveltia/sveltia-cms#localizing-entry-slugs).[83](https://github.com/sveltia/sveltia-cms#user-content-fn-80-badaa007462add5cc68ab2bbbaa66912)\n- Entry listing\n  - [Default sort field and direction](https://github.com/sveltia/sveltia-cms#specifying-default-entry-sort-field-and-direction) can be specified.[116](https://github.com/sveltia/sveltia-cms#user-content-fn-172-badaa007462add5cc68ab2bbbaa66912)\n  - Sorting entries by a DateTime field works as expected.[117](https://github.com/sveltia/sveltia-cms#user-content-fn-110-badaa007462add5cc68ab2bbbaa66912)\n  - Entry grouping and sorting can work together. For example, it’s possible to group by year and then sort by year if configured properly.\n  - The `sortable_fields` option accepts a special `slug` value to allow sorting by entry slugs.\n  - [Index file inclusion](https://github.com/sveltia/sveltia-cms#including-hugos-special-index-file-in-a-folder-collection) allows users to edit Hugo’s special `_index.md` file, including localized ones like `_index.en.md`, within a folder collection.[118](https://github.com/sveltia/sveltia-cms#user-content-fn-201-badaa007462add5cc68ab2bbbaa66912) If the `index_file` option is not defined, these files will be hidden in a folder collection unless the `path` option is configured to end with `_index` and the `extension` is `md`.[119](https://github.com/sveltia/sveltia-cms#user-content-fn-120-badaa007462add5cc68ab2bbbaa66912)\n  - A console error won’t be thrown when a collection doesn’t have the `title` field.[120](https://github.com/sveltia/sveltia-cms#user-content-fn-152-badaa007462add5cc68ab2bbbaa66912) In that case, an entry summary will be generated from a header in the Markdown `body` field, if exists, or from the entry slug, so the summary will never be an empty.[121](https://github.com/sveltia/sveltia-cms#user-content-fn-161-badaa007462add5cc68ab2bbbaa66912) This supports a typical VitePress and Docusaurus setup.[122](https://github.com/sveltia/sveltia-cms#user-content-fn-230-badaa007462add5cc68ab2bbbaa66912)\n  - If there was an error while parsing an entry file, such as duplicate front matter keys, it won’t show up as a blank entry, and a clear error message will be displayed in the browser console.[123](https://github.com/sveltia/sveltia-cms#user-content-fn-121-badaa007462add5cc68ab2bbbaa66912)\n  - A single file can be used for more than one item in a file collection.[124](https://github.com/sveltia/sveltia-cms#user-content-fn-127-badaa007462add5cc68ab2bbbaa66912)\n- User interface\n  - The collection list displays the number of items in each collection.\n  - Users can select multiple entries and delete them at once.\n  - In an entry summary, basic Markdown syntax used in the title, including bold, italic and code, are parsed as Markdown. HTML character references (entities) are also parsed properly.[125](https://github.com/sveltia/sveltia-cms#user-content-fn-69-badaa007462add5cc68ab2bbbaa66912)\n  - If you update an entry field that appears in the collection’s `summary`, such as `title`, the entry list displays an updated summary after you save the entry.[126](https://github.com/sveltia/sveltia-cms#user-content-fn-159-badaa007462add5cc68ab2bbbaa66912)\n  - Thumbnails of entries are displayed not only in the grid view but also in the list view, making it easier to navigate.\n  - If entries don’t have an Image field for thumbnails, the entry list will only be displayed in the list view, because it doesn’t make sense to show the grid view.[127](https://github.com/sveltia/sveltia-cms#user-content-fn-143-badaa007462add5cc68ab2bbbaa66912)\n  - Assets stored in a [collection media folder](https://github.com/sveltia/sveltia-cms#using-a-custom-media-folder-for-a-collection) can be displayed next to the entries.\n  - The New Entry button won’t appear when a developer accidentally sets the `create: true` option on a file collection because it’s useless.[128](https://github.com/sveltia/sveltia-cms#user-content-fn-89-badaa007462add5cc68ab2bbbaa66912)\n  - The Delete Entry button won’t appear when a developer accidentally sets the `delete: true` option on a file collection because the preconfigured files should not be deleted.\n\n### Better content editing\n\n[Permalink: Better content editing](https://github.com/sveltia/sveltia-cms#better-content-editing)\n\n- Required fields, not optional fields, are marked for efficient data entry.\n- Users can revert changes to all fields or a specific field.\n- If you revert changes and there are no unsaved changes, the Save button is disabled as expected.[129](https://github.com/sveltia/sveltia-cms#user-content-fn-118-badaa007462add5cc68ab2bbbaa66912)\n- The new `readonly` field option makes the field read-only. This is useful when a `default` value is provided and the field should not be editable by users.[130](https://github.com/sveltia/sveltia-cms#user-content-fn-223-badaa007462add5cc68ab2bbbaa66912)\n- Fields with validation errors are automatically expanded if they are part of nested, collapsed objects.[131](https://github.com/sveltia/sveltia-cms#user-content-fn-40-badaa007462add5cc68ab2bbbaa66912)\n- A full regular expression, including flags, can be used for the widget `pattern` option.[132](https://github.com/sveltia/sveltia-cms#user-content-fn-82-badaa007462add5cc68ab2bbbaa66912) For example, if you want to allow 280 characters or less in a multiline text field, you could write `/^.{0,280}$/s` (but you can now use the `maxlength` option instead.)\n- A long validation error message is displayed in full, without being hidden behind the field label.[133](https://github.com/sveltia/sveltia-cms#user-content-fn-59-badaa007462add5cc68ab2bbbaa66912)\n- Any links to other entries will work as expected, with the Content Editor being updated for the other.[134](https://github.com/sveltia/sveltia-cms#user-content-fn-100-badaa007462add5cc68ab2bbbaa66912)\n- In the Boolean and Select widgets, you don’t have to update a value twice to re-enable the Save button after saving an entry.[135](https://github.com/sveltia/sveltia-cms#user-content-fn-139-badaa007462add5cc68ab2bbbaa66912)\n- `data` can be used as a field name without causing an error when saving the entry.[136](https://github.com/sveltia/sveltia-cms#user-content-fn-180-badaa007462add5cc68ab2bbbaa66912)\n\n### Better content preview\n\n[Permalink: Better content preview](https://github.com/sveltia/sveltia-cms#better-content-preview)\n\n- The Preview Pane comes with a minimal default style.[137](https://github.com/sveltia/sveltia-cms#user-content-fn-168-badaa007462add5cc68ab2bbbaa66912) It looks nice without a custom preview style or template.\n- For better performance, the Preview Pane doesn’t use an `<iframe>` unless a custom preview stylesheet is registered.[34](https://github.com/sveltia/sveltia-cms#user-content-fn-179-badaa007462add5cc68ab2bbbaa66912)\n- The Preview Pane displays all fields, including each label, making it easier to see which fields are populated.\n- Entering a long value into a field will not cause the field label to disappear.[138](https://github.com/sveltia/sveltia-cms#user-content-fn-254-badaa007462add5cc68ab2bbbaa66912)\n- Clicking a field in the Preview Pane focuses the corresponding field in the Edit Pane.[139](https://github.com/sveltia/sveltia-cms#user-content-fn-41-badaa007462add5cc68ab2bbbaa66912) It automatically expands when collapsed.\n\n  - This is equivalent to the (misleading) visual editing feature introduced in [Decap CMS 3.6.0](https://github.com/decaporg/decap-cms/releases/tag/decap-cms%403.6.0), but our click-to-highlight feature is enabled by default; you don’t need to opt in with the `editor.visualEditing` collection option.\n  - Our implementation doesn’t cause a module import error[140](https://github.com/sveltia/sveltia-cms#user-content-fn-225-badaa007462add5cc68ab2bbbaa66912) or broken image previews.[141](https://github.com/sveltia/sveltia-cms#user-content-fn-188-badaa007462add5cc68ab2bbbaa66912)\n- The Preview Pane doesn’t cause a scrolling issue.[142](https://github.com/sveltia/sveltia-cms#user-content-fn-136-badaa007462add5cc68ab2bbbaa66912)\n- The Preview Pane doesn’t crash with a Minified React error.[143](https://github.com/sveltia/sveltia-cms#user-content-fn-186-badaa007462add5cc68ab2bbbaa66912)\n- Provides better scroll synchronization between the panes when editing or previewing an entry.[144](https://github.com/sveltia/sveltia-cms#user-content-fn-92-badaa007462add5cc68ab2bbbaa66912)\n- Developers can hide the preview of a specific field using a new field option: `preview: false`.[145](https://github.com/sveltia/sveltia-cms#user-content-fn-126-badaa007462add5cc68ab2bbbaa66912)\n- [See below](https://github.com/sveltia/sveltia-cms#better-widgets) for widget-specific enhancements, including support for variable types[146](https://github.com/sveltia/sveltia-cms#user-content-fn-42-badaa007462add5cc68ab2bbbaa66912) and YouTube videos.\n\n### Better data output\n\n[Permalink: Better data output](https://github.com/sveltia/sveltia-cms#better-data-output)\n\n- Keys in generated JSON/TOML/YAML content are always sorted by the order of configured fields, making Git commits clean and consistent.[147](https://github.com/sveltia/sveltia-cms#user-content-fn-86-badaa007462add5cc68ab2bbbaa66912)\n- Netlify/Decap CMS often, but not always, omits optional and empty fields from the output.[148](https://github.com/sveltia/sveltia-cms#user-content-fn-154-badaa007462add5cc68ab2bbbaa66912) Sveltia CMS aims at complete and consistent data output — it always saves proper values, such as an empty string, an empty array or `null`, instead of nothing ( `undefined`), regardless of the `required` field option.[149](https://github.com/sveltia/sveltia-cms#user-content-fn-45-badaa007462add5cc68ab2bbbaa66912)[150](https://github.com/sveltia/sveltia-cms#user-content-fn-46-badaa007462add5cc68ab2bbbaa66912)[151](https://github.com/sveltia/sveltia-cms#user-content-fn-44-badaa007462add5cc68ab2bbbaa66912)[152](https://github.com/sveltia/sveltia-cms#user-content-fn-157-badaa007462add5cc68ab2bbbaa66912)\n  - In other words, in Sveltia CMS, `required: false` makes data input optional, but doesn’t make data output optional.\n  - To omit empty optional fields from data output, use `omit_empty_optional_fields: true` in the [data output options](https://github.com/sveltia/sveltia-cms#controlling-data-output). This is useful if you have data type validations that expect `undefined`.[153](https://github.com/sveltia/sveltia-cms#user-content-fn-156-badaa007462add5cc68ab2bbbaa66912)\n- JSON/TOML/YAML data is saved with a new line at the end of the file to prevent unnecessary changes being made to the file.[154](https://github.com/sveltia/sveltia-cms#user-content-fn-11-badaa007462add5cc68ab2bbbaa66912)\n- Leading/trailing whitespaces in text-type field values are automatically removed when you save an entry.[155](https://github.com/sveltia/sveltia-cms#user-content-fn-37-badaa007462add5cc68ab2bbbaa66912)\n- YAML string folding (maximum line width) is disabled, mainly for framework compatibility.[156](https://github.com/sveltia/sveltia-cms#user-content-fn-119-badaa007462add5cc68ab2bbbaa66912)\n- A standard time is formatted as `HH:mm:ss` instead of `HH:mm` for framework compatibility.\n- DateTime field values in ISO 8601 format are stored in native date/time format instead of quoted strings when the data output is TOML.[157](https://github.com/sveltia/sveltia-cms#user-content-fn-147-badaa007462add5cc68ab2bbbaa66912)\n- Provides JSON/YAML format options as part of the [data output options](https://github.com/sveltia/sveltia-cms#controlling-data-output), including indentation and quotes.[158](https://github.com/sveltia/sveltia-cms#user-content-fn-155-badaa007462add5cc68ab2bbbaa66912)[159](https://github.com/sveltia/sveltia-cms#user-content-fn-9-badaa007462add5cc68ab2bbbaa66912)\n  - The `yaml_quote` collection option added in [v0.5.10](https://github.com/sveltia/sveltia-cms/releases/tag/v0.5.10) is now deprecated and will be removed in v1.0.0. `yaml_quote: true` is equivalent to `quote: double` in the new YAML format options.\n\n### Better widgets\n\n[Permalink: Better widgets](https://github.com/sveltia/sveltia-cms#better-widgets)\n\nSveltia CMS supports all the [built-in widgets](https://decapcms.org/docs/widgets/) available in Netlify/Decap CMS. We have improved these widgets significantly while adding some new ones. A few remaining [limitations](https://github.com/sveltia/sveltia-cms#current-limitations) will be addressed before the 1.0 release.\n\n- Boolean\n  - A required Boolean field with no default value is saved as `false` by default, without raising a confusing validation error.[149](https://github.com/sveltia/sveltia-cms#user-content-fn-45-badaa007462add5cc68ab2bbbaa66912)\n  - An optional Boolean field with no default value is also saved as `false` by default, rather than nothing.[150](https://github.com/sveltia/sveltia-cms#user-content-fn-46-badaa007462add5cc68ab2bbbaa66912)\n- Code\n  - More than 300 languages are available, thanks to [Prism](https://prismjs.com/)’s extensive language support.\n  - The language switcher always appears in the user interface, so it’s easy to spot and change the selected language.\n  - Dynamic loading of language modes work as expected.[160](https://github.com/sveltia/sveltia-cms#user-content-fn-198-badaa007462add5cc68ab2bbbaa66912)\n  - A Code field under a List field work as expected, saving both code and language.[161](https://github.com/sveltia/sveltia-cms#user-content-fn-181-badaa007462add5cc68ab2bbbaa66912)\n  - A wrong initial value will not cause a crash with a `TypeError`.[162](https://github.com/sveltia/sveltia-cms#user-content-fn-257-badaa007462add5cc68ab2bbbaa66912)\n- Color\n  - The widget doesn’t cause scrolling issues.[163](https://github.com/sveltia/sveltia-cms#user-content-fn-128-badaa007462add5cc68ab2bbbaa66912)\n  - The preview shows both the RGB(A) hex value and the `rgb()` function notation.\n- DateTime\n  - A DateTime field doesn’t trigger a change in the content draft status when you’ve just started editing a new entry.[164](https://github.com/sveltia/sveltia-cms#user-content-fn-90-badaa007462add5cc68ab2bbbaa66912)\n  - User’s local time is not saved in UTC unless the `picker_utc` option is `true`.[165](https://github.com/sveltia/sveltia-cms#user-content-fn-150-badaa007462add5cc68ab2bbbaa66912)\n  - The widget doesn’t throw a `RangeError` for formatting days of the month.[166](https://github.com/sveltia/sveltia-cms#user-content-fn-250-badaa007462add5cc68ab2bbbaa66912)\n- Hidden\n  - The `default` value supports the following template tags:\n\n    - `{{locale}}`: The current locale code.[86](https://github.com/sveltia/sveltia-cms#user-content-fn-101-badaa007462add5cc68ab2bbbaa66912)\n    - `{{datetime}}`: The current date/time in [ISO 8601 format](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#date_time_string_format).[167](https://github.com/sveltia/sveltia-cms#user-content-fn-102-badaa007462add5cc68ab2bbbaa66912)\n    - `{{uuid}}`, `{{uuid_short}}` and `{{uuid_shorter}}`: A random UUID or its shorter version, just like the [slug template tags](https://github.com/sveltia/sveltia-cms#using-a-random-id-for-an-entry-slug).[168](https://github.com/sveltia/sveltia-cms#user-content-fn-12-badaa007462add5cc68ab2bbbaa66912)\n  - The `default` value is saved when you create a file collection item, not just a folder collection item.[169](https://github.com/sveltia/sveltia-cms#user-content-fn-78-badaa007462add5cc68ab2bbbaa66912)\n- List\n  - It’s possible to [edit data files with a top-level list](https://github.com/sveltia/sveltia-cms#editing-data-files-with-a-top-level-list) using the new `root` option.[170](https://github.com/sveltia/sveltia-cms#user-content-fn-148-badaa007462add5cc68ab2bbbaa66912)\n  - The `min` and `max` options can be used separately. You don’t need to specify both to use either option.[171](https://github.com/sveltia/sveltia-cms#user-content-fn-145-badaa007462add5cc68ab2bbbaa66912)\n  - The Add Item button appears at the bottom of the list when the `add_to_top` option is not `true`, so you don’t have to scroll up each time to add new items.\n  - A list item comes with a menu that allows users to duplicate the item, insert a new item above/below it, or remove it.[172](https://github.com/sveltia/sveltia-cms#user-content-fn-187-badaa007462add5cc68ab2bbbaa66912)\n  - Users can expand or collapse the entire list, while the Expand All and Collapse All buttons allow you to expand or collapse all items in the list at once.[173](https://github.com/sveltia/sveltia-cms#user-content-fn-164-badaa007462add5cc68ab2bbbaa66912)\n  - A required List field with no subfield or value is marked as invalid.[174](https://github.com/sveltia/sveltia-cms#user-content-fn-43-badaa007462add5cc68ab2bbbaa66912) No need to set the `min` and `max` options for the `required` option to work.\n  - An optional List field with no subfield or value is saved as an empty array, rather than nothing.[151](https://github.com/sveltia/sveltia-cms#user-content-fn-44-badaa007462add5cc68ab2bbbaa66912)\n  - An optional List field won’t populate an item by default when the subfield has the `default` value.[175](https://github.com/sveltia/sveltia-cms#user-content-fn-162-badaa007462add5cc68ab2bbbaa66912)\n  - A simple List field with no subfields is displayed as a multiline text field,[176](https://github.com/sveltia/sveltia-cms#user-content-fn-219-badaa007462add5cc68ab2bbbaa66912) where users can use spaces[177](https://github.com/sveltia/sveltia-cms#user-content-fn-50-badaa007462add5cc68ab2bbbaa66912) and commas[178](https://github.com/sveltia/sveltia-cms#user-content-fn-220-badaa007462add5cc68ab2bbbaa66912) for list items. A comma is no longer treated as a list delimiter.\n  - Users can preview variable types without having to register a preview template.[146](https://github.com/sveltia/sveltia-cms#user-content-fn-42-badaa007462add5cc68ab2bbbaa66912)\n  - It’s possible to omit `fields` in a variable type object.[179](https://github.com/sveltia/sveltia-cms#user-content-fn-163-badaa007462add5cc68ab2bbbaa66912) In that case, only the `typeKey` (default: `type`) is saved in the output.\n  - A collapsed List field will not display a programmatic summary like `List [ Map { \"key\": \"value\" } ]` if the `summary` option is not set.[180](https://github.com/sveltia/sveltia-cms#user-content-fn-183-badaa007462add5cc68ab2bbbaa66912)\n- Map\n  - A search bar enables users to quickly locate a specific place on the map.[181](https://github.com/sveltia/sveltia-cms#user-content-fn-252-badaa007462add5cc68ab2bbbaa66912)\n  - With the [Geolocation API](https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API), users can get their current location with one click.\n  - The value can be cleared if the field is optional.\n  - The map’s zoom level is adjusted more intuitively using pinch gestures.\n  - The map looks good in dark mode.\n- Markdown\n  - The rich text editor is built with the well-maintained [Lexical](https://lexical.dev/) framework, which solves various issues with a [Slate](https://github.com/ianstormtaylor/slate)-based editor in Netlify/Decap CMS,[182](https://github.com/sveltia/sveltia-cms#user-content-fn-235-badaa007462add5cc68ab2bbbaa66912) including fatal application crashes,[183](https://github.com/sveltia/sveltia-cms#user-content-fn-71-badaa007462add5cc68ab2bbbaa66912)[184](https://github.com/sveltia/sveltia-cms#user-content-fn-72-badaa007462add5cc68ab2bbbaa66912)[185](https://github.com/sveltia/sveltia-cms#user-content-fn-73-badaa007462add5cc68ab2bbbaa66912)[186](https://github.com/sveltia/sveltia-cms#user-content-fn-111-badaa007462add5cc68ab2bbbaa66912) lost formatting when pasting,[187](https://github.com/sveltia/sveltia-cms#user-content-fn-124-badaa007462add5cc68ab2bbbaa66912) an extra line break when pasting,[188](https://github.com/sveltia/sveltia-cms#user-content-fn-169-badaa007462add5cc68ab2bbbaa66912) extra HTML comments when pasting,[189](https://github.com/sveltia/sveltia-cms#user-content-fn-229-badaa007462add5cc68ab2bbbaa66912) backslash injections,[190](https://github.com/sveltia/sveltia-cms#user-content-fn-53-badaa007462add5cc68ab2bbbaa66912) dropdown visibility,[191](https://github.com/sveltia/sveltia-cms#user-content-fn-70-badaa007462add5cc68ab2bbbaa66912) and text input difficulties with IME.[91](https://github.com/sveltia/sveltia-cms#user-content-fn-54-badaa007462add5cc68ab2bbbaa66912)\n  - The default editor mode can be set by changing the order of the `modes` option.[192](https://github.com/sveltia/sveltia-cms#user-content-fn-58-badaa007462add5cc68ab2bbbaa66912) If you want to use the plain text editor by default, add `modes: [raw, rich_text]` to the field configuration.\n  - A Markdown field plays well with a variable type List field.[193](https://github.com/sveltia/sveltia-cms#user-content-fn-202-badaa007462add5cc68ab2bbbaa66912)\n  - A combination of bold and italic doesn’t create a confusing 3-asterisk markup.[194](https://github.com/sveltia/sveltia-cms#user-content-fn-160-badaa007462add5cc68ab2bbbaa66912) In our editor, bold is 2 asterisks and italic is an underscore.\n  - The built-in `image` component can be inserted with a single click.\n  - The built-in `image` component allows users to add, edit or remove a link on an image.[195](https://github.com/sveltia/sveltia-cms#user-content-fn-171-badaa007462add5cc68ab2bbbaa66912) To disable this feature, add `linked_images: false` to the Markdown field options.\n  - It’s possible to paste/drop local/remote images into the rich text editor to insert them as expected. Note: Pasting multiple images is [not supported in Firefox](https://bugzilla.mozilla.org/show_bug.cgi?id=864052). In Netlify/Decap CMS, pasting an image may cause the application to crash.\n  - The built-in `code-block` component is implemented just like a blockquote. You can simply convert a normal paragraph into a code block instead of adding a component.\n  - Code in a code block in the editor can be copied as expected.[196](https://github.com/sveltia/sveltia-cms#user-content-fn-165-badaa007462add5cc68ab2bbbaa66912)\n  - Language-annotated code block doesn’t trigger unsaved changes.[197](https://github.com/sveltia/sveltia-cms#user-content-fn-189-badaa007462add5cc68ab2bbbaa66912)\n  - Soft line breaks are [rendered as hard line breaks](https://github.com/sveltia/sveltia-cms#rendering-soft-line-breaks-as-hard-line-breaks-in-markdown) in the Preview Pane.\n- Number\n  - If the `value_type` option is `int` (default) or `float`, the `required` option is `false`, and the value is not entered, the field will be saved as `null` instead of an empty string.[152](https://github.com/sveltia/sveltia-cms#user-content-fn-157-badaa007462add5cc68ab2bbbaa66912) If `value_type` is anything else, the data type will remain a string.\n- Object\n  - Sveltia CMS offers two ways to have conditional fields in a collection:[198](https://github.com/sveltia/sveltia-cms#user-content-fn-30-badaa007462add5cc68ab2bbbaa66912)\n    - The Object widget supports [variable types](https://decapcms.org/docs/variable-type-widgets/) (the `types` and `typeKey` options) just like the List widget.[199](https://github.com/sveltia/sveltia-cms#user-content-fn-226-badaa007462add5cc68ab2bbbaa66912)\n    - An optional Object field ( `required: false`) can be manually added or removed with a checkbox.[200](https://github.com/sveltia/sveltia-cms#user-content-fn-88-badaa007462add5cc68ab2bbbaa66912) If unadded or removed, the required subfields won’t trigger validation errors,[201](https://github.com/sveltia/sveltia-cms#user-content-fn-16-badaa007462add5cc68ab2bbbaa66912) and the field will be saved as `null`.\n- Relation\n  - Field options are displayed with no additional API requests.[30](https://github.com/sveltia/sveltia-cms#user-content-fn-14-badaa007462add5cc68ab2bbbaa66912) The confusing `options_length` option, which defaults to 20, is therefore ignored.[202](https://github.com/sveltia/sveltia-cms#user-content-fn-76-badaa007462add5cc68ab2bbbaa66912)\n  - The widget reliably displays the selected option in the summary and all available options in the dropdown list.[203](https://github.com/sveltia/sveltia-cms#user-content-fn-259-badaa007462add5cc68ab2bbbaa66912)\n  - `slug` can be used for `value_field` to show all available options instead of just one in some situations.[204](https://github.com/sveltia/sveltia-cms#user-content-fn-91-badaa007462add5cc68ab2bbbaa66912)\n  - Template strings with a wildcard like `{{cities.*.name}}` can also be used for `value_field`.[205](https://github.com/sveltia/sveltia-cms#user-content-fn-94-badaa007462add5cc68ab2bbbaa66912)\n  - `display_fields` is displayed in the Preview Pane instead of `value_field`.\n  - The redundant `search_fields` option is optional in Sveltia CMS, as it defaults to `display_fields`, `value_field` or the collection’s `identifier_field`, which is `title` by default.\n  - The `value_field` option is also optional in Sveltia CMS, as it defaults to `{{slug}}` (entry slugs).\n  - A new item created in a referenced collection is immediately available in the options.[206](https://github.com/sveltia/sveltia-cms#user-content-fn-138-badaa007462add5cc68ab2bbbaa66912)\n  - A referenced DateTime field value is displayed in the specified format.[207](https://github.com/sveltia/sveltia-cms#user-content-fn-221-badaa007462add5cc68ab2bbbaa66912)\n  - It’s possible to refer to a List field with the `field` option, which produces a single subfield but does not output the subfield `name` in the data, using the `value_field: cities.*.name` syntax. ( [Discussion](https://github.com/sveltia/sveltia-cms/discussions/400))\n- Select\n  - It’s possible to select an option with value `0`.[208](https://github.com/sveltia/sveltia-cms#user-content-fn-56-badaa007462add5cc68ab2bbbaa66912)\n  - `label` is displayed in the Preview Pane instead of `value`.\n- String\n  - When a YouTube video URL is entered in a String field, it appears as an embedded video in the Preview Pane. Check your site’s [CSP](https://github.com/sveltia/sveltia-cms#setting-up-content-security-policy) if the preview doesn’t work.\n  - When a regular URL is entered in a String field, it appears as a link that can be opened in a new browser tab.\n  - Supports the `type` option that accepts `url` or `email` as a value, which will validate the value as a URL or email.\n  - Supports the `prefix` and `suffix` string options, which automatically prepend and/or append the developer-defined value to the user-input value, if it’s not empty.\n- Boolean, Number and String\n  - Supports the `before_input` and `after_input` string options, which allow developers to display custom labels before and/or after the input UI.[209](https://github.com/sveltia/sveltia-cms#user-content-fn-28-badaa007462add5cc68ab2bbbaa66912) Markdown is supported in the value.\n\n    - Compatibility note: In Static CMS, these options are implemented as `prefix` and `suffix`, respectively, which have different meaning in Sveltia CMS.\n- File and Image\n  - Provides a reimagined all-in-one asset selection dialog for File and Image fields.[210](https://github.com/sveltia/sveltia-cms#user-content-fn-234-badaa007462add5cc68ab2bbbaa66912)\n    - Entry, file, [collection](https://github.com/sveltia/sveltia-cms#using-a-custom-media-folder-for-a-collection) and global assets are listed on separate tabs for easy selection.[211](https://github.com/sveltia/sveltia-cms#user-content-fn-19-badaa007462add5cc68ab2bbbaa66912)\n    - A new asset can be uploaded by dragging & dropping it into the dialog.[42](https://github.com/sveltia/sveltia-cms#user-content-fn-20-badaa007462add5cc68ab2bbbaa66912)\n    - A URL can also be entered in the dialog.\n    - Integration with Pexels, Pixabay and Unsplash makes it easy to select and insert a free stock photo.[212](https://github.com/sveltia/sveltia-cms#user-content-fn-8-badaa007462add5cc68ab2bbbaa66912) More stock photo providers will be added in the future.\n  - Users can also simply drag and drop a file onto a File/Image field to attach it without having to open the Select File dialog.\n  - Large images automatically fit in the Preview Pane instead of being displayed at their original size, which can easily exceed the width of the pane.\n  - The new `accept` option allows files to be filtered by a comma-separated list of unique file type specifiers, in the same way as the HTML [`accept` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Attributes/accept) for `<input type=\"file\">`.[213](https://github.com/sveltia/sveltia-cms#user-content-fn-216-badaa007462add5cc68ab2bbbaa66912)\n    - By default, the Image widget only accepts an AVIF, GIF, JPEG, PNG, WebP or SVG image. BMP, HEIC, JPEG XL, PSD, TIFF and other less common or non-standard files are excluded.[214](https://github.com/sveltia/sveltia-cms#user-content-fn-217-badaa007462add5cc68ab2bbbaa66912)\n    - The File widget has no default restriction.\n  - If the `public_folder` contains `{{slug}}` and you’ve edited a slug field (e.g. `title`) of a new entry after uploading an asset, the updated slug will be used in the saved asset path.[215](https://github.com/sveltia/sveltia-cms#user-content-fn-140-badaa007462add5cc68ab2bbbaa66912) Other dynamic template tags such as `{{filename}}` will also be populated as expected.[216](https://github.com/sveltia/sveltia-cms#user-content-fn-141-badaa007462add5cc68ab2bbbaa66912)\n  - The CMS prevents the same file from being uploaded twice. It compares the hashes and selects an existing asset instead.\n- List and Object\n  - The `summary` is displayed correctly when it refers to a Relation field[217](https://github.com/sveltia/sveltia-cms#user-content-fn-36-badaa007462add5cc68ab2bbbaa66912) or a simple List field.\n  - The `summary` template tags support [transformations](https://decapcms.org/docs/summary-strings/), e.g. `{{fields.date | date('YYYY-MM-DD')}}`.\n  - The `collapsed` option accepts the value `auto` to automatically collapse the widget if any of its subfields are filled out. The same applies to the `minimize_collapsed` option for the List widget.\n- Markdown, String and Text\n  - A required field containing only spaces or line breaks will result in a validation error, as if no characters were entered.\n- Relation and Select\n  - If a dropdown list has options with long wrapping labels, they won’t overlap with the next option.[218](https://github.com/sveltia/sveltia-cms#user-content-fn-83-badaa007462add5cc68ab2bbbaa66912)\n  - When there are 5 or fewer options, the UI automatically switches from a dropdown list to radio buttons (single-select) or checkboxes (multi-select) for faster data entry.[219](https://github.com/sveltia/sveltia-cms#user-content-fn-61-badaa007462add5cc68ab2bbbaa66912) This number can be changed with the `dropdown_threshold` option for the `relation` and `select` widgets.\n- String and Text\n  - Supports the `minlength` and `maxlength` options, which allow developers to specify the minimum and maximum number of characters required for input without having to write a custom regular expression with the `pattern` option. A character counter is available when one of the options is given, and a user-friendly validation error is displayed if the condition is not met.\n\n#### New widgets\n\n[Permalink: New widgets](https://github.com/sveltia/sveltia-cms#new-widgets)\n\n- Compute\n  - The experimental `compute` widget allows to reference the value of other fields in the same collection, similar to the `summary` property for the List and Object widgets.[220](https://github.com/sveltia/sveltia-cms#user-content-fn-104-badaa007462add5cc68ab2bbbaa66912) Use the `value` property to define the value template, e.g. `posts-{{fields.slug}}`. ( [Example](https://github.com/sveltia/sveltia-cms/issues/111))\n  - The `value` property also supports a value of `{{index}}`, which can hold the index of a list item. ( [Example](https://github.com/sveltia/sveltia-cms/issues/172))\n- KeyValue (Dictionary)\n  - The new `keyvalue` widget allows users to add arbitrary key-value string pairs to a field.[221](https://github.com/sveltia/sveltia-cms#user-content-fn-123-badaa007462add5cc68ab2bbbaa66912)\n  - While the implementation is compatible with [Static CMS](https://staticjscms.netlify.app/docs/widget-keyvalue), we provide a more intuitive UI. You can press Enter to move focus or add a new row while editing, and the preview is displayed in a clean table.\n- UUID\n  - In addition to [generating UUIDs for entry slugs](https://github.com/sveltia/sveltia-cms#using-a-random-id-for-an-entry-slug), Sveltia CMS supports the proposed `uuid` widget with the following properties:[168](https://github.com/sveltia/sveltia-cms#user-content-fn-12-badaa007462add5cc68ab2bbbaa66912)\n    - `prefix`: A string to be prepended to the value. Default: an empty string.\n    - `use_b32_encoding`: Whether to encode the value with Base32. Default: `false`.\n    - `read_only`: Whether to make the field read-only. Default: `true`.\n\n### Better asset management\n\n[Permalink: Better asset management](https://github.com/sveltia/sveltia-cms#better-asset-management)\n\n- A completely new, full-fledged Asset Library, built separately from the image selection dialog, makes it easy to manage all of your files, including images, videos and documents.[222](https://github.com/sveltia/sveltia-cms#user-content-fn-96-badaa007462add5cc68ab2bbbaa66912)\n  - Navigate between the global media folder and [collection media folders](https://github.com/sveltia/sveltia-cms#using-a-custom-media-folder-for-a-collection).[223](https://github.com/sveltia/sveltia-cms#user-content-fn-6-badaa007462add5cc68ab2bbbaa66912)\n  - Preview image, audio, video, text and PDF files. Check your site’s [CSP](https://github.com/sveltia/sveltia-cms#setting-up-content-security-policy) if the preview doesn’t work.\n  - Copy the public URL,[224](https://github.com/sveltia/sveltia-cms#user-content-fn-74-badaa007462add5cc68ab2bbbaa66912) file path, text data or image data of a selected asset to clipboard. The file path starts with `/` as expected.[225](https://github.com/sveltia/sveltia-cms#user-content-fn-48-badaa007462add5cc68ab2bbbaa66912)\n  - Edit plain text assets, including SVG images.\n  - Rename existing assets. If the asset is used in any entries, the File/Image fields will be automatically updated with a new file path.\n  - Replace existing assets.\n  - Download one or more selected assets at once.\n  - Delete one or more selected assets at once.\n  - Upload multiple assets at once, including files in nested folders, by browsing or dragging and dropping them into the library.\n  - Sort or filter assets by name or file type.\n  - View asset details, including size, dimensions, commit author/date and a list of entries that use the selected asset.\n  - View some Exif metadata if available, including the creation date and GPS coordinates displayed on a map.\n- Enhancements to media libraries:\n  - Supports multiple media libraries with the [new `media_libraries` option](https://github.com/sveltia/sveltia-cms#configuring-multiple-media-libraries).[226](https://github.com/sveltia/sveltia-cms#user-content-fn-195-badaa007462add5cc68ab2bbbaa66912)\n  - Default media library\n    - It comes with a [built-in image optimizer](https://github.com/sveltia/sveltia-cms#optimizing-images-for-upload). With a few lines of configuration, images selected by users for upload are automatically converted to WebP format for reduced size,[227](https://github.com/sveltia/sveltia-cms#user-content-fn-199-badaa007462add5cc68ab2bbbaa66912) and it’s also possible to specify a maximum width and/or height.[228](https://github.com/sveltia/sveltia-cms#user-content-fn-200-badaa007462add5cc68ab2bbbaa66912) SVG images can also be optimized.\n    - The `max_file_size` option for the File/Image widget can be defined within the global `media_library` option, using `default` as the library name. It applies to all File/Image entry fields, as well as direct uploads to the Asset Library. The option can also be part of the [new `media_libraries` option](https://github.com/sveltia/sveltia-cms#configuring-multiple-media-libraries).\n    - Unlike Netlify/Decap CMS, files are uploaded with their original names. Uppercase letters and spaces are not converted to lowercase letters and hyphens.[229](https://github.com/sveltia/sveltia-cms#user-content-fn-97-badaa007462add5cc68ab2bbbaa66912) If you want to slugify filenames according to the [`slug` option](https://decapcms.org/docs/configuration-options/#slug-type), use the `slugify_filename` [default media library option](https://github.com/sveltia/sveltia-cms#configuring-multiple-media-libraries).\n  - Other integrations\n    - Integrates stock photo providers, including Pexels, Pixabay and Unsplash.[212](https://github.com/sveltia/sveltia-cms#user-content-fn-8-badaa007462add5cc68ab2bbbaa66912) Developers can [disable them](https://github.com/sveltia/sveltia-cms#disabling-stock-assets) if needed.\n    - More integration options, including Amazon S3 and Cloudflare R2/Images/Stream, would be added in the future.\n- Assets stored in the subfolders of `media_folder` are scanned recursively and displayed in the Asset Library.[230](https://github.com/sveltia/sveltia-cms#user-content-fn-249-badaa007462add5cc68ab2bbbaa66912)\n- The global `media_folder` can be an empty string (or `.` or `/`) if you want to store assets in the root folder.\n- PDF documents are displayed with a thumbnail image in both the Asset Library and the Select File dialog, making it easier to find the file you’re looking for.[32](https://github.com/sveltia/sveltia-cms#user-content-fn-38-badaa007462add5cc68ab2bbbaa66912)\n- Assets stored in an entry-relative media folder are displayed in the Asset Library.[231](https://github.com/sveltia/sveltia-cms#user-content-fn-142-badaa007462add5cc68ab2bbbaa66912)\n- These entry-relative assets are automatically deleted when the associated entry is deleted because these are not available for other entries.[232](https://github.com/sveltia/sveltia-cms#user-content-fn-22-badaa007462add5cc68ab2bbbaa66912) When you’re [working with a local repository](https://github.com/sveltia/sveltia-cms#working-with-a-local-git-repository), the empty enclosing folder is also deleted.\n- Hidden files (dot files) don’t appear in the Asset Library.[233](https://github.com/sveltia/sveltia-cms#user-content-fn-47-badaa007462add5cc68ab2bbbaa66912)\n- Users can add assets using the Quick Add button in the upper right corner of the application.\n\n### Better customization\n\n[Permalink: Better customization](https://github.com/sveltia/sveltia-cms#better-customization)\n\n- The application renders within the dimensions of a [custom mount element](https://decapcms.org/docs/custom-mounting/), if exists.[234](https://github.com/sveltia/sveltia-cms#user-content-fn-109-badaa007462add5cc68ab2bbbaa66912)\n- A custom logo defined with the `logo_url` property is displayed on the global application header and the browser tab (favicon).[235](https://github.com/sveltia/sveltia-cms#user-content-fn-134-badaa007462add5cc68ab2bbbaa66912) A smaller logo is also correctly positioned on the authentication page.[236](https://github.com/sveltia/sveltia-cms#user-content-fn-135-badaa007462add5cc68ab2bbbaa66912)\n- [`CMS.registerCustomFormat()`](https://decapcms.org/docs/custom-formatters/) supports async parser/formatter functions.[237](https://github.com/sveltia/sveltia-cms#user-content-fn-149-badaa007462add5cc68ab2bbbaa66912)\n- The component definition for [`CMS.registerEditorComponent()`](https://decapcms.org/docs/custom-widgets/#registereditorcomponent) accepts the `icon` property. Developers can specify a Material Symbols icon name just like [custom collection icons](https://github.com/sveltia/sveltia-cms#using-a-custom-icon-for-a-collection).\n\n### Better localization\n\n[Permalink: Better localization](https://github.com/sveltia/sveltia-cms#better-localization)\n\n- The application UI locale is automatically selected based on the preferred language set with the browser.[238](https://github.com/sveltia/sveltia-cms#user-content-fn-132-badaa007462add5cc68ab2bbbaa66912) Users can also change the locale in the application settings. Therefore, the `locale` configuration option is ignored and `CMS.registerLocale()` is not required.\n- The List widget’s `label` and `label_singular` are not converted to lowercase, which is especially problematic in German, where all nouns are capitalized.[239](https://github.com/sveltia/sveltia-cms#user-content-fn-98-badaa007462add5cc68ab2bbbaa66912)\n- Long menu item labels, especially in non-English locales, don’t overflow the dropdown container.[240](https://github.com/sveltia/sveltia-cms#user-content-fn-117-badaa007462add5cc68ab2bbbaa66912)\n\n## Compatibility\n\n[Permalink: Compatibility](https://github.com/sveltia/sveltia-cms#compatibility)\n\nWe are trying to make Sveltia CMS compatible with Netlify/Decap CMS where possible, so that more users can seamlessly switch to our modern alternative. It’s ready to be used as a drop-in replacement for Netlify/Decap CMS in some casual use case scenarios with a [single line of code update](https://github.com/sveltia/sveltia-cms#migration).\n\nHowever, 100% feature parity is never planned, and some features are still missing or will not be added due to performance, deprecation and other factors. Look at the compatibility info below to see if you can migrate now or in the near future.\n\n### Features not to be implemented\n\n[Permalink: Features not to be implemented](https://github.com/sveltia/sveltia-cms#features-not-to-be-implemented)\n\n- **Azure and Bitbucket backends**: For performance reasons. We’ll support these platforms if their APIs improve to allow the CMS to fetch multiple entries at once.\n- **Git Gateway backend**: Also for performance reasons. [Git Gateway](https://github.com/netlify/git-gateway) has not been actively maintained since Netlify CMS was abandoned, and it’s known to be slow and prone to rate limit violations. We plan to develop a GraphQL-based high-performance alternative in the future.\n- **Netlify Identity Widget**: It’s not useful without Git Gateway, and the Netlify Identity service itself is now [deprecated](https://www.netlify.com/changelog/deprecation-netlify-identity/). We plan to develop an alternative solution with role support in the future, most likely using [Cloudflare Workers](https://workers.cloudflare.com/) and [Auth.js](https://authjs.dev/).\n- The deprecated client-side implicit grant for the GitLab backend: It has already been [removed from GitLab 15.0](https://gitlab.com/gitlab-org/gitlab/-/issues/344609). Use the client-side PKCE authorization instead.\n- The deprecated Netlify Large Media service: Consider other storage providers.\n- Deprecated camel case configuration options: Use snake case instead, according to the current Decap CMS document.\n  - [Collection](https://decapcms.org/docs/configuration-options/#sortable_fields): `sortableFields`\n  - [DateTime](https://decapcms.org/docs/widgets/#datetime) widget: `dateFormat`, `timeFormat`, `pickerUtc`\n  - [Markdown](https://decapcms.org/docs/widgets/#markdown) widget: `editorComponents`\n  - [Number](https://decapcms.org/docs/widgets/#number) widget: `valueType`\n  - [Relation](https://decapcms.org/docs/widgets/#relation) widget: `displayFields`, `searchFields`, `valueField`\n  - Note: Some other camel case options, including Color widget options, are not deprecated.\n- The deprecated Date widget: It was removed from Decap CMS 3.0 and Sveltia CMS 0.10. Use the DateTime widget with the [`time_format: false` option](https://github.com/sveltia/sveltia-cms#changing-the-input-type-of-a-datetime-field) instead.\n- Some date/time format tokens: [Decap CMS 3.1.1](https://github.com/decaporg/decap-cms/releases/tag/decap-cms%403.1.1) replaced Moment.js with Day.js, and Sveltia CMS will follow suit soon. Since [Day.js tokens](https://day.js.org/docs/en/display/format) are not 100% compatible with [Moment.js tokens](https://momentjs.com/docs/#/displaying/format/), this could be a breaking change in certain cases.\n- The theme and keymap inline settings for the Code widget, along with support for some languages: We use the [Prism](https://prismjs.com/)-powered code block functionality in Lexical instead of [CodeMirror](https://codemirror.net/). Prism may be [replaced by Shiki](https://github.com/facebook/lexical/issues/6575) in the future.\n- Remark plugins for the Markdown widget: Not compatible with our Lexical-based rich text editor.\n- An absolute URL in the [`public_folder`](https://decapcms.org/docs/configuration-options/#public-folder) option: Such configuration is not recommended, as stated in the Netlify/Decap CMS document.\n- Performance-related options: Sveltia CMS has [drastically improved performance](https://github.com/sveltia/sveltia-cms#better-performance) with GraphQL enabled by default, so these are no longer relevant:\n\n  - Global: [`search`](https://decapcms.org/docs/configuration-options/#search)\n  - Backend: [`use_graphql`](https://decapcms.org/docs/github-backend/#graphql-api)\n  - Relation widget: `options_length`\n- The global [`locale`](https://decapcms.org/docs/configuration-options/#locale) option and `CMS.registerLocale()` method: Sveltia CMS automatically detects the user’s preferred language and changes the UI locale as [mentioned above](https://github.com/sveltia/sveltia-cms#better-localization).\n- [Undocumented methods](https://github.com/sveltia/sveltia-cms/blob/c69446da7bb0bab7405be741c0f92850c5dddfa8/src/main.js#L14-L37) exposed on the `CMS` object: This includes custom backends and custom media libraries, if any. We may support these features in the future, but our implementation would likely be incompatible with Netlify/Decap CMS.\n- Any other undocumented options/features. Exceptions apply.\n\n### Current limitations\n\n[Permalink: Current limitations](https://github.com/sveltia/sveltia-cms#current-limitations)\n\nThese Netlify/Decap CMS features are not yet implemented in Sveltia CMS. We are working hard to add them before the 1.0 release due late 2025. Check our [release notes](https://github.com/sveltia/sveltia-cms/releases) and [Bluesky](https://bsky.app/profile/sveltiacms.app) for updates.\n\n- Comprehensive site config validation\n- [Localization](https://github.com/sveltia/sveltia-cms/blob/main/src/lib/locales/README.md) other than English and Japanese\n- [Cloudinary](https://decapcms.org/docs/cloudinary/) and [Uploadcare](https://decapcms.org/docs/uploadcare/) media libraries ( [#4](https://github.com/sveltia/sveltia-cms/discussions/4))\n- LineString and Polygon types for the [Map](https://decapcms.org/docs/widgets/#map) widget\n- [Custom widgets](https://decapcms.org/docs/custom-widgets/)\n- [Custom editor components](https://decapcms.org/docs/custom-widgets/#registereditorcomponent): Support for preview, widgets with complex values (Code with `output_code_only:false`, Hidden, KeyValue, List, Object, Select/Relation with `multiple:true`), as well as the `default` field option, [multiline components](https://github.com/sveltia/sveltia-cms/issues/410) and [inline components](https://github.com/sveltia/sveltia-cms/issues/460)\n- [Custom preview templates](https://decapcms.org/docs/customization/#registerpreviewtemplate) ( [#51](https://github.com/sveltia/sveltia-cms/issues/51))\n- [Event hooks](https://decapcms.org/docs/registering-events/) ( [#167](https://github.com/sveltia/sveltia-cms/issues/167))\n\nDue to the complexity, we have decided to defer the following features to the 2.0 release due early 2026. Netlify/Decap CMS has a number of open issues with these collaboration and beta features — we want to implement them the right way.\n\n- [Editorial workflow](https://decapcms.org/docs/editorial-workflows/)\n- [Open authoring](https://decapcms.org/docs/open-authoring/)\n- [Nested collections](https://decapcms.org/docs/collection-nested/) (beta)\n- Field-specific media folders (beta) for the [File](https://decapcms.org/docs/widgets/#file) and [Image](https://decapcms.org/docs/widgets/#image) widgets\n\nFound a compatibility issue or other missing feature? [Let us know](https://github.com/sveltia/sveltia-cms/issues/new?type=bug). Bear in mind that undocumented behaviour can easily be overlooked.\n\n### Compatibility with Static CMS\n\n[Permalink: Compatibility with Static CMS](https://github.com/sveltia/sveltia-cms#compatibility-with-static-cms)\n\nSveltia CMS provides partial compatibility with [Static CMS](https://github.com/StaticJsCMS/static-cms), a now-defunct fork of Netlify CMS. Since Static CMS was archived some time ago, we don’t plan to implement additional compatibility beyond what’s listed below. However, we may still adopt some of their features that we find useful.\n\n- Configuration options\n  - Static CMS made [some breaking changes](https://staticjscms.netlify.app/docs/decap-migration-guide) to view filters/groups, List widget, etc. while Sveltia CMS follows Netlify/Decap CMS, so you should review your configuration carefully.\n  - The `default` option for sortable fields is [implemented in Sveltia CMS](https://github.com/sveltia/sveltia-cms#specifying-default-sort-field-and-direction).\n  - Directory navigation in the Asset Library is partially supported in Sveltia CMS. If you define [collection-specific `media_folder` s](https://github.com/sveltia/sveltia-cms#using-a-custom-media-folder-for-a-collection), these folders will be displayed in the Asset Library and Select File/Image dialog. Display of subfolders within a configured folder will be implemented before GA. We don’t plan to support the `folder_support` and `display_in_navigation` options for `media_library`; subfolders will be displayed with no configuration. ( [#301](https://github.com/sveltia/sveltia-cms/issues/301))\n  - The `logo_link` global option will not be supported. Use `display_url` or `site_url` instead.\n  - The `yaml` global option will not be supported, as Sveltia CMS doesn’t expose the underlying `yaml` library options for forward compatibility reasons. However, we do have some [data output options](https://github.com/sveltia/sveltia-cms#controlling-data-output), including YAML indentation and quotes.\n- I18n support\n  - The `enforce_required_non_default` i18n option will not be supported. Sveitia CMS enforces required fields in all locales by default. However, the `save_all_locales` or `initial_locales` i18n option allows users to [disable non-default locales](https://github.com/sveltia/sveltia-cms#disabling-non-default-locale-content) if needed. Developers can also specify a subset of locales with the `required` field option, e.g. `required: [en]`.\n- Widgets\n  - The date/time format options for the DateTime widget are **not compatible** since Static CMS [switched to date-fns](https://staticjscms.netlify.app/docs/decap-migration-guide#dates) while Sveltia CMS continues to use Moment.js (and will soon switch to Day.js). Update your formats accordingly.\n  - The KeyValue widget is implemented in Sveltia CMS with the same options.\n  - The UUID widget is also implemented, but with different options.\n  - The `prefix` and `suffix` options for the Boolean, Number and String widgets are implemented as `before_input` and `after_input` in Sveltia CMS, respectively. Our `prefix` and `suffix` options for the String widget are literally a prefix and suffix to the value.\n  - The `multiple` option for the File and Image widgets will be implemented in Sveltia CMS before GA. ( [#10](https://github.com/sveltia/sveltia-cms/issues/10))\n- Customization\n  - `CMS.registerIcon()` will not be supported, as Sveltia CMS includes the Material Symbols font for [custom collection icons](https://github.com/sveltia/sveltia-cms#using-a-custom-icon-for-a-collection) that doesn’t require manual registration.\n\n### Framework support\n\n[Permalink: Framework support](https://github.com/sveltia/sveltia-cms#framework-support)\n\nWhile Sveltia CMS is built with Svelte, the application is **framework-agnostic**. It’s a small, compiled, vanilla JavaScript bundle that manages content in a Git repository directly via an API. It doesn’t interact with the framework that builds your site.\n\nAs with Netlify/Decap CMS, you can use Sveltia CMS with any framework or static site generator (SSG) that loads static files during the build process. This includes Astro, Eleventy, Hugo, Jekyll, Next.js, SvelteKit, VitePress, and [more](https://decapcms.org/docs/install-decap-cms/).\n\nWe have added support for features and file structures used in certain frameworks and i18n libraries, such as [index file inclusion](https://github.com/sveltia/sveltia-cms#including-hugos-special-index-file-in-a-folder-collection) and [slug localization](https://github.com/sveltia/sveltia-cms#localizing-entry-slugs) for Hugo, i18n support for Astro and Zola, and [some enhancements](https://github.com/sveltia/sveltia-cms/issues/230) for VitePress. [Let us know](https://github.com/sveltia/sveltia-cms/issues/new?type=feature) if your framework has specific requirements.\n\n### Backend support\n\n[Permalink: Backend support](https://github.com/sveltia/sveltia-cms#backend-support)\n\n- The GitLab backend requires GitLab 16.3 or later.\n- The Gitea/Forgejo backend requires Gitea 1.24, Forgejo 12.0 or later. The default origin of the `base_url` and `api_root` [backend options](https://decapcms.org/docs/backends-overview/#backend-configuration) is set to `https://gitea.com` (public free service) instead of `https://try.gitea.io` (test instance).\n\n### Browser support\n\n[Permalink: Browser support](https://github.com/sveltia/sveltia-cms#browser-support)\n\nSveitia CMS works with all modern browsers, but there are a few limitations because it utilizes some new web technologies:\n\n- The [local repository workflow](https://github.com/sveltia/sveltia-cms#working-with-a-local-git-repository) requires a Chromium-based browser, including Chrome, Edge and Brave.\n- Safari: The Test backend doesn’t save changes locally; [image optimization](https://github.com/sveltia/sveltia-cms#optimizing-images-for-upload) is slower than in other browsers.\n- Firefox Extended Support Release (ESR) and its derivatives, including Tor Browser and Mullvad Browser, are not officially supported, although they may still work.\n\n### Other notes\n\n[Permalink: Other notes](https://github.com/sveltia/sveltia-cms#other-notes)\n\n- Sveltia CMS requires a [secure context](https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts), meaning it only works with HTTPS, `localhost` or `127.0.0.1` URLs. If you’re running a remote server yourself and the content is served over HTTP, get a TLS certificate from [Let’s Encrypt](https://letsencrypt.org/).\n- Some options added during the beta period may be changed or removed when the product reaches GA. While we’ll try to minimize breaking changes, please be aware that some of your configuration may need to be updated.\n\n## Getting started\n\n[Permalink: Getting started](https://github.com/sveltia/sveltia-cms#getting-started)\n\n### Installation & setup\n\n[Permalink: Installation & setup](https://github.com/sveltia/sveltia-cms#installation--setup)\n\nCurrently, Sveltia CMS is primarily intended for existing Netlify/Decap CMS users. If you don’t have it yet, follow [their documentation](https://decapcms.org/docs/basic-steps/) to add it to your site and create a configuration file first. Skip the [Choosing a Backend](https://decapcms.org/docs/choosing-a-backend/) page and choose the [GitHub](https://decapcms.org/docs/github-backend/), [GitLab](https://decapcms.org/docs/gitlab-backend/) or [Gitea/Forgejo](https://decapcms.org/docs/gitea-backend/) backend instead. Then migrate to Sveltia CMS as described below.\n\nOr try one of the starter kits for popular frameworks created by community members:\n\n- Astro\n  - [astros](https://github.com/zankhq/astros) by [@zanhk](https://github.com/zanhk)\n  - [Astro i18n Starter](https://github.com/yacosta738/astro-cms) by [@yacosta738](https://github.com/yacosta738)\n- Eleventy (11ty)\n  - [Eleventy starter template](https://github.com/danurbanowicz/eleventy-sveltia-cms-starter) by [@danurbanowicz](https://github.com/danurbanowicz)\n- Hugo\n  - [Hugo module](https://github.com/privatemaker/headless-cms) by [@privatemaker](https://github.com/privatemaker)\n  - [hugolify-admin](https://github.com/Hugolify/hugolify-admin) by [@sebousan](https://github.com/sebousan)\n\nThe Netlify/Decap CMS website has more [templates](https://decapcms.org/docs/start-with-a-template/) and [examples](https://decapcms.org/docs/examples/). You can probably use one of them and switch to Sveltia CMS. (Note: These third-party resources are not necessarily reviewed by the Sveltia CMS team.)\n\nUnfortunately, we are unable to provide free installation and setup support at this time. As the product evolves, we’ll provide a built-in configuration editor, comprehensive documentation and official starter kits to make it easier for everyone to get started with Sveltia CMS.\n\n### Migration\n\n[Permalink: Migration](https://github.com/sveltia/sveltia-cms#migration)\n\nHave a look at the [compatibility info](https://github.com/sveltia/sveltia-cms#compatibility) above first. If you’re already using Netlify/Decap CMS with the GitHub, GitLab or Gitea/Forgejo backend and don’t have any unsupported features like custom widgets or nested collections, migrating to Sveltia CMS is super easy — it works as a drop-in replacement.\n\nOpen `/admin/index.html` locally with an editor like VS Code and replace the CMS `<script>` tag with the new one:\n\n```\n<script src=\"https://unpkg.com/@sveltia/cms/dist/sveltia-cms.js\"></script>\n```\n\nFrom Netlify CMS:\n\n```\n-<script src=\"https://unpkg.com/netlify-cms@^2.0.0/dist/netlify-cms.js\"></script>\n+<script src=\"https://unpkg.com/@sveltia/cms/dist/sveltia-cms.js\"></script>\n```\n\nFrom Decap CMS:\n\n```\n-<script src=\"https://unpkg.com/decap-cms@^3.0.0/dist/decap-cms.js\"></script>\n+<script src=\"https://unpkg.com/@sveltia/cms/dist/sveltia-cms.js\"></script>\n```\n\nNext, let’s [test Sveltia CMS on your local machine](https://github.com/sveltia/sveltia-cms#working-with-a-local-git-repository). If everything looks good, push the change to your repository.\n\nYou can now open `https://[hostname]/admin/` as usual to start editing. There is even no authentication process if you’re already signed in with GitHub or GitLab on Netlify/Decap CMS because Sveltia CMS uses your auth token stored in the browser. Simple enough!\n\n#### Editing the configuration file\n\n[Permalink: Editing the configuration file](https://github.com/sveltia/sveltia-cms#editing-the-configuration-file)\n\nFor a better DX, we recommend [setting up the JSON schema](https://github.com/sveltia/sveltia-cms#enabling-autocomplete-and-validation-for-the-configuration-file) for the site configuration file in your code editor. If you have the YAML extension installed, VS Code may automatically apply the outdated Netlify CMS config schema to `config.yml`. To use the latest Sveltia CMS config schema instead, you need to specify its URL.\n\n#### Migrating from Git Gateway backend\n\n[Permalink: Migrating from Git Gateway backend](https://github.com/sveltia/sveltia-cms#migrating-from-git-gateway-backend)\n\nSveltia CMS does not support the Git Gateway backend due to performance limitations. If you don’t care about user management with Netlify Identity, you can use the [GitHub](https://decapcms.org/docs/github-backend/) or [GitLab](https://decapcms.org/docs/gitlab-backend/) backend instead. Make sure **you install an OAuth client** on GitHub or GitLab in addition to updating your configuration file. As noted in the document, Netlify is still able to facilitate the auth flow.\n\nTo allow other people to edit content, simply invite them to your GitHub repository with the write role assigned. Please note, however, that Sveltia CMS hasn’t implemented any mechanisms to prevent conflicts in multi-user scenarios.\n\nOnce you have migrated from the Git Gateway and Netlify Identity combo, you can remove the Netlify Identity Widget script tag from your HTML:\n\n```\n-<script src=\"https://identity.netlify.com/v1/netlify-identity-widget.js\"></script>\n```\n\nIf you want to stay with Netlify Identity, unfortunately you can’t migrate to Sveltia CMS right now. We plan to develop an alternative to Git Gateway and Netlify Identity Widget in the future.\n\n### Installing with npm\n\n[Permalink: Installing with npm](https://github.com/sveltia/sveltia-cms#installing-with-npm)\n\nFor advanced users, we have also made the bundle available as an [npm package](https://www.npmjs.com/package/@sveltia/cms). You can install it by running `npm i @sveltia/cms` or `pnpm add @sveltia/cms` on your project. The [manual initialization](https://decapcms.org/docs/manual-initialization/) flow with the `init` method is the same as for Netlify/Decap CMS.\n\n### Updates\n\n[Permalink: Updates](https://github.com/sveltia/sveltia-cms#updates)\n\nUpdating Sveltia CMS is transparent, unless you include a specific version in the `<script>` source URL or use the npm package. Whenever you (re)load the CMS, the latest version will be served via [UNPKG](https://unpkg.com/). The CMS also periodically checks for updates and notifies you when a new version is available. After the product reaches GA, you could use a semantic version range ( `^1.0.0`) like Netlify/Decap CMS.\n\nIf you’ve chosen to install with npm, updating the package is your responsibility. We strongly recommend using [`ncu`](https://www.npmjs.com/package/npm-check-updates) or a service like [Dependabot](https://github.blog/2020-06-01-keep-all-your-packages-up-to-date-with-dependabot/) to keep dependencies up to date. Otherwise, you’ll miss important bug fixes and new features. (ProTip: We update our dependencies using `ncu -u && pnpm up` at least once a week.)\n\n## Tips & tricks\n\n[Permalink: Tips & tricks](https://github.com/sveltia/sveltia-cms#tips--tricks)\n\n### Moving your site from Netlify to another hosting service\n\n[Permalink: Moving your site from Netlify to another hosting service](https://github.com/sveltia/sveltia-cms#moving-your-site-from-netlify-to-another-hosting-service)\n\nYou can host your Sveltia CMS-managed site anywhere, such as [Cloudflare Pages](https://pages.cloudflare.com/) or [GitHub Pages](https://pages.github.com/). But moving away from Netlify means you can no longer sign in with GitHub or GitLab via Netlify. Instead, you can use [our own OAuth client](https://github.com/sveltia/sveltia-cms-auth), which can be easily deployed to Cloudflare Workers, or [any other 3rd party client](https://decapcms.org/docs/external-oauth-clients/) made for Netlify/Decap CMS.\n\nYou can also generate a personal access token (PAT) on GitHub or GitLab, and use it to sign in. No OAuth client is needed. While this method is convenient for developers, it’s better to set up an OAuth client if your CMS instance is used by non-technical users because it’s more user-friendly and secure.\n\n### Enabling autocomplete and validation for the configuration file\n\n[Permalink: Enabling autocomplete and validation for the configuration file](https://github.com/sveltia/sveltia-cms#enabling-autocomplete-and-validation-for-the-configuration-file)\n\nSveltia CMS provides a full [JSON schema](https://json-schema.org/) for the configuration file, so you can get autocomplete and validation in your favourite code editor while editing the site configuration. The schema is generated from the source and always up to date with the latest CMS version.\n\nIf you use VS Code, you can enable it for the YAML configuration file by installing the [YAML extension](https://marketplace.visualstudio.com/items?itemName=redhat.vscode-yaml) and adding the following to your project’s [VS Code settings file](https://code.visualstudio.com/docs/configure/settings#_settings-json-file) at `.vscode/settings.json`:\n\n```\n{\n  \"yaml.schemas\": {\n    \"https://unpkg.com/@sveltia/cms/schema/sveltia-cms.json\": [\"/static/admin/config.yml\"]\n  }\n}\n```\n\nIf your configuration is in JSON format (see the [next section](https://github.com/sveltia/sveltia-cms#providing-a-json-configuration-file)), no extension is needed. Just add the following to the same VS Code settings file:\n\n```\n{\n  \"json.schemas\": [\\\n    {\\\n      \"fileMatch\": [\"/static/admin/config.json\"],\\\n      \"url\": \"https://unpkg.com/@sveltia/cms/schema/sveltia-cms.json\"\\\n    }\\\n  ]\n}\n```\n\nThe configuration file location varies by framework and project structure, so adjust the path accordingly. For example, if you use Astro, the file is typically located in the `/public/admin/` directory.\n\nIf you use another code editor, check its documentation for how to enable JSON schema support for YAML or JSON files. The schema URL is `https://unpkg.com/@sveltia/cms/schema/sveltia-cms.json`.\n\n### Providing a JSON configuration file\n\n[Permalink: Providing a JSON configuration file](https://github.com/sveltia/sveltia-cms#providing-a-json-configuration-file)\n\nSveltia CMS supports a configuration file written in the JSON format in addition to the standard YAML format. This allows developers to programmatically generate the CMS configuration to enable bulk or complex collections. To do this, simply add a `<link>` tag to your HTML, just like a [custom YAML config link](https://decapcms.org/docs/configuration-options/#configuration-file), but with the type `application/json`:\n\n```\n<link href=\"path/to/config.json\" type=\"application/json\" rel=\"cms-config-url\" />\n```\n\nAlternatively, you can [manually initialize](https://decapcms.org/docs/manual-initialization/) the CMS with a JavaScript configuration object.\n\n### Providing multiple configuration files\n\n[Permalink: Providing multiple configuration files](https://github.com/sveltia/sveltia-cms#providing-multiple-configuration-files)\n\nWith Sveltia CMS, developers can modularize the site configuration. Just provide multiple config links and the CMS will automatically merge them in the order of `<link>` tag appearance. It’s possible to use YAML, [JSON](https://github.com/sveltia/sveltia-cms#providing-a-json-configuration-file) or both.\n\n```\n<link href=\"/admin/config.yml\" type=\"application/yaml\" rel=\"cms-config-url\" />\n<link href=\"/admin/collections/authors.yml\" type=\"application/yaml\" rel=\"cms-config-url\" />\n<link href=\"/admin/collections/pages.yml\" type=\"application/yaml\" rel=\"cms-config-url\" />\n<link href=\"/admin/collections/posts.yml\" type=\"application/yaml\" rel=\"cms-config-url\" />\n```\n\nBoth standard `application/yaml` and non-standard `text/yaml` are acceptable for the YAML config link `type`.\n\nLimitation: YAML anchors, aliases and merge keys only work if they are in the same file, as files are merged with the [`deepmerge`](https://www.npmjs.com/package/deepmerge) library after being parsed as separate JavaScript objects.\n\n### Working around an authentication error\n\n[Permalink: Working around an authentication error](https://github.com/sveltia/sveltia-cms#working-around-an-authentication-error)\n\nIf you get an “Authentication Aborted” error when trying to sign in to GitHub, GitLab or Gitea/Forgejo using the authorization code flow, you may need to check your site’s [`Cross-Origin-Opener-Policy`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy). The COOP header is not widely used, but it’s known to break the OAuth flow with a popup window. If that’s your case, changing `same-origin` to `same-origin-allow-popups` solves the problem. ( [Discussion](https://github.com/sveltia/sveltia-cms/issues/131))\n\n### Working with a local Git repository\n\n[Permalink: Working with a local Git repository](https://github.com/sveltia/sveltia-cms#working-with-a-local-git-repository)\n\nSveltia CMS has simplified the local repository workflow by removing the need for additional configuration (the `local_backend` property) and a proxy server ( `netlify-cms-proxy-server` or `decap-server`), thanks to the [File System Access API](https://developer.chrome.com/docs/capabilities/web-apis/file-system-access) available in [some modern browsers](https://developer.mozilla.org/en-US/docs/web/api/window/showopenfilepicker#browser_compatibility).\n\nHere are the workflow steps and tips:\n\n1. Make sure you have configured the [GitHub](https://decapcms.org/docs/github-backend/), [GitLab](https://decapcms.org/docs/gitlab-backend/) or [Gitea/Forgejo](https://decapcms.org/docs/gitea-backend/) backend.\n\n   - The Git Gateway backend mentioned in the Netlify/Decap CMS [local Git repository document](https://decapcms.org/docs/working-with-a-local-git-repository/) is not supported in Sveltia CMS, so `name: git-gateway` won’t work. Use `github`, `gitlab` or `gitea` for the `name` along with the `repo` definition. If you haven’t determined your repository name yet, just use a tentative name.\n2. Launch the local development server for your frontend framework, typically with `npm run dev` or `pnpm dev`.\n3. Open `http://localhost:[port]/admin/index.html` with Chrome or Edge.\n\n   - The port number varies by framework. Check the terminal output from the previous step.\n   - The `127.0.0.1` addresses can also be used instead of `localhost`.\n   - If your CMS instance is not located under `/admin/`, use the appropriate path.\n   - Other Chromium-based browsers may also work. Brave user? [See below](https://github.com/sveltia/sveltia-cms#enabling-local-development-in-brave).\n4. Click “Work with Local Repository” and select the project’s root directory once prompted.\n   - If you get an error saying “not a repository root directory”, make sure you’ve turned the folder into a repository with either a CUI ( [`git init`](https://github.com/git-guides/git-init)) or GUI, and the hidden `.git` folder exists.\n   - If you’re using Windows Subsystem for Linux (WSL), you may get an error saying “Can’t open this folder because it contains system files.” This is due to a limitation in the browser, and you can try some workarounds mentioned in [this issue](https://github.com/coder/code-server/issues/4646) and [this thread](https://github.com/sveltia/sveltia-cms/discussions/101).\n5. Edit your content using the CMS. All changes are made to local files.\n6. Open the dev site at `http://localhost:[port]/` to check the rendered pages.\n\n   - Depending on your framework, you may need to manually rebuild your site to reflect the changes you have made.\n7. Use `git diff` or a GUI like [GitHub Desktop](https://desktop.github.com/) to see if the produced changes look good.\n8. Commit and push the changes if satisfied, or discard them if you’re just testing.\n\nIf you have migrated from Netlify/Decap CMS and are happy with the local repository workflow of Sveltia CMS, you can remove the `local_backend` property from your configuration and uninstall the proxy server. If you have configured a custom port number with the `.env` file, you can remove it as well.\n\nNote that, as with Netlify/Decap CMS, the local repository support in Sveltia CMS doesn’t perform any Git operations. You have to manually fetch, pull, commit and push all changes using a Git client. Additionally, you’ll need to reload the CMS after modifying the configuration file or retrieving remote updates.\n\nIn the future, it will probably be possible to commit changes locally. The proxy server actually has an experimental, undocumented Git mode that allows it.[241](https://github.com/sveltia/sveltia-cms#user-content-fn-131-badaa007462add5cc68ab2bbbaa66912) ( [Discussion](https://github.com/sveltia/sveltia-cms/discussions/31)) We also plan to use the newly available [File System Observer API](https://developer.chrome.com/blog/file-system-observer) to eliminate manual reloads.\n\n### Enabling local development in Brave\n\n[Permalink: Enabling local development in Brave](https://github.com/sveltia/sveltia-cms#enabling-local-development-in-brave)\n\nIn the Brave browser, you must enable the File System Access API with an experiment flag to take advantage of the [local repository workflow](https://github.com/sveltia/sveltia-cms#working-with-a-local-git-repository).\n\n1. Open `brave://flags/#file-system-access-api` in a new browser tab.\n2. Click Default (Disabled) next to File System Access API and select Enabled.\n3. Relaunch the browser.\n\n### Using a custom icon for a collection\n\n[Permalink: Using a custom icon for a collection](https://github.com/sveltia/sveltia-cms#using-a-custom-icon-for-a-collection)\n\nYou can specify an icon for each collection for easy identification in the collection list. You don’t need to install a custom icon set because the Material Symbols font file is already loaded for the application UI. Just pick one of the 2,500+ icons:\n\n1. Visit the [Material Symbols](https://fonts.google.com/icons?icon.set=Material+Symbols&icon.platform=web) page on Google Fonts.\n2. Browse and select an icon, and copy the icon name that appears at the bottom of the right pane.\n3. Add it to one of your collection definitions in `config.yml` as the new `icon` property, like the example below.\n4. Repeat the same steps for all the collections if desired.\n5. Commit and push the changes to your Git repository.\n6. Reload Sveltia CMS once the updated config file is deployed.\n\n```\nfields:\n  - name: tags\n    label: Tags\n    icon: sell # or any icon name\n    create: true\n    folder: content/tags\n```\n\n### Adding dividers to the collection list\n\n[Permalink: Adding dividers to the collection list](https://github.com/sveltia/sveltia-cms#adding-dividers-to-the-collection-list)\n\nWith Sveltia CMS, developers can add dividers to the collection list to distinguish between different types of collections. To do so, insert a new item with the `divider` option set to `true`. In VS Code, you may receive a validation error if `config.yml` is treated as a Netlify CMS configuration file. You can resolve this issue by [using our JSON schema](https://github.com/sveltia/sveltia-cms#enabling-autocomplete-and-validation-for-the-configuration-file).\n\n```\ncollections:\n  - name: products\n    ...\n  - divider: true\n  - name: pages\n    ...\n```\n\nThe [singleton collection](https://github.com/sveltia/sveltia-cms#using-singletons) also supports dividers.\n\n### Using a custom media folder for a collection\n\n[Permalink: Using a custom media folder for a collection](https://github.com/sveltia/sveltia-cms#using-a-custom-media-folder-for-a-collection)\n\nThis is actually not new in Sveltia CMS but rather an undocumented feature in Netlify/Decap CMS.[242](https://github.com/sveltia/sveltia-cms#user-content-fn-4-badaa007462add5cc68ab2bbbaa66912) You can specify media and public folders for each collection that override the [global media folder](https://decapcms.org/docs/configuration-options/#media-and-public-folders). Well, it’s [documented](https://decapcms.org/docs/collection-folder/#media-and-public-folder), but that’s probably not what you want.\n\nRather, if you’d like to add all the media files for a collection in one single folder, specify both `media_folder` and `public_folder` instead of leaving them empty. The trick is to use a **project relative path starting with a slash** for `media_folder` like the example below. You can try this with Netlify/Decap CMS first if you prefer.\n\n```\nmedia_folder: static/media # leading slash is optional\npublic_folder: /media\n\ncollections:\n  - name: products\n    label: Products\n    folder: content/products\n    media_folder: /static/media/products # make sure to append a slash\n    public_folder: /media/products\n```\n\nIn Sveltia CMS, those collection media folders are displayed prominently for easier asset management. We recommend setting `media_folder` and `public_folder` for each collection if it contains one or more File/Image fields.\n\n### Specifying default sort field and direction\n\n[Permalink: Specifying default sort field and direction](https://github.com/sveltia/sveltia-cms#specifying-default-sort-field-and-direction)\n\nSveltia CMS has extended the `sortable_fields` collection option to allow developers to define the field name and direction to be used for sorting entries by default. Our implementation is compatible with Static CMS. This is especially useful if you want to show entries sorted by date from new to old:\n\n```\ncollections:\n  - name: posts\n    sortable_fields:\n      fields: [title, published_date, author]\n      default:\n        field: published_date\n        direction: descending # default: ascending\n```\n\nFor backward compatibility with [Netlify/Decap CMS](https://decapcms.org/docs/configuration-options/#sortable_fields), `sortable_fields` with a field list (an array) will continue to work.\n\nFor backward compatibility with [Static CMS](https://staticjscms.netlify.app/docs/collection-overview#sortable-fields), the `direction` option accepts title case values: `Ascending` and `Descending`. However, `None` is not supported and has the same effect as `ascending`.\n\n### Including Hugo’s special index file in a folder collection\n\n[Permalink: Including Hugo’s special index file in a folder collection](https://github.com/sveltia/sveltia-cms#including-hugos-special-index-file-in-a-folder-collection)\n\nBefore this feature, Hugo’s [special `_index.md` file](https://gohugo.io/content-management/organization/#index-pages-_indexmd) was hidden in a folder collection, and you had to create a file collection to manage the file, since it usually comes with a different set of fields than regular entry fields. Now, with the new `index_file` option, you can add the index file to the corresponding folder collection, above regular entries, for easier editing:\n\n```\ncollections:\n  - name: posts\n    label: Blog posts\n    folder: content/posts\n    fields: # Fields for regular entries\n      - { name: title, label: Title }\n      - { name: date, label: Published Date, widget: datetime }\n      - { name: description, label: Description }\n      - { name: body, label: Body, widget: markdown }\n    index_file:\n      fields: # Fields for the index file\n        - { name: title, label: Title }\n        - { name: body, label: Body, widget: markdown }\n```\n\nHere is an example of full customization. All options are optional.\n\n```\nindex_file:\n  name: _index # File name without a locale or extension. Default: _index\n  label: Index File # Human-readable file label. Default: Index File\n  icon: home # Material Symbols icon name. Default: home\n  fields: # Fields for the index file. If omitted, regular entry fields are used\n    ...\n  editor:\n    preview: false # Hide the preview pane if needed. Default: true\n```\n\nIf your regular entry fields and index file fields are identical and you don’t need any options, simply write:\n\n```\nindex_file: true\n```\n\nNote that the special index file is placed right under the `folder`, regardless of the collection’s [`path` option](https://decapcms.org/docs/collection-folder/#folder-collections-path). For example, if the `path` is `{{year}}/{{slug}}`, a regular entry would be saved as `content/posts/2025/title.md`, but the index file remains at `content/posts/_index.md`.\n\n### Using singletons\n\n[Permalink: Using singletons](https://github.com/sveltia/sveltia-cms#using-singletons)\n\nThe singleton collection is an unnamed, non-nested variant of a [file collection](https://decapcms.org/docs/collection-file/) that can be used to manage a set of pre-defined data files. Singleton files appear in the content library’s sidebar under the Files group, and users can open the Content Editor directly without navigating to a file list.\n\nTo create this special file collection, add the new `singletons` option, along with an array of file definitions, to the root level of your site configuration.\n\nThis is a conventional file collection:\n\n```\ncollections:\n  - name: data\n    label: Data\n    files:\n      - name: home\n        label: Home Page\n        file: content/home.yaml\n        icon: home\n        fields: ...\n      - name: settings\n        label: Site Settings\n        file: content/settings.yaml\n        icon: settings\n        fields: ...\n```\n\nIt can be converted to the singleton collection like this:\n\n```\nsingletons:\n  - name: home\n    label: Home Page\n    file: content/home.yaml\n    icon: home\n    fields: ...\n  - divider: true # You can add dividers\n  - name: settings\n    label: Site Settings\n    file: content/settings.yaml\n    icon: settings\n    fields: ...\n```\n\nIf you want to reference a singleton file with a Relation field, use `_singletons` (note an underscore prefix) as the `collection` name.\n\n### Using keyboard shortcuts\n\n[Permalink: Using keyboard shortcuts](https://github.com/sveltia/sveltia-cms#using-keyboard-shortcuts)\n\n- View the Content Library: `Alt+1`\n- View the Asset Library: `Alt+2`\n- Search for entries and assets: `Ctrl+F` (Windows/Linux) or `Command+F` (macOS)\n- Create a new entry: `Ctrl+E` (Windows/Linux) or `Command+E` (macOS)\n- Save an entry: `Ctrl+S` (Windows/Linux) or `Command+S` (macOS)\n- Cancel entry editing: `Escape`\n\nStandard keyboard shortcuts are also available in the Markdown editor, including `Ctrl+B`/ `Command+B` for bold text, `Ctrl+I`/ `Command+I` for italics, and `Tab` to indent a list item.\n\n### Translating entry fields with one click\n\n[Permalink: Translating entry fields with one click](https://github.com/sveltia/sveltia-cms#translating-entry-fields-with-one-click)\n\nSveltia CMS comes with a handy Google Cloud Translation API integration so that you can translate any text field from another locale without leaving the Content Editor. To enable the quick translation feature:\n\n1. Update your configuration file to enable the [i18n support](https://decapcms.org/docs/i18n/) with multiple locales.\n2. Sign in or sign up for [Google Cloud](https://cloud.google.com/) and create a new project.\n3. Enable the [Cloud Translation API](https://console.cloud.google.com/apis/library/translate.googleapis.com). It’s free up to 500,000 characters per month.\n4. Create a [new API key](https://console.cloud.google.com/apis/api/translate.googleapis.com/credentials) and copy it.\n5. Open an entry in Sveltia CMS.\n6. Click on the Translation button on the pane header or each field, right next to the 3-dot menu.\n7. Paste your API key when prompted.\n8. The field(s) will be automatically translated.\n\nNote that the Translation button on the pane header only translates empty fields, while in-field Translation buttons override any filled text.\n\nEarlier versions of Sveltia CMS included DeepL integration, but it has been disabled [due to an API limitation](https://github.com/sveltia/sveltia-cms/issues/437). More translation services will be added in the future.\n\n### Localizing entry slugs\n\n[Permalink: Localizing entry slugs](https://github.com/sveltia/sveltia-cms#localizing-entry-slugs)\n\nIn Sveltia CMS, it’s possible to localize entry slugs (filenames) if the i18n structure is `multiple_files` or `multiple_folders`. All you need is the `localize` filter for `slug` template tags:\n\n```\ni18n:\n  structure: multiple_folders\n  locales: [en, fr]\n\nslug:\n  encoding: ascii\n  clean_accents: true\n\ncollections:\n  - name: posts\n    label: Blog posts\n    create: true\n    folder: content/posts\n    slug: '{{title | localize}}' # This does the trick\n    format: yaml\n    i18n: true\n    fields:\n      - name: title\n        label: Title\n        widget: string\n        i18n: true\n```\n\nWith this configuration, an entry is saved with localized filenames, while the default locale’s slug is stored in each file as an extra `translationKey` property, which is used in [Hugo’s multilingual support](https://gohugo.io/content-management/multilingual/#bypassing-default-linking). Sveltia CMS and Hugo read this property to link localized files.\n\n- `content/posts/en/my-trip-to-new-york.yaml`\n\n\n```\ntranslationKey: my-trip-to-new-york\ntitle: My trip to New York\n```\n\n- `content/posts/fr/mon-voyage-a-new-york.yaml`\n\n\n```\ntranslationKey: my-trip-to-new-york\ntitle: Mon voyage à New York\n```\n\n\nYou can customize the property name and value for a different framework or i18n library by adding the `canonical_slug` option to your top-level or collection-level `i18n` configuration. The example below is for [@astrolicious/i18n](https://github.com/astrolicious/i18n), which requires a locale prefix in the value ( [discussion](https://github.com/sveltia/sveltia-cms/issues/137)):\n\n```\ni18n:\n  canonical_slug:\n    key: defaultLocaleVersion # default: translationKey\n    value: 'en/{{slug}}' # default: {{slug}}\n```\n\nFor [Jekyll](https://migueldavid.eu/how-to-make-jekyll-multilingual-c13e74c18f1c), you may want to use the `ref` property:\n\n```\ni18n:\n  canonical_slug:\n    key: ref\n```\n\n### Disabling non-default locale content\n\n[Permalink: Disabling non-default locale content](https://github.com/sveltia/sveltia-cms#disabling-non-default-locale-content)\n\nYou can disable output of content in selected non-default locales by adding the `save_all_locales` property to the top-level or collection-level `i18n` configuration. Then you’ll find “Disable (locale name)” in the three-dot menu in the top right corner of the Content Editor. This is useful if the translation isn’t ready yet, but you want to publish the default locale content first.\n\nWith the following configuration, you can disable the French and/or German translation while writing in English.\n\n```\ni18n:\n  structure: multiple_files\n  locales: [en, fr, de]\n  default_locale: en\n  save_all_locales: false # default: true\n```\n\nAlternatively, developers can specify locales to be enabled by default when users create a new entry draft, using the new `initial_locales` option, which accepts a locale list, `default` (default locale only) or `all` (all locales). The default locale is always enabled, even if it’s excluded from `initial_locales`. When this option is used, `save_all_locales` is deemed `false`.\n\nThe following example disables German by default, but users can manually enable it if needed. Users can also disable French, which is enabled by default.\n\n```\ni18n:\n  structure: multiple_files\n  locales: [en, fr, de]\n  default_locale: en\n  initial_locales: [en, fr]\n```\n\n### Using a random ID for an entry slug\n\n[Permalink: Using a random ID for an entry slug](https://github.com/sveltia/sveltia-cms#using-a-random-id-for-an-entry-slug)\n\nBy default, the [slug for a new entry file](https://decapcms.org/docs/configuration-options/#slug) will be generated based on the entry’s `title` field. Or, you can specify the collection’s `slug` option to use the file creation date or other fields. While the behaviour is generally acceptable and SEO-friendly, it’s not useful if the title might change later or if it contains non-Latin characters like Chinese. In Sveltia CMS, you can easily generate a random [UUID](https://developer.mozilla.org/en-US/docs/Glossary/UUID) for a slug without a custom widget!\n\nIt’s simple — just specify `{{uuid}}` (full UUID v4), `{{uuid_short}}` (last 12 characters only) or `{{uuid_shorter}}` (first 8 characters only) in the `slug` option. The results would look like `4fc0917c-8aea-4ad5-a476-392bdcf3b642`, `392bdcf3b642` and `4fc0917c`, respectively.\n\n```\ncollections:\n  - name: members\n    label: Members\n    slug: '{{uuid_short}}' # or {{uuid}} or {{uuid_shorter}}\n```\n\n### Configuring multiple media libraries\n\n[Permalink: Configuring multiple media libraries](https://github.com/sveltia/sveltia-cms#configuring-multiple-media-libraries)\n\nThe traditional [`media_library`](https://decapcms.org/docs/configuration-options/#media-library) option allows developers to configure only one media library:\n\n```\nmedia_library:\n  name: default\n  config:\n    max_file_size: 1024000\n```\n\nSveltia CMS has added support for multiple media libraries with the new `media_libraries` option so you can mix up the default media library (your repository), [Cloudinary](https://decapcms.org/docs/cloudinary/) and [Uploadcare](https://decapcms.org/docs/uploadcare/). The new option can be used as a global option as well as a File/Image field option.\n\n```\nmedia_libraries:\n  default:\n    config:\n      max_file_size: 1024000 # default: Infinity\n      slugify_filename: true # default: false\n      transformations:\n        # See the next section\n  cloudinary:\n    config:\n      cloud_name: YOUR_CLOUD_NAME\n      api_key: YOUR_API_KEY\n    output_filename_only: true\n  uploadcare:\n    config:\n      publicKey: YOUR_PUBLIC_KEY\n    settings:\n      autoFilename: true\n      defaultOperations: '/resize/800x600/'\n```\n\nNote: Cloudinary and Uploadcare are not yet supported in Sveltia CMS.\n\n### Optimizing images for upload\n\n[Permalink: Optimizing images for upload](https://github.com/sveltia/sveltia-cms#optimizing-images-for-upload)\n\nEver wanted to prevent end-users from adding huge images to your repository? The built-in image optimizer in Sveltia CMS makes developers’ lives easier with a simple configuration like this:\n\n```\nmedia_libraries:\n  default:\n    config:\n      transformations:\n        raster_image: # original format\n          format: webp # new format, only `webp` is supported\n          quality: 85 # default: 85\n          width: 2048 # default: original size\n          height: 2048 # default: original size\n        svg:\n          optimize: true\n```\n\nThen, whenever a user selects images to upload, those images are automatically optimized, all within the browser. Raster images such as JPEG and PNG are converted to WebP format and resized if necessary. SVG images are minified using the [SVGO](https://github.com/svg/svgo) library.\n\nIn case you’re not aware, [WebP](https://developers.google.com/speed/webp) offers better compression than conventional formats and is now [widely supported](https://caniuse.com/webp) across major browsers. So there is no reason not to use WebP on the web.\n\n- As [noted above](https://github.com/sveltia/sveltia-cms#configuring-multiple-media-libraries), the `media_libraries` option can be global at the root level of `config.yml`, which applies to both entry fields and the Asset Library, or field-specific for the File/Image widgets.\n- `raster_image` applies to any supported raster image format: `avif`, `bmp`, `gif`, `jpeg`, `png` and `webp`. If you like, you can use a specific format as key instead of `raster_image`.\n- The `width` and `height` options are the maximum width and height, respectively. If an image is larger than the specified dimension, it will be scaled down. Smaller images will not be resized.\n- File processing is a bit slow on Safari because [native WebP encoding](https://caniuse.com/mdn-api_htmlcanvaselement_toblob_type_parameter_webp) is [not supported](https://bugs.webkit.org/show_bug.cgi?id=183257) and the [jSquash](https://github.com/jamsinclair/jSquash) library is used instead.\n- AVIF conversion is not supported because no browser has native AVIF encoding support ( [Chromium won’t fix it](https://issues.chromium.org/issues/40848792)) and the third-party library (and AVIF encoding in general) is very slow.\n- This feature is not intended for creating image variants in different formats and sizes. It should be done with a framework during the build process. Popular frameworks like [Astro](https://docs.astro.build/en/guides/images/), [Eleventy](https://www.11ty.dev/docs/plugins/image/), [Hugo](https://gohugo.io/content-management/image-processing/), [Next.js](https://nextjs.org/docs/pages/api-reference/components/image) and [SvelteKit](https://svelte.dev/docs/kit/images) have built-in image processing capabilities.\n- We may add more transformation options in the future.\n\n### Disabling stock assets\n\n[Permalink: Disabling stock assets](https://github.com/sveltia/sveltia-cms#disabling-stock-assets)\n\nThe Select File/Image dialog includes some stock photo providers for convenience, but sometimes these may be irrelevant. Developers can hide them with the following configuration:\n\n```\nmedia_libraries:\n  stock_assets:\n    providers: []\n```\n\n### Editing site deployment configuration files\n\n[Permalink: Editing site deployment configuration files](https://github.com/sveltia/sveltia-cms#editing-site-deployment-configuration-files)\n\nSveltia CMS allows users to edit files without extensions. Examples include `_headers` and `_redirects`, which are used by some static site hosting providers, such as [Netlify](https://docs.netlify.com/routing/redirects/), [GitLab Pages](https://docs.gitlab.com/user/project/pages/redirects/) and [Cloudflare Pages](https://developers.cloudflare.com/pages/configuration/redirects/). Since the `body` field is saved without the field name when using the default `yaml-frontmatter` format, you can use the following configuration to edit these files in the Content Editor:\n\n```\ncollections:\n  - name: config\n    label: Site Configuration\n    editor:\n      preview: false\n    files:\n      - name: headers\n        label: Headers\n        file: static/_headers # The path varies by framework\n        fields:\n          - name: body\n            label: Headers\n            widget: code # Can also be `text`\n            output_code_only: true\n            allow_language_selection: false\n      - name: redirects\n        label: Redirects\n        file: static/_redirects # The path varies by framework\n        fields:\n          - name: body\n            label: Redirects\n            widget: code # Can also be `text`\n            output_code_only: true\n            allow_language_selection: false\n```\n\n### Editing data files with a top-level list\n\n[Permalink: Editing data files with a top-level list](https://github.com/sveltia/sveltia-cms#editing-data-files-with-a-top-level-list)\n\nSveltia CMS allows you to edit and save a list at the top-level of a data file, without a field name. All you need to do is create a single List field with the new `root` option set to `true`. The configuration below reproduces [this Jekyll data file example](https://jekyllrb.com/docs/datafiles/#example-list-of-members):\n\n```\ncollections:\n  - name: data\n    label: Data Files\n    files:\n      - name: members\n        label: Member List\n        file: _data/members.yml\n        icon: group\n        fields:\n          - name: members\n            label: Members\n            label_singular: Member\n            widget: list\n            root: true # This does the trick\n            fields:\n              - name: name\n                label: Name\n              - name: github\n                label: GitHub account\n```\n\nIt also works with a [singleton](https://github.com/sveltia/sveltia-cms#using-singletons):\n\n```\nsingletons:\n  - name: members\n    label: Member List\n    file: _data/members.yml\n    icon: group\n    fields:\n      - name: members\n        label: Members\n        label_singular: Member\n        widget: list\n        root: true # This does the trick\n        fields:\n          - name: name\n            label: Name\n          - name: github\n            label: GitHub account\n```\n\nNote: The `root` option is ignored if the file or singleton contains multiple fields. You can still have subfields under the List field.\n\n### Changing the input type of a DateTime field\n\n[Permalink: Changing the input type of a DateTime field](https://github.com/sveltia/sveltia-cms#changing-the-input-type-of-a-datetime-field)\n\nIt may be worth mentioning this topic here because the current [Decap CMS doc about the DateTime widget](https://decapcms.org/docs/widgets/#datetime) is unclear. By default, a DateTime field lets users pick both [date and time](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/datetime-local), but developers can change the input type if needed.\n\nSet `time_format` to `false` to hide the time picker and make the input [date only](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date):\n\n```\n- label: Start Date\n  name: startDate\n  widget: datetime\n  time_format: false\n```\n\nSet `date_format` to `false` to hide the date picker and make the input [time only](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/time):\n\n```\n- label: Start Time\n  name: startTime\n  widget: datetime\n  date_format: false\n```\n\nWe understand that this configuration may be a bit confusing, but it’s necessary to maintain backward compatibility with Netlify CMS. We plan to add the `type` option to the DateTime widget and introduce new input types: year, [month](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/month) and [week](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/week).\n\n### Rendering soft line breaks as hard line breaks in Markdown\n\n[Permalink: Rendering soft line breaks as hard line breaks in Markdown](https://github.com/sveltia/sveltia-cms#rendering-soft-line-breaks-as-hard-line-breaks-in-markdown)\n\nThis tip is not really specific to Sveltia CMS, but some developers have asked the maintainer about it:\n\nIn the Markdown editor, pressing `Shift+Enter` inserts a [soft line break](https://spec.commonmark.org/0.31.2/#soft-line-breaks) ( `\\n`). We can’t change the behaviour to add a [hard line break](https://spec.commonmark.org/0.31.2/#hard-line-breaks) ( `<br>`) — it’s a limitation of the underlying [Lexical](https://lexical.dev/) framework. However, if you look at the preview, you may notice that soft line breaks are rendered as hard line breaks. That’s because the preview is using the [Marked](https://github.com/markedjs/marked) library with the [`breaks` option](https://marked.js.org/using_advanced#options) enabled, which mimics how comments are rendered on GitHub.\n\nChances are the Markdown parser you use for your frontend can do the same:\n\n- [markdown-it](https://github.com/markdown-it/markdown-it) (used in Eleventy and VitePress) also has the `breaks` option\n- [remarkable](https://github.com/jonschlinkert/remarkable) also has the `breaks` option\n- [Showdown](https://github.com/showdownjs/showdown) has the `simpleLineBreaks` option\n- [goldmark](https://github.com/yuin/goldmark/) (used in Hugo) has the `html.WithHardWraps` option\n- [kramdown](https://github.com/gettalong/kramdown) (used in Jekyll) has the `hard_wrap` option with the GFM parser\n- [remark](https://github.com/remarkjs/remark) (used in Astro) offers a [plugin](https://github.com/remarkjs/remark-breaks)\n- [micromark](https://github.com/micromark/micromark) clarifies it doesn’t have such an option and recommends alternatives\n\n### Controlling data output\n\n[Permalink: Controlling data output](https://github.com/sveltia/sveltia-cms#controlling-data-output)\n\nSveltia CMS supports some [data output](https://github.com/sveltia/sveltia-cms#better-data-output) options, including JSON/YAML formatting preferences, at the root level of the configuration file. The default options are listed below:\n\n```\noutput:\n  omit_empty_optional_fields: false\n  encode_file_path: false # true to URL-encode file paths for File/Image fields\n  json:\n    indent_style: space # or tab\n    indent_size: 2\n  yaml:\n    quote: none # or single or double\n    indent_size: 2\n```\n\n### Understanding exceptions in data output\n\n[Permalink: Understanding exceptions in data output](https://github.com/sveltia/sveltia-cms#understanding-exceptions-in-data-output)\n\nContent is generally saved as key-value pairs in a file, where the key is the field name and the value is the field value. However, there are some exceptions you should be aware of.\n\nIf the format is front matter, the `body` field is saved outside of the front matter block, as briefly explained in the [Decap CMS documentation](https://decapcms.org/docs/configuration-options/):\n\n```\n---\ntitle: My Post\ndate: 2025-01-01\n---\nThis is the body of my post.\n```\n\ninstead of\n\n```\n---\ntitle: My Post\ndate: 2025-01-01\nbody: This is the body of my post.\n---\n```\n\nIf there is only the `body` field, the front matter block is omitted altogether:\n\n```\nThis is the body of my post.\n```\n\nHowever, this doesn’t apply when i18n is enabled with the `single_file` structure. In this case, the `body` field is saved part of key-value pairs under each locale in the front matter block:\n\n```\n---\nen:\n  title: My Post\n  date: 2025-01-01\n  body: This is the body of my post.\nfr:\n  title: Mon article\n  date: 2025-01-01\n  body: C’est le corps de mon article.\n---\n```\n\nThere are two exceptional cases for the List widget:\n\n1. When the `field` (singular) option is used, the `name` property is omitted from the output. It will be saved as a simple list of values:\n\n\n\n```\nimages:\n  - https://example.com/image1.jpg\n  - https://example.com/image2.jpg\n```\n\ninstead of an array of objects:\n\n```\nimages:\n  - name: https://example.com/image1.jpg\n  - name: https://example.com/image2.jpg\n```\n\nThis is not mentioned in the [Decap CMS documentation](https://decapcms.org/docs/widgets/#list), but it’s a known behaviour. If you expect the latter, you can use the `fields` (plural) option to define a single field:\n\n```\n- name: images\nlabel: Images\nwidget: list\nfields:\n    - { name: image, label: Image, widget: image }\n```\n\n2. When the [`root` option](https://github.com/sveltia/sveltia-cms#editing-data-files-with-a-top-level-list) is set to `true`, the List field is saved as a top-level list without a field name:\n\n\n\n```\n- name: John Doe\nid: 12345\n- name: Jane Smith\nid: 67890\n```\n\ninstead of\n\n```\nmembers:\n  - name: John Doe\n    id: 12345\n  - name: Jane Smith\n    id: 67890\n```\n\n### Disabling automatic deployments\n\n[Permalink: Disabling automatic deployments](https://github.com/sveltia/sveltia-cms#disabling-automatic-deployments)\n\nYou may already have a CI/CD tool set up on your Git repository to automatically deploy changes to production. Occasionally, you make a lot of changes to your content to quickly reach the CI/CD provider’s (free) build limits, or you just don’t want to see builds triggered for every single small change.\n\nWith Sveltia CMS, you can disable automatic deployments by default and manually trigger deployments at your convenience. This is done by adding the `[skip ci]` prefix to commit messages, the convention supported by [GitHub Actions](https://docs.github.com/en/actions/managing-workflow-runs/skipping-workflow-runs), [GitLab CI/CD](https://docs.gitlab.com/ee/ci/pipelines/#skip-a-pipeline), [CircleCI](https://circleci.com/docs/skip-build/#skip-jobs), [Travis CI](https://docs.travis-ci.com/user/customizing-the-build/#skipping-a-build), [Netlify](https://docs.netlify.com/site-deploys/manage-deploys/#skip-a-deploy), [Cloudflare Pages](https://developers.cloudflare.com/pages/platform/branch-build-controls/#skip-builds) and others. Here are the steps to use it:\n\n1. Add the new `automatic_deployments` property to your `backend` configuration with a value of `false`:\n\n\n\n```\nbackend:\n     name: github\n     repo: owner/repo\n     branch: main\n     automatic_deployments: false\n```\n\n2. Commit and deploy the change to the config file and reload the CMS.\n3. Now, whenever you save an entry or asset, `[skip ci]` is automatically added to each commit message. However, deletions are always committed without the prefix to avoid unexpected data retention on your site.\n4. If you want to deploy a new or updated entry, as well as any other unpublished entries and assets, click an arrow next to the Save button in the Content Editor, then select **Save and Publish**. This will trigger CI/CD by omitting `[skip ci]`.\n\nIf you set `automatic_deployments` to `true`, the behaviour is reversed. CI/CD will be triggered by default, while you have an option to **Save without Publishing** that adds `[skip ci]` only to the associated commit.\n\nGotcha: Unpublished entries and assets are not drafts. Once committed to your repository, those changes can be deployed any time another commit is pushed without `[skip ci]`, or when a manual deployment is triggered.\n\nIf the `automatic_deployments` property is defined, you can manually trigger a deployment by clicking the **Publish Changes** button on the application header. To use this feature:\n\n- GitHub Actions:\n1. Without any configuration, Publish Changes will [trigger a `repository_dispatch` event](https://docs.github.com/en/rest/repos/repos#create-a-repository-dispatch-event) with the `sveltia-cms-publish` event type. Update your build workflow to receive this event:\n\n\n\n     ```\n     on:\n       push:\n         branches: [$default-branch]\n       repository_dispatch:\n         types: [sveltia-cms-publish]\n     ```\n- Other CI/CD providers:\n1. Select Settings under the Account button in the top right corner of the CMS.\n2. Select the Advanced tab.\n3. Enter the deploy hook URL for your provider, e.g. [Netlify](https://docs.netlify.com/configure-builds/build-hooks/) or [Cloudflare Pages](https://developers.cloudflare.com/pages/platform/deploy-hooks/).\n4. Configure the CSP if necessary. See below.\n\n### Setting up Content Security Policy\n\n[Permalink: Setting up Content Security Policy](https://github.com/sveltia/sveltia-cms#setting-up-content-security-policy)\n\nIf your site adopts Content Security Policy (CSP), use the following policy for Sveltia CMS, or some features may not work.\n\n```\nstyle-src 'self' 'unsafe-inline' https://fonts.googleapis.com;\nfont-src 'self' https://fonts.gstatic.com;\nimg-src 'self' blob: data:;\nmedia-src blob:;\nframe-src blob:;\nscript-src 'self' https://unpkg.com;\nconnect-src 'self' blob: data: https://unpkg.com;\n\n```\n\n(UNPKG is used not only to download the CMS script bundle, but also to check for the latest version and retrieve additional dependencies such as [PDF.js](https://github.com/mozilla/pdf.js) and [Prism](https://prismjs.com/) language definitions)\n\nThen, add the following origins depending on your Git backend and enabled integrations.\n\n- GitHub: (If you’re running a GitHub Enterprise Server, you’ll also need to add the origin to these directives.)\n  - `img-src`\n\n\n    ```\n    https://*.githubusercontent.com\n\n    ```\n\n  - `connect-src`\n\n\n    ```\n    https://api.github.com https://www.githubstatus.com\n\n    ```\n- GitLab: (If you’re running a self-hosted instance, you’ll also need to add the origin to these directives.)\n  - `img-src`\n\n\n    ```\n    https://gitlab.com https://secure.gravatar.com\n\n    ```\n\n  - `connect-src`\n\n\n    ```\n    https://gitlab.com https://status-api.hostedstatus.com\n\n    ```\n- Gitea/Forgejo: (If you’re running a self-hosted instance, use the origin instead.)\n  - `img-src`\n\n\n    ```\n    https://gitea.com\n\n    ```\n\n  - `connect-src`\n\n\n    ```\n    https://gitea.com\n\n    ```\n- OpenStreetMap: (used in the built-in Map widget)\n  - `img-src`\n\n\n    ```\n    https://*.openstreetmap.org\n\n    ```\n\n  - `connect-src`\n\n\n    ```\n    https://*.openstreetmap.org\n\n    ```\n- Pexels:\n  - `img-src`\n\n\n    ```\n    https://images.pexels.com\n\n    ```\n\n  - `connect-src`\n\n\n    ```\n    https://images.pexels.com https://api.pexels.com\n\n    ```\n- Pixabay:\n  - `img-src`\n\n\n    ```\n    https://pixabay.com\n\n    ```\n\n  - `connect-src`\n\n\n    ```\n    https://pixabay.com\n\n    ```\n- Unsplash:\n  - `img-src`\n\n\n    ```\n    https://images.unsplash.com\n\n    ```\n\n  - `connect-src`\n\n\n    ```\n    https://images.unsplash.com https://api.unsplash.com\n\n    ```\n- Google Cloud Translation:\n  - `connect-src`\n\n\n    ```\n    https://translation.googleapis.com\n\n    ```\n- YouTube:\n  - `frame-src`\n\n\n    ```\n    https://www.youtube-nocookie.com\n\n    ```\n\nIf you choose to [disable automatic deployments](https://github.com/sveltia/sveltia-cms#disabling-automatic-deployments) and have configured a webhook URL, you may need to add the origin to the `connect-src` directive. For example,\n\n- Netlify:\n  - `connect-src`\n\n\n    ```\n    https://api.netlify.com\n\n    ```\n- Cloudflare Pages\n  - `connect-src`\n\n\n    ```\n    https://api.cloudflare.com\n\n    ```\n\nIf you have image field(s) and expect that images will be inserted as URLs, you may want to allow any source using a wildcard instead of specifying individual origins:\n\n```\nimg-src 'self' blob: data: https://*;\n\n```\n\n### Showing the CMS version\n\n[Permalink: Showing the CMS version](https://github.com/sveltia/sveltia-cms#showing-the-cms-version)\n\n1. Click on your avatar in the top right corner of the application to open the Account menu.\n2. Click Settings.\n3. Click the Advanced tab.\n4. Enable Developer Mode.\n5. Close the Settings dialog.\n\nA Release Notes link will now appear under the Account menu with the current application version.\n\n## Support & feedback\n\n[Permalink: Support & feedback](https://github.com/sveltia/sveltia-cms#support--feedback)\n\nWhile we don’t have dedicated developer/user support resources, you can post [quick questions](https://github.com/sveltia/sveltia-cms/discussions/new?category=q-a) on the [Discussions](https://github.com/sveltia/sveltia-cms/discussions) page of our GitHub repository. [Feedback](https://github.com/sveltia/sveltia-cms/discussions/new?category=ideas) is also welcome, but please check the [Compatibility](https://github.com/sveltia/sveltia-cms#compatibility) and [Roadmap](https://github.com/sveltia/sveltia-cms#roadmap) sections of this README before starting a new discussion — your idea may already be covered.\n\nJoin us on [Discord](https://discord.gg/5hwCGqup5b) or ping us on [Bluesky](https://bsky.app/profile/sveltiacms.app) for a casual chat.\n\nAs described throughout this README, Sveltia CMS is being built as a replacement for Netlify/Decap CMS. At this point, we assume that most developers and users are moving from the other product. We are happy to help you migrate, but **we cannot help you set up Sveltia CMS from scratch** through our free support channels.\n\nPlanning to build a website with Sveltia CMS? Looking for professional support? Maintainer [@kyoshino](https://github.com/kyoshino) is available for hire depending on your needs. Feel free to reach out!\n\n## Contributions\n\n[Permalink: Contributions](https://github.com/sveltia/sveltia-cms#contributions)\n\nSee [Contributing to Sveltia CMS](https://github.com/sveltia/sveltia-cms/blob/main/CONTRIBUTING.md). Bug reports are highly encouraged!\n\n## Roadmap\n\n[Permalink: Roadmap](https://github.com/sveltia/sveltia-cms#roadmap)\n\nThe list below gives you an idea of what we are working on and what we plan to implement in the future. It is not a complete list of all issues, but rather a summary of the most important features and improvements. Things may change as we progress, so please check back regularly.\n\n### v1.0\n\n[Permalink: v1.0](https://github.com/sveltia/sveltia-cms#v10)\n\nDue late 2025\n\n- Enhanced [compatibility with Netlify/Decap CMS](https://github.com/sveltia/sveltia-cms#current-limitations)\n- Tackling some more Netlify/Decap CMS issues:\n  - [Directory navigation in the Asset Library](https://github.com/sveltia/sveltia-cms/issues/420) [243](https://github.com/sveltia/sveltia-cms#user-content-fn-240-badaa007462add5cc68ab2bbbaa66912)\n  - [Multiple file selection with the File and Image widgets](https://github.com/sveltia/sveltia-cms/issues/10) [244](https://github.com/sveltia/sveltia-cms#user-content-fn-239-badaa007462add5cc68ab2bbbaa66912)\n  - Advanced Relation fields[245](https://github.com/sveltia/sveltia-cms#user-content-fn-242-badaa007462add5cc68ab2bbbaa66912), including cascade updates/deletes[246](https://github.com/sveltia/sveltia-cms#user-content-fn-243-badaa007462add5cc68ab2bbbaa66912)\n    - We’ll also implement [reverse reference lists](https://github.com/sveltia/sveltia-cms/discussions/416)\n  - Several Cloudinary and Uploadcare media library issues, including selection of existing files[247](https://github.com/sveltia/sveltia-cms#user-content-fn-247-badaa007462add5cc68ab2bbbaa66912)\n  - [Automatic asset file renaming with templates](https://github.com/sveltia/sveltia-cms/issues/422) [248](https://github.com/sveltia/sveltia-cms#user-content-fn-241-badaa007462add5cc68ab2bbbaa66912)\n  - [RTL localization support](https://github.com/sveltia/sveltia-cms/issues/385) [249](https://github.com/sveltia/sveltia-cms#user-content-fn-245-badaa007462add5cc68ab2bbbaa66912)\n  - Thorough site config validation[250](https://github.com/sveltia/sveltia-cms#user-content-fn-246-badaa007462add5cc68ab2bbbaa66912)\n  - [Entry pre-validation/normalization](https://github.com/sveltia/sveltia-cms/issues/395) [251](https://github.com/sveltia/sveltia-cms#user-content-fn-248-badaa007462add5cc68ab2bbbaa66912)\n- Migration from Moment.js to Day.js\n- Accessibility audit\n- [Localization](https://github.com/sveltia/sveltia-cms/blob/main/src/lib/locales/README.md)\n- Developer documentation (implementation guide)\n- Marketing site\n- [Live demo site](https://github.com/sveltia/sveltia-cms/issues/1)\n\n### v2.0\n\n[Permalink: v2.0](https://github.com/sveltia/sveltia-cms#v20)\n\nDue early 2026\n\n- Implementing [a few deferred Netlify/Decap CMS features](https://github.com/sveltia/sveltia-cms#current-limitations), including editorial workflow and nested collections\n- End-user documentation\n\n### Future\n\n[Permalink: Future](https://github.com/sveltia/sveltia-cms#future)\n\n- Tackling many of the remaining Netlify/Decap CMS issues, including:\n  - MDX support[252](https://github.com/sveltia/sveltia-cms#user-content-fn-122-badaa007462add5cc68ab2bbbaa66912)\n  - [Manual entry sorting](https://github.com/sveltia/sveltia-cms/issues/214) [253](https://github.com/sveltia/sveltia-cms#user-content-fn-125-badaa007462add5cc68ab2bbbaa66912)\n  - [Saving drafts without editorial workflow](https://github.com/sveltia/sveltia-cms/discussions/440) [254](https://github.com/sveltia/sveltia-cms#user-content-fn-261-badaa007462add5cc68ab2bbbaa66912)\n  - [Tables in Markdown](https://github.com/sveltia/sveltia-cms/issues/455) [255](https://github.com/sveltia/sveltia-cms#user-content-fn-256-badaa007462add5cc68ab2bbbaa66912)\n  - [Config editor](https://github.com/sveltia/sveltia-cms/discussions/452) [256](https://github.com/sveltia/sveltia-cms#user-content-fn-10-badaa007462add5cc68ab2bbbaa66912)\n  - [Theming](https://github.com/sveltia/sveltia-cms/issues/29) [257](https://github.com/sveltia/sveltia-cms#user-content-fn-262-badaa007462add5cc68ab2bbbaa66912)\n  - [Reusable field groups](https://github.com/sveltia/sveltia-cms/discussions/463) [258](https://github.com/sveltia/sveltia-cms#user-content-fn-263-badaa007462add5cc68ab2bbbaa66912)\n  - Offline support[259](https://github.com/sveltia/sveltia-cms#user-content-fn-238-badaa007462add5cc68ab2bbbaa66912)\n  - and other [top-voted features](https://github.com/decaporg/decap-cms/issues?q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc)\n  - (some of them may be included in v2.0)\n- **Sveltia CMS Additions**: edge functions for Cloudflare Workers and possibly other platforms that provide features that cannot be implemented client-side:\n\n  - User management (Netlify Identity alternative) with roles[260](https://github.com/sveltia/sveltia-cms#user-content-fn-23-badaa007462add5cc68ab2bbbaa66912)\n  - Sign-in without a Git service account (Git Gateway alternative)\n  - Post locking (like [WordPress](https://codex.wordpress.org/Post_Locking))[261](https://github.com/sveltia/sveltia-cms#user-content-fn-166-badaa007462add5cc68ab2bbbaa66912)\n  - Scheduled posts[262](https://github.com/sveltia/sveltia-cms#user-content-fn-167-badaa007462add5cc68ab2bbbaa66912)\n  - Credential management for service API keys, deploy hook URL, etc.\n  - Proxy for services that don’t support [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS):\n\n    - [DeepL](https://github.com/sveltia/sveltia-cms/issues/437)\n    - [Git LFS support for GitHub](https://github.com/sveltia/sveltia-cms/discussions/353) [263](https://github.com/sveltia/sveltia-cms#user-content-fn-244-badaa007462add5cc68ab2bbbaa66912)\n- [Local repository workflow](https://github.com/sveltia/sveltia-cms#working-with-a-local-git-repository) improvements: Git mode[241](https://github.com/sveltia/sveltia-cms#user-content-fn-131-badaa007462add5cc68ab2bbbaa66912) and File System Observer support\n- [Preact+HTM support](https://github.com/sveltia/sveltia-cms/discussions/153) for custom widgets, editor components and preview templates\n- View, compare and restore revisions (like [WordPress](https://wordpress.com/support/page-post-revisions/))\n- More integration options: stock photos, stock videos, cloud storage providers, translation services, maps, analytics tools, etc.\n- AI integrations for image generation, content writing, translation, etc.\n- Search enhancements\n- Advanced digital asset management (DAM) features, including image editing and tagging[264](https://github.com/sveltia/sveltia-cms#user-content-fn-114-badaa007462add5cc68ab2bbbaa66912)\n- Marketplace for custom widgets, etc.\n- Official starter templates for the most popular frameworks, including SvelteKit and Next.js\n- Contributor documentation\n- and so much more!\n\n## Trivia\n\n[Permalink: Trivia](https://github.com/sveltia/sveltia-cms#trivia)\n\n- The [original version of Netlify CMS](https://github.com/netlify/netlify-cms-legacy) was built with Ember before being rewritten in React. And now we are completely rewriting it in Svelte. So this is effectively the second time the application has gone through a framework migration.\n- Our [local repository workflow](https://github.com/sveltia/sveltia-cms#working-with-a-local-git-repository) shares implementation with the Test backend, as both utilize the [File System API](https://developer.mozilla.org/en-US/docs/Web/API/File_System_API), allowing us to reduce maintenance costs. The seamless local workflow is critical not only for improved DX, but also for our rapid application development.\n\n## Related links\n\n[Permalink: Related links](https://github.com/sveltia/sveltia-cms#related-links)\n\n- Introducing Sveltia CMS: a short technical presentation by [@kyoshino](https://github.com/kyoshino) during the _This Week in Svelte_ online meetup on March 31, 2023 — [recording](https://youtu.be/-YjLubiieYs?t=1660) & [slides](https://docs.google.com/presentation/d/1Wi4ty-1AwOp2-zy7LctmzCV4rrdYPfke9NGhO0DdRdM)\n\n### As seen on\n\n[Permalink: As seen on](https://github.com/sveltia/sveltia-cms#as-seen-on)\n\n- [LogRocket Blog – 9 best Git-based CMS platforms for your next project](https://blog.logrocket.com/9-best-git-based-cms-platforms/)\n- [Jamstack – Headless CMS](https://jamstack.org/headless-cms/)\n- [Hugo – Front-end interfaces](https://gohugo.io/tools/front-ends/)\n- [Made with Svelte](https://madewithsvelte.com/sveltia-cms)\n\n## Disclaimer\n\n[Permalink: Disclaimer](https://github.com/sveltia/sveltia-cms#disclaimer)\n\nThis software is provided “as is” without any express or implied warranty. We are not obligated to provide any support for the application. This product is not affiliated with or endorsed by Netlify, Decap CMS or any other integrated services. All product names, logos, and brands are the property of their respective owners.\n\n## Footnotes\n\n001. Netlify/Decap CMS [#2536](https://github.com/decaporg/decap-cms/issues/2536) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-178-badaa007462add5cc68ab2bbbaa66912)\n\n002. Netlify/Decap CMS [#2557](https://github.com/decaporg/decap-cms/issues/2557) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-1-badaa007462add5cc68ab2bbbaa66912)\n\n003. Netlify/Decap CMS [#3263](https://github.com/decaporg/decap-cms/issues/3263) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-211-badaa007462add5cc68ab2bbbaa66912)\n\n004. Netlify/Decap CMS [#3264](https://github.com/decaporg/decap-cms/issues/3264) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-212-badaa007462add5cc68ab2bbbaa66912)\n\n005. Netlify/Decap CMS [#3265](https://github.com/decaporg/decap-cms/issues/3265) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-213-badaa007462add5cc68ab2bbbaa66912)\n\n006. Netlify/Decap CMS [#3266](https://github.com/decaporg/decap-cms/issues/3266) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-214-badaa007462add5cc68ab2bbbaa66912)\n\n007. Netlify/Decap CMS [#2039](https://github.com/decaporg/decap-cms/issues/2039), [#3267](https://github.com/decaporg/decap-cms/issues/3267), [#7084](https://github.com/decaporg/decap-cms/discussions/7084) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-2-badaa007462add5cc68ab2bbbaa66912)\n\n008. Netlify/Decap CMS [#441](https://github.com/decaporg/decap-cms/issues/441), [#1277](https://github.com/decaporg/decap-cms/issues/1277), [#1339](https://github.com/decaporg/decap-cms/issues/1339), [#2500](https://github.com/decaporg/decap-cms/issues/2500), [#2833](https://github.com/decaporg/decap-cms/issues/2833), [#2984](https://github.com/decaporg/decap-cms/issues/2984), [#3852](https://github.com/decaporg/decap-cms/issues/3852), [#7083](https://github.com/decaporg/decap-cms/discussions/7083) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-18-badaa007462add5cc68ab2bbbaa66912)\n\n009. Netlify/Decap CMS [#7241](https://github.com/decaporg/decap-cms/issues/7241) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-215-badaa007462add5cc68ab2bbbaa66912)\n\n010. Netlify/Decap CMS [#5656](https://github.com/decaporg/decap-cms/issues/5656), [#5837](https://github.com/decaporg/decap-cms/issues/5837), [#5972](https://github.com/decaporg/decap-cms/issues/5972), [#6476](https://github.com/decaporg/decap-cms/issues/6476), [#6516](https://github.com/decaporg/decap-cms/issues/6516), [#6930](https://github.com/decaporg/decap-cms/issues/6930), [#7080](https://github.com/decaporg/decap-cms/issues/7080), [#7105](https://github.com/decaporg/decap-cms/issues/7105), [#7106](https://github.com/decaporg/decap-cms/issues/7106), [#7119](https://github.com/decaporg/decap-cms/issues/7119), [#7176](https://github.com/decaporg/decap-cms/issues/7176), [#7194](https://github.com/decaporg/decap-cms/issues/7194), [#7244](https://github.com/decaporg/decap-cms/issues/7244), [#7278](https://github.com/decaporg/decap-cms/issues/7278), [#7301](https://github.com/decaporg/decap-cms/issues/7301), [#7342](https://github.com/decaporg/decap-cms/issues/7342), [#7348](https://github.com/decaporg/decap-cms/issues/7348), [#7354](https://github.com/decaporg/decap-cms/issues/7354), [#7376](https://github.com/decaporg/decap-cms/issues/7376), [#7408](https://github.com/decaporg/decap-cms/issues/7408), [#7412](https://github.com/decaporg/decap-cms/issues/7412), [#7413](https://github.com/decaporg/decap-cms/issues/7413), [#7422](https://github.com/decaporg/decap-cms/issues/7422), [#7427](https://github.com/decaporg/decap-cms/issues/7427), [#7434](https://github.com/decaporg/decap-cms/issues/7434), [#7438](https://github.com/decaporg/decap-cms/issues/7438), [#7454](https://github.com/decaporg/decap-cms/issues/7454), [#7464](https://github.com/decaporg/decap-cms/issues/7464), [#7471](https://github.com/decaporg/decap-cms/issues/7471), [#7485](https://github.com/decaporg/decap-cms/issues/7485), [#7499](https://github.com/decaporg/decap-cms/issues/7499), [#7515](https://github.com/decaporg/decap-cms/issues/7515), [#7564](https://github.com/decaporg/decap-cms/issues/7564) — These `removeChild` crashes are common in React apps, likely caused by a [browser extension](https://github.com/facebook/react/issues/17256) or [Google Translate](https://github.com/facebook/react/issues/11538). [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-113-badaa007462add5cc68ab2bbbaa66912)\n\n011. Netlify/Decap CMS [#4961](https://github.com/decaporg/decap-cms/issues/4961), [#4979](https://github.com/decaporg/decap-cms/issues/4979), [#5545](https://github.com/decaporg/decap-cms/issues/5545), [#5778](https://github.com/decaporg/decap-cms/issues/5778), [#6279](https://github.com/decaporg/decap-cms/issues/6279), [#6464](https://github.com/decaporg/decap-cms/issues/6464), [#6810](https://github.com/decaporg/decap-cms/issues/6810), [#6922](https://github.com/decaporg/decap-cms/issues/6922), [#7118](https://github.com/decaporg/decap-cms/issues/7118), [#7293](https://github.com/decaporg/decap-cms/issues/7293) — A comment on one of the issues says the crash was due to Google Translate. Sveltia CMS has turned off Google Translate on the admin page. [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-129-badaa007462add5cc68ab2bbbaa66912)\n\n012. Netlify/Decap CMS [#5815](https://github.com/decaporg/decap-cms/issues/5815), [#6522](https://github.com/decaporg/decap-cms/issues/6522), [#6532](https://github.com/decaporg/decap-cms/issues/6532), [#6588](https://github.com/decaporg/decap-cms/issues/6588), [#6617](https://github.com/decaporg/decap-cms/issues/6617), [#6640](https://github.com/decaporg/decap-cms/issues/6640), [#6663](https://github.com/decaporg/decap-cms/issues/6663), [#6695](https://github.com/decaporg/decap-cms/issues/6695), [#6697](https://github.com/decaporg/decap-cms/issues/6697), [#6764](https://github.com/decaporg/decap-cms/issues/6764), [#6765](https://github.com/decaporg/decap-cms/issues/6765), [#6835](https://github.com/decaporg/decap-cms/issues/6835), [#6983](https://github.com/decaporg/decap-cms/issues/6983), [#7205](https://github.com/decaporg/decap-cms/issues/7205), [#7450](https://github.com/decaporg/decap-cms/issues/7450), [#7453](https://github.com/decaporg/decap-cms/issues/7453) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-112-badaa007462add5cc68ab2bbbaa66912)\n\n013. Netlify/Decap CMS [#7360](https://github.com/decaporg/decap-cms/issues/7360), [#7462](https://github.com/decaporg/decap-cms/issues/7462) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-203-badaa007462add5cc68ab2bbbaa66912)\n\n014. Netlify/Decap CMS [#7240](https://github.com/decaporg/decap-cms/issues/7240), [#7428](https://github.com/decaporg/decap-cms/issues/7428) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-204-badaa007462add5cc68ab2bbbaa66912)\n\n015. Netlify/Decap CMS [#5867](https://github.com/decaporg/decap-cms/issues/5867), [#6159](https://github.com/decaporg/decap-cms/issues/6159), [#7016](https://github.com/decaporg/decap-cms/issues/7016), [#7306](https://github.com/decaporg/decap-cms/issues/7306), [#7554](https://github.com/decaporg/decap-cms/issues/7554) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-260-badaa007462add5cc68ab2bbbaa66912)\n\n016. Netlify/Decap CMS [#7550](https://github.com/decaporg/decap-cms/issues/7550), [#7562](https://github.com/decaporg/decap-cms/issues/7562) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-265-badaa007462add5cc68ab2bbbaa66912)\n\n017. Netlify/Decap CMS [#3057](https://github.com/decaporg/decap-cms/issues/3057), [#3260](https://github.com/decaporg/decap-cms/issues/3260) — We use Svelte though. [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-196-badaa007462add5cc68ab2bbbaa66912)\n\n018. Netlify/Decap CMS [#3257](https://github.com/decaporg/decap-cms/issues/3257) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-205-badaa007462add5cc68ab2bbbaa66912)\n\n019. Netlify/Decap CMS [#3258](https://github.com/decaporg/decap-cms/issues/3258) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-206-badaa007462add5cc68ab2bbbaa66912)\n\n020. Netlify/Decap CMS [#3259](https://github.com/decaporg/decap-cms/issues/3259) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-207-badaa007462add5cc68ab2bbbaa66912)\n\n021. Netlify/Decap CMS [#3261](https://github.com/decaporg/decap-cms/issues/3261) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-208-badaa007462add5cc68ab2bbbaa66912)\n\n022. Netlify/Decap CMS [#3262](https://github.com/decaporg/decap-cms/issues/3262) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-209-badaa007462add5cc68ab2bbbaa66912)\n\n023. Netlify/Decap CMS [#3296](https://github.com/decaporg/decap-cms/issues/3296) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-210-badaa007462add5cc68ab2bbbaa66912)\n\n024. Netlify/Decap CMS [#1045](https://github.com/decaporg/decap-cms/issues/1045) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-31-badaa007462add5cc68ab2bbbaa66912)\n\n025. Netlify/Decap CMS [#3353](https://github.com/decaporg/decap-cms/issues/3353) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-66-badaa007462add5cc68ab2bbbaa66912)\n\n026. Netlify/Decap CMS [#328](https://github.com/decaporg/decap-cms/issues/328), [#1290](https://github.com/decaporg/decap-cms/issues/1290) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-57-badaa007462add5cc68ab2bbbaa66912)\n\n027. Netlify/Decap CMS [#3853](https://github.com/decaporg/decap-cms/issues/3853) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-64-badaa007462add5cc68ab2bbbaa66912)\n\n028. Netlify/Decap CMS [#302](https://github.com/decaporg/decap-cms/issues/302), [#5549](https://github.com/decaporg/decap-cms/issues/5549) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-32-badaa007462add5cc68ab2bbbaa66912)\n\n029. Netlify/Decap CMS [#6034](https://github.com/decaporg/decap-cms/issues/6034) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-65-badaa007462add5cc68ab2bbbaa66912) [↩2](https://github.com/sveltia/sveltia-cms#user-content-fnref-65-2-badaa007462add5cc68ab2bbbaa66912)\n\n030. Netlify/Decap CMS [#4635](https://github.com/decaporg/decap-cms/issues/4635), [#5920](https://github.com/decaporg/decap-cms/issues/5920), [#6410](https://github.com/decaporg/decap-cms/issues/6410), [#6827](https://github.com/decaporg/decap-cms/issues/6827), [#6924](https://github.com/decaporg/decap-cms/issues/6924) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-14-badaa007462add5cc68ab2bbbaa66912) [↩2](https://github.com/sveltia/sveltia-cms#user-content-fnref-14-2-badaa007462add5cc68ab2bbbaa66912)\n\n031. Netlify/Decap CMS [#946](https://github.com/decaporg/decap-cms/issues/946), [#1970](https://github.com/decaporg/decap-cms/issues/1970) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-39-badaa007462add5cc68ab2bbbaa66912)\n\n032. Netlify/Decap CMS [#1984](https://github.com/decaporg/decap-cms/issues/1984) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-38-badaa007462add5cc68ab2bbbaa66912) [↩2](https://github.com/sveltia/sveltia-cms#user-content-fnref-38-2-badaa007462add5cc68ab2bbbaa66912)\n\n033. Netlify/Decap CMS [#2009](https://github.com/decaporg/decap-cms/issues/2009), [#2293](https://github.com/decaporg/decap-cms/issues/2293), [#3415](https://github.com/decaporg/decap-cms/issues/3415), [#3952](https://github.com/decaporg/decap-cms/issues/3952), [#6563](https://github.com/decaporg/decap-cms/issues/6563) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-77-badaa007462add5cc68ab2bbbaa66912)\n\n034. Netlify/Decap CMS [#1891](https://github.com/decaporg/decap-cms/issues/1891) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-179-badaa007462add5cc68ab2bbbaa66912) [↩2](https://github.com/sveltia/sveltia-cms#user-content-fnref-179-2-badaa007462add5cc68ab2bbbaa66912)\n\n035. Netlify/Decap CMS [#3285](https://github.com/decaporg/decap-cms/issues/3285), [#7030](https://github.com/decaporg/decap-cms/issues/7030), [#7067](https://github.com/decaporg/decap-cms/issues/7067), [#7217](https://github.com/decaporg/decap-cms/issues/7217) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-26-badaa007462add5cc68ab2bbbaa66912)\n\n036. Netlify/Decap CMS [#6107](https://github.com/decaporg/decap-cms/issues/6107) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-158-badaa007462add5cc68ab2bbbaa66912) [↩2](https://github.com/sveltia/sveltia-cms#user-content-fnref-158-2-badaa007462add5cc68ab2bbbaa66912)\n\n037. Netlify/Decap CMS [#6731](https://github.com/decaporg/decap-cms/issues/6731) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-51-badaa007462add5cc68ab2bbbaa66912)\n\n038. Netlify/Decap CMS [#5472](https://github.com/decaporg/decap-cms/issues/5472) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-75-badaa007462add5cc68ab2bbbaa66912)\n\n039. Netlify/Decap CMS [#5752](https://github.com/decaporg/decap-cms/issues/5752) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-49-badaa007462add5cc68ab2bbbaa66912)\n\n040. Netlify/Decap CMS [#2822](https://github.com/decaporg/decap-cms/issues/2822) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-106-badaa007462add5cc68ab2bbbaa66912)\n\n041. Netlify/Decap CMS [#5055](https://github.com/decaporg/decap-cms/issues/5055), [#5470](https://github.com/decaporg/decap-cms/issues/5470), [#6956](https://github.com/decaporg/decap-cms/discussions/6956), [#6989](https://github.com/decaporg/decap-cms/issues/6989) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-85-badaa007462add5cc68ab2bbbaa66912)\n\n042. Netlify/Decap CMS [#4563](https://github.com/decaporg/decap-cms/issues/4563) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-20-badaa007462add5cc68ab2bbbaa66912) [↩2](https://github.com/sveltia/sveltia-cms#user-content-fnref-20-2-badaa007462add5cc68ab2bbbaa66912)\n\n043. Netlify/Decap CMS [#1333](https://github.com/decaporg/decap-cms/issues/1333), [#4216](https://github.com/decaporg/decap-cms/issues/4216) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-17-badaa007462add5cc68ab2bbbaa66912)\n\n044. Netlify/Decap CMS [#7077](https://github.com/decaporg/decap-cms/issues/7077) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-67-badaa007462add5cc68ab2bbbaa66912)\n\n045. Netlify/Decap CMS [#6762](https://github.com/decaporg/decap-cms/pull/6762) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-228-badaa007462add5cc68ab2bbbaa66912)\n\n046. Netlify/Decap CMS [#5701](https://github.com/decaporg/decap-cms/issues/5701) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-105-badaa007462add5cc68ab2bbbaa66912)\n\n047. Netlify/Decap CMS [#3431](https://github.com/decaporg/decap-cms/issues/3431) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-116-badaa007462add5cc68ab2bbbaa66912)\n\n048. Netlify/Decap CMS [#542](https://github.com/decaporg/decap-cms/issues/542), [#4532](https://github.com/decaporg/decap-cms/issues/4532), [#6513](https://github.com/decaporg/decap-cms/issues/6513), [#7295](https://github.com/decaporg/decap-cms/issues/7295) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-33-badaa007462add5cc68ab2bbbaa66912)\n\n049. Netlify/Decap CMS [#7557](https://github.com/decaporg/decap-cms/issues/7557) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-264-badaa007462add5cc68ab2bbbaa66912)\n\n050. Netlify/Decap CMS [#6879](https://github.com/decaporg/decap-cms/discussions/6879) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-108-badaa007462add5cc68ab2bbbaa66912)\n\n051. Netlify/Decap CMS [#2138](https://github.com/decaporg/decap-cms/issues/2138), [#2343](https://github.com/decaporg/decap-cms/issues/2343), [#4367](https://github.com/decaporg/decap-cms/issues/4367), [#5932](https://github.com/decaporg/decap-cms/discussions/5932) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-34-badaa007462add5cc68ab2bbbaa66912)\n\n052. Netlify/Decap CMS [#3284](https://github.com/decaporg/decap-cms/issues/3284) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-144-badaa007462add5cc68ab2bbbaa66912)\n\n053. Netlify/Decap CMS [#2673](https://github.com/decaporg/decap-cms/issues/2673), [#5315](https://github.com/decaporg/decap-cms/issues/5315), [#6499](https://github.com/decaporg/decap-cms/issues/6499), [#6544](https://github.com/decaporg/decap-cms/issues/6544), [#6551](https://github.com/decaporg/decap-cms/issues/6551), [#6679](https://github.com/decaporg/decap-cms/issues/6679), [#6773](https://github.com/decaporg/decap-cms/issues/6773), [#6883](https://github.com/decaporg/decap-cms/issues/6883), [#7363](https://github.com/decaporg/decap-cms/discussions/7363), [#7365](https://github.com/decaporg/decap-cms/issues/7365) — This problem occurs every time a new major version of React is released. [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-177-badaa007462add5cc68ab2bbbaa66912)\n\n054. Netlify/Decap CMS [#5376](https://github.com/decaporg/decap-cms/issues/5376), [#7203](https://github.com/decaporg/decap-cms/issues/7203), [#7380](https://github.com/decaporg/decap-cms/issues/7380) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-175-badaa007462add5cc68ab2bbbaa66912)\n\n055. Netlify/Decap CMS [#7375](https://github.com/decaporg/decap-cms/issues/7375), [#7518](https://github.com/decaporg/decap-cms/issues/7518) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-237-badaa007462add5cc68ab2bbbaa66912)\n\n056. Netlify/Decap CMS [#332](https://github.com/decaporg/decap-cms/issues/332), [#683](https://github.com/decaporg/decap-cms/issues/683), [#999](https://github.com/decaporg/decap-cms/issues/999), [#1456](https://github.com/decaporg/decap-cms/issues/1456), [#4175](https://github.com/decaporg/decap-cms/issues/4175), [#4818](https://github.com/decaporg/decap-cms/issues/4818), [#5688](https://github.com/decaporg/decap-cms/issues/5688), [#6828](https://github.com/decaporg/decap-cms/issues/6828), [#6829](https://github.com/decaporg/decap-cms/issues/6829), [#6862](https://github.com/decaporg/decap-cms/issues/6862), [#7023](https://github.com/decaporg/decap-cms/issues/7023) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-107-badaa007462add5cc68ab2bbbaa66912)\n\n057. Netlify/Decap CMS [#6616](https://github.com/decaporg/decap-cms/issues/6616) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-174-badaa007462add5cc68ab2bbbaa66912)\n\n058. Netlify/Decap CMS [#6965](https://github.com/decaporg/decap-cms/issues/6965), [#7445](https://github.com/decaporg/decap-cms/issues/7445) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-251-badaa007462add5cc68ab2bbbaa66912)\n\n059. Netlify/Decap CMS [#283](https://github.com/decaporg/decap-cms/issues/283), [#386](https://github.com/decaporg/decap-cms/issues/386) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-60-badaa007462add5cc68ab2bbbaa66912)\n\n060. Netlify/Decap CMS [#3457](https://github.com/decaporg/decap-cms/issues/3457), [#3624](https://github.com/decaporg/decap-cms/issues/3624), [#6713](https://github.com/decaporg/decap-cms/discussions/6713) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-197-badaa007462add5cc68ab2bbbaa66912)\n\n061. Netlify/Decap CMS [#6635](https://github.com/decaporg/decap-cms/issues/6635), [#7006](https://github.com/decaporg/decap-cms/issues/7006), [#7311](https://github.com/decaporg/decap-cms/issues/7311) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-253-badaa007462add5cc68ab2bbbaa66912)\n\n062. Netlify/Decap CMS [#4987](https://github.com/decaporg/decap-cms/issues/4987) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-190-badaa007462add5cc68ab2bbbaa66912)\n\n063. Netlify/Decap CMS [#5970](https://github.com/decaporg/decap-cms/issues/5970) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-191-badaa007462add5cc68ab2bbbaa66912)\n\n064. Netlify/Decap CMS [#6527](https://github.com/decaporg/decap-cms/issues/6527) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-192-badaa007462add5cc68ab2bbbaa66912)\n\n065. Netlify/Decap CMS [#6800](https://github.com/decaporg/decap-cms/issues/6800) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-193-badaa007462add5cc68ab2bbbaa66912)\n\n066. Netlify/Decap CMS [#6794](https://github.com/decaporg/decap-cms/pull/6794) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-227-badaa007462add5cc68ab2bbbaa66912)\n\n067. Netlify/Decap CMS [#4417](https://github.com/decaporg/decap-cms/issues/4417) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-95-badaa007462add5cc68ab2bbbaa66912)\n\n068. Netlify/Decap CMS [#4564](https://github.com/decaporg/decap-cms/issues/4564), [#5617](https://github.com/decaporg/decap-cms/issues/5617), [#5815](https://github.com/decaporg/decap-cms/issues/5815) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-27-badaa007462add5cc68ab2bbbaa66912)\n\n069. Netlify/Decap CMS [#7457](https://github.com/decaporg/decap-cms/issues/7457) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-232-badaa007462add5cc68ab2bbbaa66912)\n\n070. Netlify/Decap CMS [#6831](https://github.com/decaporg/decap-cms/issues/6831) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-24-badaa007462add5cc68ab2bbbaa66912)\n\n071. Netlify/Decap CMS [#3704](https://github.com/decaporg/decap-cms/issues/3704) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-231-badaa007462add5cc68ab2bbbaa66912)\n\n072. Netlify/Decap CMS [#7172](https://github.com/decaporg/decap-cms/issues/7172) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-115-badaa007462add5cc68ab2bbbaa66912)\n\n073. Netlify/Decap CMS [#7281](https://github.com/decaporg/decap-cms/issues/7281) — The issue was closed, but the attached PR is not yet merged. [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-222-badaa007462add5cc68ab2bbbaa66912)\n\n074. Netlify/Decap CMS [#663](https://github.com/decaporg/decap-cms/issues/663), [#6729](https://github.com/decaporg/decap-cms/discussions/6729), [#7466](https://github.com/decaporg/decap-cms/discussions/7466), [#7545](https://github.com/decaporg/decap-cms/issues/7545) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-258-badaa007462add5cc68ab2bbbaa66912)\n\n075. Netlify/Decap CMS [#7352](https://github.com/decaporg/decap-cms/issues/7352) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-224-badaa007462add5cc68ab2bbbaa66912)\n\n076. Netlify/Decap CMS [#7157](https://github.com/decaporg/decap-cms/issues/7157) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-194-badaa007462add5cc68ab2bbbaa66912)\n\n077. Netlify/Decap CMS [#5280](https://github.com/decaporg/decap-cms/issues/5280) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-87-badaa007462add5cc68ab2bbbaa66912)\n\n078. Netlify/Decap CMS [#4386](https://github.com/decaporg/decap-cms/issues/4386), [#4888](https://github.com/decaporg/decap-cms/issues/4888), [#7332](https://github.com/decaporg/decap-cms/issues/7332), [#7514](https://github.com/decaporg/decap-cms/issues/7514) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-7-badaa007462add5cc68ab2bbbaa66912)\n\n079. Netlify/Decap CMS [#6978](https://github.com/decaporg/decap-cms/issues/6978) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-68-badaa007462add5cc68ab2bbbaa66912)\n\n080. Netlify/Decap CMS [#4416](https://github.com/decaporg/decap-cms/issues/4416), [#7400](https://github.com/decaporg/decap-cms/pull/7400) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-182-badaa007462add5cc68ab2bbbaa66912)\n\n081. Netlify/Decap CMS [#4781](https://github.com/decaporg/decap-cms/issues/4781) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-21-badaa007462add5cc68ab2bbbaa66912)\n\n082. Netlify/Decap CMS [#4877](https://github.com/decaporg/decap-cms/issues/4877) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-63-badaa007462add5cc68ab2bbbaa66912)\n\n083. Netlify/Decap CMS [#5493](https://github.com/decaporg/decap-cms/issues/5493), [#6600](https://github.com/decaporg/decap-cms/issues/6600) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-80-badaa007462add5cc68ab2bbbaa66912) [↩2](https://github.com/sveltia/sveltia-cms#user-content-fnref-80-2-badaa007462add5cc68ab2bbbaa66912)\n\n084. Netlify/Decap CMS [#4645](https://github.com/decaporg/decap-cms/issues/4645) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-81-badaa007462add5cc68ab2bbbaa66912)\n\n085. Netlify/Decap CMS [#1685](https://github.com/decaporg/decap-cms/issues/1685) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-99-badaa007462add5cc68ab2bbbaa66912)\n\n086. Netlify/Decap CMS [#5969](https://github.com/decaporg/decap-cms/issues/5969) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-101-badaa007462add5cc68ab2bbbaa66912) [↩2](https://github.com/sveltia/sveltia-cms#user-content-fnref-101-2-badaa007462add5cc68ab2bbbaa66912)\n\n087. Netlify/Decap CMS [#2524](https://github.com/decaporg/decap-cms/issues/2524) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-146-badaa007462add5cc68ab2bbbaa66912)\n\n088. Netlify/Decap CMS [#6932](https://github.com/decaporg/decap-cms/issues/6932) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-15-badaa007462add5cc68ab2bbbaa66912)\n\n089. Netlify/Decap CMS [#7086](https://github.com/decaporg/decap-cms/issues/7086) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-35-badaa007462add5cc68ab2bbbaa66912)\n\n090. Netlify/Decap CMS [#7142](https://github.com/decaporg/decap-cms/issues/7142), [#7276](https://github.com/decaporg/decap-cms/issues/7276) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-84-badaa007462add5cc68ab2bbbaa66912)\n\n091. Netlify/Decap CMS [#1347](https://github.com/decaporg/decap-cms/issues/1347), [#1559](https://github.com/decaporg/decap-cms/issues/1559), [#4629](https://github.com/decaporg/decap-cms/issues/4629), [#4837](https://github.com/decaporg/decap-cms/issues/4837), [#6287](https://github.com/decaporg/decap-cms/issues/6287), [#6826](https://github.com/decaporg/decap-cms/issues/6826) — Decap CMS 3.0 updated the Slate editor in an attempt to fix the problems, but the IME issues remain unresolved when using a mobile/tablet browser. [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-54-badaa007462add5cc68ab2bbbaa66912) [↩2](https://github.com/sveltia/sveltia-cms#user-content-fnref-54-2-badaa007462add5cc68ab2bbbaa66912)\n\n092. Netlify/Decap CMS [#4480](https://github.com/decaporg/decap-cms/issues/4480), [#5122](https://github.com/decaporg/decap-cms/issues/5122), [#6353](https://github.com/decaporg/decap-cms/issues/6353) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-55-badaa007462add5cc68ab2bbbaa66912)\n\n093. Netlify/Decap CMS [#5112](https://github.com/decaporg/decap-cms/issues/5112), [#5653](https://github.com/decaporg/decap-cms/issues/5653) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-13-badaa007462add5cc68ab2bbbaa66912)\n\n094. Netlify/Decap CMS [#6307](https://github.com/decaporg/decap-cms/issues/6307) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-103-badaa007462add5cc68ab2bbbaa66912)\n\n095. Netlify/Decap CMS [#7371](https://github.com/decaporg/decap-cms/issues/7371) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-170-badaa007462add5cc68ab2bbbaa66912)\n\n096. Netlify/Decap CMS [#7507](https://github.com/decaporg/decap-cms/issues/7507) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-236-badaa007462add5cc68ab2bbbaa66912)\n\n097. Netlify/Decap CMS [#1040](https://github.com/decaporg/decap-cms/issues/1040) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-3-badaa007462add5cc68ab2bbbaa66912)\n\n098. Netlify/Decap CMS [#6571](https://github.com/decaporg/decap-cms/issues/6571), [#7539](https://github.com/decaporg/decap-cms/discussions/7539) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-130-badaa007462add5cc68ab2bbbaa66912)\n\n099. Netlify/Decap CMS [#5317](https://github.com/decaporg/decap-cms/issues/5317) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-173-badaa007462add5cc68ab2bbbaa66912)\n\n100. Netlify/Decap CMS [#6203](https://github.com/decaporg/decap-cms/issues/6203), [#7417](https://github.com/decaporg/decap-cms/issues/7417), [#7451](https://github.com/decaporg/decap-cms/pull/7451) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-185-badaa007462add5cc68ab2bbbaa66912)\n\n101. Netlify/Decap CMS [#1000](https://github.com/decaporg/decap-cms/issues/1000) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-93-badaa007462add5cc68ab2bbbaa66912)\n\n102. Netlify/Decap CMS [#7328](https://github.com/decaporg/decap-cms/issues/7328) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-151-badaa007462add5cc68ab2bbbaa66912)\n\n103. Netlify/Decap CMS [#7347](https://github.com/decaporg/decap-cms/issues/7347) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-153-badaa007462add5cc68ab2bbbaa66912)\n\n104. Netlify/Decap CMS [#4783](https://github.com/decaporg/decap-cms/issues/4783) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-29-badaa007462add5cc68ab2bbbaa66912) [↩2](https://github.com/sveltia/sveltia-cms#user-content-fnref-29-2-badaa007462add5cc68ab2bbbaa66912)\n\n105. Netlify/Decap CMS [#6427](https://github.com/decaporg/decap-cms/issues/6427) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-176-badaa007462add5cc68ab2bbbaa66912)\n\n106. Netlify/Decap CMS [#535](https://github.com/decaporg/decap-cms/issues/535), [#1284](https://github.com/decaporg/decap-cms/issues/1284), [#3846](https://github.com/decaporg/decap-cms/issues/3846) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-233-badaa007462add5cc68ab2bbbaa66912)\n\n107. Netlify/Decap CMS [#7355](https://github.com/decaporg/decap-cms/discussions/7355) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-255-badaa007462add5cc68ab2bbbaa66912)\n\n108. Netlify/Decap CMS [#978](https://github.com/decaporg/decap-cms/issues/978) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-218-badaa007462add5cc68ab2bbbaa66912)\n\n109. Netlify/Decap CMS [#7192](https://github.com/decaporg/decap-cms/issues/7192) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-62-badaa007462add5cc68ab2bbbaa66912)\n\n110. Netlify/Decap CMS [#5726](https://github.com/decaporg/decap-cms/issues/5726) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-79-badaa007462add5cc68ab2bbbaa66912)\n\n111. Netlify/Decap CMS [#445](https://github.com/decaporg/decap-cms/issues/445) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-133-badaa007462add5cc68ab2bbbaa66912)\n\n112. Netlify/Decap CMS [#377](https://github.com/decaporg/decap-cms/issues/377) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-184-badaa007462add5cc68ab2bbbaa66912)\n\n113. Netlify/Decap CMS [#6970](https://github.com/decaporg/decap-cms/discussions/6970), [#7147](https://github.com/decaporg/decap-cms/issues/7147) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-52-badaa007462add5cc68ab2bbbaa66912)\n\n114. Netlify/Decap CMS [#526](https://github.com/decaporg/decap-cms/issues/526), [#6987](https://github.com/decaporg/decap-cms/issues/6987) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-25-badaa007462add5cc68ab2bbbaa66912)\n\n115. Netlify/Decap CMS [#4092](https://github.com/decaporg/decap-cms/issues/4092) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-137-badaa007462add5cc68ab2bbbaa66912)\n\n116. Netlify/Decap CMS [#3715](https://github.com/decaporg/decap-cms/issues/3715) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-172-badaa007462add5cc68ab2bbbaa66912)\n\n117. Netlify/Decap CMS [#4637](https://github.com/decaporg/decap-cms/issues/4637), [#5198](https://github.com/decaporg/decap-cms/issues/5198) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-110-badaa007462add5cc68ab2bbbaa66912)\n\n118. Netlify/Decap CMS [#7381](https://github.com/decaporg/decap-cms/issues/7381) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-201-badaa007462add5cc68ab2bbbaa66912)\n\n119. Netlify/Decap CMS [#2727](https://github.com/decaporg/decap-cms/issues/2727), [#4884](https://github.com/decaporg/decap-cms/issues/4884), [#6908](https://github.com/decaporg/decap-cms/discussions/6908) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-120-badaa007462add5cc68ab2bbbaa66912)\n\n120. Netlify/Decap CMS [#2491](https://github.com/decaporg/decap-cms/issues/2491) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-152-badaa007462add5cc68ab2bbbaa66912)\n\n121. Netlify/Decap CMS [#1274](https://github.com/decaporg/decap-cms/issues/1274) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-161-badaa007462add5cc68ab2bbbaa66912)\n\n122. Netlify/Decap CMS [#7486](https://github.com/decaporg/decap-cms/discussions/7486) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-230-badaa007462add5cc68ab2bbbaa66912)\n\n123. Netlify/Decap CMS [#7262](https://github.com/decaporg/decap-cms/issues/7262) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-121-badaa007462add5cc68ab2bbbaa66912)\n\n124. Netlify/Decap CMS [#2289](https://github.com/decaporg/decap-cms/issues/2289), [#4518](https://github.com/decaporg/decap-cms/issues/4518) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-127-badaa007462add5cc68ab2bbbaa66912)\n\n125. Netlify/Decap CMS [#4350](https://github.com/decaporg/decap-cms/issues/4350) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-69-badaa007462add5cc68ab2bbbaa66912)\n\n126. Netlify/Decap CMS [#3796](https://github.com/decaporg/decap-cms/issues/3796) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-159-badaa007462add5cc68ab2bbbaa66912)\n\n127. Netlify/Decap CMS [#1341](https://github.com/decaporg/decap-cms/issues/1341) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-143-badaa007462add5cc68ab2bbbaa66912)\n\n128. Netlify/Decap CMS [#4255](https://github.com/decaporg/decap-cms/issues/4255) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-89-badaa007462add5cc68ab2bbbaa66912)\n\n129. Netlify/Decap CMS [#7267](https://github.com/decaporg/decap-cms/issues/7267) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-118-badaa007462add5cc68ab2bbbaa66912)\n\n130. Netlify/Decap CMS [#7483](https://github.com/decaporg/decap-cms/issues/7483) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-223-badaa007462add5cc68ab2bbbaa66912)\n\n131. Netlify/Decap CMS [#5630](https://github.com/decaporg/decap-cms/issues/5630) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-40-badaa007462add5cc68ab2bbbaa66912)\n\n132. Netlify/Decap CMS [#6500](https://github.com/decaporg/decap-cms/issues/6500) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-82-badaa007462add5cc68ab2bbbaa66912)\n\n133. Netlify/Decap CMS [#1654](https://github.com/decaporg/decap-cms/issues/1654) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-59-badaa007462add5cc68ab2bbbaa66912)\n\n134. Netlify/Decap CMS [#4147](https://github.com/decaporg/decap-cms/issues/4147) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-100-badaa007462add5cc68ab2bbbaa66912)\n\n135. Netlify/Decap CMS [#6202](https://github.com/decaporg/decap-cms/issues/6202) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-139-badaa007462add5cc68ab2bbbaa66912)\n\n136. Netlify/Decap CMS [#7399](https://github.com/decaporg/decap-cms/issues/7399) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-180-badaa007462add5cc68ab2bbbaa66912)\n\n137. Netlify/Decap CMS [#1948](https://github.com/decaporg/decap-cms/issues/1948) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-168-badaa007462add5cc68ab2bbbaa66912)\n\n138. Netlify/Decap CMS [#7532](https://github.com/decaporg/decap-cms/issues/7532) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-254-badaa007462add5cc68ab2bbbaa66912)\n\n139. Netlify/Decap CMS [#7011](https://github.com/decaporg/decap-cms/issues/7011) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-41-badaa007462add5cc68ab2bbbaa66912)\n\n140. Netlify/Decap CMS [#7401](https://github.com/decaporg/decap-cms/issues/7401) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-225-badaa007462add5cc68ab2bbbaa66912)\n\n141. Netlify/Decap CMS [#7415](https://github.com/decaporg/decap-cms/issues/7415), [#7421](https://github.com/decaporg/decap-cms/issues/7421) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-188-badaa007462add5cc68ab2bbbaa66912)\n\n142. Netlify/Decap CMS [#7085](https://github.com/decaporg/decap-cms/issues/7085) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-136-badaa007462add5cc68ab2bbbaa66912)\n\n143. Netlify/Decap CMS [#2368](https://github.com/decaporg/decap-cms/issues/2368), [#3454](https://github.com/decaporg/decap-cms/issues/3454), [#3585](https://github.com/decaporg/decap-cms/issues/3585), [#3651](https://github.com/decaporg/decap-cms/issues/3651), [#3885](https://github.com/decaporg/decap-cms/issues/3885), [#3962](https://github.com/decaporg/decap-cms/issues/3962), [#4037](https://github.com/decaporg/decap-cms/issues/4037), [#4143](https://github.com/decaporg/decap-cms/issues/4143), [#6585](https://github.com/decaporg/decap-cms/issues/6585), [#6664](https://github.com/decaporg/decap-cms/issues/6664), [#6665](https://github.com/decaporg/decap-cms/issues/6665), [#6739](https://github.com/decaporg/decap-cms/issues/6739), [#7243](https://github.com/decaporg/decap-cms/issues/7243), [#7379](https://github.com/decaporg/decap-cms/issues/7379), [#7469](https://github.com/decaporg/decap-cms/issues/7469) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-186-badaa007462add5cc68ab2bbbaa66912)\n\n144. Netlify/Decap CMS [#1466](https://github.com/decaporg/decap-cms/issues/1466) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-92-badaa007462add5cc68ab2bbbaa66912)\n\n145. Netlify/Decap CMS [#7279](https://github.com/decaporg/decap-cms/discussions/7279) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-126-badaa007462add5cc68ab2bbbaa66912)\n\n146. Netlify/Decap CMS [#2307](https://github.com/decaporg/decap-cms/issues/2307) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-42-badaa007462add5cc68ab2bbbaa66912) [↩2](https://github.com/sveltia/sveltia-cms#user-content-fnref-42-2-badaa007462add5cc68ab2bbbaa66912)\n\n147. Netlify/Decap CMS [#1609](https://github.com/decaporg/decap-cms/issues/1609), [#3557](https://github.com/decaporg/decap-cms/issues/3557), [#5253](https://github.com/decaporg/decap-cms/issues/5253), [#6759](https://github.com/decaporg/decap-cms/issues/6759), [#6901](https://github.com/decaporg/decap-cms/issues/6901) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-86-badaa007462add5cc68ab2bbbaa66912)\n\n148. Netlify/Decap CMS [#1449](https://github.com/decaporg/decap-cms/issues/1449), [#1988](https://github.com/decaporg/decap-cms/issues/1988) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-154-badaa007462add5cc68ab2bbbaa66912)\n\n149. Netlify/Decap CMS [#1424](https://github.com/decaporg/decap-cms/issues/1424) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-45-badaa007462add5cc68ab2bbbaa66912) [↩2](https://github.com/sveltia/sveltia-cms#user-content-fnref-45-2-badaa007462add5cc68ab2bbbaa66912)\n\n150. Netlify/Decap CMS [#4726](https://github.com/decaporg/decap-cms/issues/4726) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-46-badaa007462add5cc68ab2bbbaa66912) [↩2](https://github.com/sveltia/sveltia-cms#user-content-fnref-46-2-badaa007462add5cc68ab2bbbaa66912)\n\n151. Netlify/Decap CMS [#2613](https://github.com/decaporg/decap-cms/issues/2613) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-44-badaa007462add5cc68ab2bbbaa66912) [↩2](https://github.com/sveltia/sveltia-cms#user-content-fnref-44-2-badaa007462add5cc68ab2bbbaa66912)\n\n152. Netlify/Decap CMS [#2007](https://github.com/decaporg/decap-cms/issues/2007), [#2848](https://github.com/decaporg/decap-cms/issues/2848) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-157-badaa007462add5cc68ab2bbbaa66912) [↩2](https://github.com/sveltia/sveltia-cms#user-content-fnref-157-2-badaa007462add5cc68ab2bbbaa66912)\n\n153. Netlify/Decap CMS [#995](https://github.com/decaporg/decap-cms/issues/995), [#2017](https://github.com/decaporg/decap-cms/issues/2017), [#7120](https://github.com/decaporg/decap-cms/issues/7120), [#7186](https://github.com/decaporg/decap-cms/issues/7186) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-156-badaa007462add5cc68ab2bbbaa66912)\n\n154. Netlify/Decap CMS [#1382](https://github.com/decaporg/decap-cms/issues/1382), [#6994](https://github.com/decaporg/decap-cms/issues/6994) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-11-badaa007462add5cc68ab2bbbaa66912)\n\n155. Netlify/Decap CMS [#1481](https://github.com/decaporg/decap-cms/issues/1481), [#7398](https://github.com/decaporg/decap-cms/issues/7398) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-37-badaa007462add5cc68ab2bbbaa66912)\n\n156. Netlify/Decap CMS [#5640](https://github.com/decaporg/decap-cms/issues/5640), [#6444](https://github.com/decaporg/decap-cms/issues/6444) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-119-badaa007462add5cc68ab2bbbaa66912)\n\n157. Netlify/Decap CMS [#3583](https://github.com/decaporg/decap-cms/issues/3583) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-147-badaa007462add5cc68ab2bbbaa66912)\n\n158. Netlify/Decap CMS [#5870](https://github.com/decaporg/decap-cms/issues/5870) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-155-badaa007462add5cc68ab2bbbaa66912)\n\n159. Netlify/Decap CMS [#3505](https://github.com/decaporg/decap-cms/issues/3505), [#4211](https://github.com/decaporg/decap-cms/issues/4211), [#5439](https://github.com/decaporg/decap-cms/issues/5439) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-9-badaa007462add5cc68ab2bbbaa66912)\n\n160. Netlify/Decap CMS [#7442](https://github.com/decaporg/decap-cms/issues/7442) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-198-badaa007462add5cc68ab2bbbaa66912)\n\n161. Netlify/Decap CMS [#6254](https://github.com/decaporg/decap-cms/issues/6254) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-181-badaa007462add5cc68ab2bbbaa66912)\n\n162. Netlify/Decap CMS [#4353](https://github.com/decaporg/decap-cms/issues/4353), [#7513](https://github.com/decaporg/decap-cms/issues/7513), [#7544](https://github.com/decaporg/decap-cms/issues/7544) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-257-badaa007462add5cc68ab2bbbaa66912)\n\n163. Netlify/Decap CMS [#7092](https://github.com/decaporg/decap-cms/issues/7092) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-128-badaa007462add5cc68ab2bbbaa66912)\n\n164. Netlify/Decap CMS [#725](https://github.com/decaporg/decap-cms/issues/725) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-90-badaa007462add5cc68ab2bbbaa66912)\n\n165. Netlify/Decap CMS [#7319](https://github.com/decaporg/decap-cms/issues/7319) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-150-badaa007462add5cc68ab2bbbaa66912)\n\n166. Netlify/Decap CMS [#6609](https://github.com/decaporg/decap-cms/issues/6609), [#6802](https://github.com/decaporg/decap-cms/issues/6802), [#6824](https://github.com/decaporg/decap-cms/issues/6824), [#6832](https://github.com/decaporg/decap-cms/issues/6832), [#6848](https://github.com/decaporg/decap-cms/issues/6848), [#6851](https://github.com/decaporg/decap-cms/issues/6851), [#7287](https://github.com/decaporg/decap-cms/issues/7287), [#7522](https://github.com/decaporg/decap-cms/issues/7522) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-250-badaa007462add5cc68ab2bbbaa66912)\n\n167. Netlify/Decap CMS [#1270](https://github.com/decaporg/decap-cms/issues/1270) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-102-badaa007462add5cc68ab2bbbaa66912)\n\n168. Netlify/Decap CMS [#1975](https://github.com/decaporg/decap-cms/issues/1975), [#3712](https://github.com/decaporg/decap-cms/issues/3712) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-12-badaa007462add5cc68ab2bbbaa66912) [↩2](https://github.com/sveltia/sveltia-cms#user-content-fnref-12-2-badaa007462add5cc68ab2bbbaa66912)\n\n169. Netlify/Decap CMS [#2294](https://github.com/decaporg/decap-cms/issues/2294), [#3046](https://github.com/decaporg/decap-cms/issues/3046), [#4363](https://github.com/decaporg/decap-cms/issues/4363), [#4520](https://github.com/decaporg/decap-cms/issues/4520), [#5806](https://github.com/decaporg/decap-cms/issues/5806) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-78-badaa007462add5cc68ab2bbbaa66912)\n\n170. Netlify/Decap CMS [#531](https://github.com/decaporg/decap-cms/issues/531), [#621](https://github.com/decaporg/decap-cms/issues/621), [#1282](https://github.com/decaporg/decap-cms/issues/1282), [#1877](https://github.com/decaporg/decap-cms/issues/1877), [#2514](https://github.com/decaporg/decap-cms/issues/2514), [#2737](https://github.com/decaporg/decap-cms/issues/2737) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-148-badaa007462add5cc68ab2bbbaa66912)\n\n171. Netlify/Decap CMS [#4733](https://github.com/decaporg/decap-cms/issues/4733) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-145-badaa007462add5cc68ab2bbbaa66912)\n\n172. Netlify/Decap CMS [#1244](https://github.com/decaporg/decap-cms/issues/1244) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-187-badaa007462add5cc68ab2bbbaa66912)\n\n173. Netlify/Decap CMS [#756](https://github.com/decaporg/decap-cms/issues/756) — The Expand All and Collapse All buttons cannot be found in the current version of Decap CMS. [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-164-badaa007462add5cc68ab2bbbaa66912)\n\n174. Netlify/Decap CMS [#4387](https://github.com/decaporg/decap-cms/issues/4387), [#5381](https://github.com/decaporg/decap-cms/issues/5381) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-43-badaa007462add5cc68ab2bbbaa66912)\n\n175. Netlify/Decap CMS [#2380](https://github.com/decaporg/decap-cms/issues/2380) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-162-badaa007462add5cc68ab2bbbaa66912)\n\n176. Netlify/Decap CMS [#3018](https://github.com/decaporg/decap-cms/issues/3018) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-219-badaa007462add5cc68ab2bbbaa66912)\n\n177. Netlify/Decap CMS [#4646](https://github.com/decaporg/decap-cms/issues/4646), [#7167](https://github.com/decaporg/decap-cms/issues/7167) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-50-badaa007462add5cc68ab2bbbaa66912)\n\n178. Netlify/Decap CMS [#2153](https://github.com/decaporg/decap-cms/issues/2153) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-220-badaa007462add5cc68ab2bbbaa66912)\n\n179. Netlify/Decap CMS [#7322](https://github.com/decaporg/decap-cms/issues/7322) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-163-badaa007462add5cc68ab2bbbaa66912)\n\n180. Netlify/Decap CMS [#1275](https://github.com/decaporg/decap-cms/issues/1275) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-183-badaa007462add5cc68ab2bbbaa66912)\n\n181. Netlify/Decap CMS [#6629](https://github.com/decaporg/decap-cms/issues/6629) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-252-badaa007462add5cc68ab2bbbaa66912)\n\n182. Netlify/Decap CMS [#6905](https://github.com/decaporg/decap-cms/discussions/6905) — We use Lexical created by Facebook (Meta). [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-235-badaa007462add5cc68ab2bbbaa66912)\n\n183. Netlify/Decap CMS [#6999](https://github.com/decaporg/decap-cms/issues/6999), [#7000](https://github.com/decaporg/decap-cms/issues/7000), [#7001](https://github.com/decaporg/decap-cms/issues/7001), [#7152](https://github.com/decaporg/decap-cms/issues/7152), [#7220](https://github.com/decaporg/decap-cms/issues/7220), [#7283](https://github.com/decaporg/decap-cms/issues/7283), [#7316](https://github.com/decaporg/decap-cms/issues/7316), [#7429](https://github.com/decaporg/decap-cms/issues/7429), [#7465](https://github.com/decaporg/decap-cms/issues/7465), [#7500](https://github.com/decaporg/decap-cms/issues/7500), [#7552](https://github.com/decaporg/decap-cms/issues/7552) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-71-badaa007462add5cc68ab2bbbaa66912)\n\n184. Netlify/Decap CMS [#7047](https://github.com/decaporg/decap-cms/issues/7047) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-72-badaa007462add5cc68ab2bbbaa66912)\n\n185. Netlify/Decap CMS [#6993](https://github.com/decaporg/decap-cms/issues/6993), [#7123](https://github.com/decaporg/decap-cms/issues/7123), [#7127](https://github.com/decaporg/decap-cms/issues/7127), [#7128](https://github.com/decaporg/decap-cms/issues/7128), [#7237](https://github.com/decaporg/decap-cms/issues/7237), [#7251](https://github.com/decaporg/decap-cms/issues/7251), [#7361](https://github.com/decaporg/decap-cms/issues/7361), [#7391](https://github.com/decaporg/decap-cms/issues/7391), [#7393](https://github.com/decaporg/decap-cms/issues/7393), [#7470](https://github.com/decaporg/decap-cms/issues/7470), [#7475](https://github.com/decaporg/decap-cms/issues/7475), [#7480](https://github.com/decaporg/decap-cms/issues/7480), [#7503](https://github.com/decaporg/decap-cms/issues/7503), [#7504](https://github.com/decaporg/decap-cms/issues/7504), [#7524](https://github.com/decaporg/decap-cms/issues/7524), [#7531](https://github.com/decaporg/decap-cms/issues/7531), [#7535](https://github.com/decaporg/decap-cms/issues/7535), [#7553](https://github.com/decaporg/decap-cms/issues/7553), [#7561](https://github.com/decaporg/decap-cms/issues/7561) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-73-badaa007462add5cc68ab2bbbaa66912)\n\n186. Netlify/Decap CMS [#7190](https://github.com/decaporg/decap-cms/issues/7190), [#7218](https://github.com/decaporg/decap-cms/issues/7218), [#7392](https://github.com/decaporg/decap-cms/issues/7392) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-111-badaa007462add5cc68ab2bbbaa66912)\n\n187. Netlify/Decap CMS [#991](https://github.com/decaporg/decap-cms/issues/991), [#4488](https://github.com/decaporg/decap-cms/issues/4488), [#7233](https://github.com/decaporg/decap-cms/issues/7233) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-124-badaa007462add5cc68ab2bbbaa66912)\n\n188. Netlify/Decap CMS [#7364](https://github.com/decaporg/decap-cms/issues/7364) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-169-badaa007462add5cc68ab2bbbaa66912)\n\n189. Netlify/Decap CMS [#6180](https://github.com/decaporg/decap-cms/issues/6180) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-229-badaa007462add5cc68ab2bbbaa66912)\n\n190. Netlify/Decap CMS [#512](https://github.com/decaporg/decap-cms/issues/512), [#5673](https://github.com/decaporg/decap-cms/issues/5673), [#6707](https://github.com/decaporg/decap-cms/issues/6707), [#7501](https://github.com/decaporg/decap-cms/issues/7501) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-53-badaa007462add5cc68ab2bbbaa66912)\n\n191. Netlify/Decap CMS [#6482](https://github.com/decaporg/decap-cms/issues/6482) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-70-badaa007462add5cc68ab2bbbaa66912)\n\n192. Netlify/Decap CMS [#5125](https://github.com/decaporg/decap-cms/issues/5125) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-58-badaa007462add5cc68ab2bbbaa66912)\n\n193. Netlify/Decap CMS [#7458](https://github.com/decaporg/decap-cms/issues/7458) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-202-badaa007462add5cc68ab2bbbaa66912)\n\n194. Netlify/Decap CMS [#3291](https://github.com/decaporg/decap-cms/issues/3291) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-160-badaa007462add5cc68ab2bbbaa66912)\n\n195. Netlify/Decap CMS [#4754](https://github.com/decaporg/decap-cms/issues/4754) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-171-badaa007462add5cc68ab2bbbaa66912)\n\n196. Netlify/Decap CMS [#7143](https://github.com/decaporg/decap-cms/issues/7143) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-165-badaa007462add5cc68ab2bbbaa66912)\n\n197. Netlify/Decap CMS [#7431](https://github.com/decaporg/decap-cms/issues/7431) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-189-badaa007462add5cc68ab2bbbaa66912)\n\n198. Netlify/Decap CMS [#565](https://github.com/decaporg/decap-cms/issues/565), [#6733](https://github.com/decaporg/decap-cms/discussions/6733) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-30-badaa007462add5cc68ab2bbbaa66912)\n\n199. Netlify/Decap CMS [#7031](https://github.com/decaporg/decap-cms/pull/7031), [#7540](https://github.com/decaporg/decap-cms/issues/7540) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-226-badaa007462add5cc68ab2bbbaa66912)\n\n200. Netlify/Decap CMS [#1267](https://github.com/decaporg/decap-cms/issues/1267) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-88-badaa007462add5cc68ab2bbbaa66912)\n\n201. Netlify/Decap CMS [#2103](https://github.com/decaporg/decap-cms/issues/2103), [#2790](https://github.com/decaporg/decap-cms/issues/2790), [#7302](https://github.com/decaporg/decap-cms/discussions/7302) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-16-badaa007462add5cc68ab2bbbaa66912)\n\n202. Netlify/Decap CMS [#4738](https://github.com/decaporg/decap-cms/issues/4738) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-76-badaa007462add5cc68ab2bbbaa66912)\n\n203. Netlify/Decap CMS [#7546](https://github.com/decaporg/decap-cms/issues/7546) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-259-badaa007462add5cc68ab2bbbaa66912)\n\n204. Netlify/Decap CMS [#4954](https://github.com/decaporg/decap-cms/issues/4954) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-91-badaa007462add5cc68ab2bbbaa66912)\n\n205. Netlify/Decap CMS [#5487](https://github.com/decaporg/decap-cms/issues/5487) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-94-badaa007462add5cc68ab2bbbaa66912)\n\n206. Netlify/Decap CMS [#4841](https://github.com/decaporg/decap-cms/issues/4841) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-138-badaa007462add5cc68ab2bbbaa66912)\n\n207. Netlify/Decap CMS [#3421](https://github.com/decaporg/decap-cms/issues/3421) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-221-badaa007462add5cc68ab2bbbaa66912)\n\n208. Netlify/Decap CMS [#6515](https://github.com/decaporg/decap-cms/issues/6515) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-56-badaa007462add5cc68ab2bbbaa66912)\n\n209. Netlify/Decap CMS [#2677](https://github.com/decaporg/decap-cms/issues/2677), [#6836](https://github.com/decaporg/decap-cms/pull/6836) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-28-badaa007462add5cc68ab2bbbaa66912)\n\n210. Netlify/Decap CMS [#2019](https://github.com/decaporg/decap-cms/issues/2019) — Rather than relying on a third-party library, we built our own asset browser that integrates more seamlessly with the rest of the CMS. [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-234-badaa007462add5cc68ab2bbbaa66912)\n\n211. Netlify/Decap CMS [#5910](https://github.com/decaporg/decap-cms/issues/5910) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-19-badaa007462add5cc68ab2bbbaa66912)\n\n212. Netlify/Decap CMS [#2579](https://github.com/decaporg/decap-cms/issues/2579) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-8-badaa007462add5cc68ab2bbbaa66912) [↩2](https://github.com/sveltia/sveltia-cms#user-content-fnref-8-2-badaa007462add5cc68ab2bbbaa66912)\n\n213. Netlify/Decap CMS [#1345](https://github.com/decaporg/decap-cms/issues/1345) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-216-badaa007462add5cc68ab2bbbaa66912)\n\n214. Netlify/Decap CMS [#5467](https://github.com/decaporg/decap-cms/issues/5467) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-217-badaa007462add5cc68ab2bbbaa66912)\n\n215. Netlify/Decap CMS [#5444](https://github.com/decaporg/decap-cms/issues/5444) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-140-badaa007462add5cc68ab2bbbaa66912)\n\n216. Netlify/Decap CMS [#3723](https://github.com/decaporg/decap-cms/issues/3723), [#6990](https://github.com/decaporg/decap-cms/issues/6990) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-141-badaa007462add5cc68ab2bbbaa66912)\n\n217. Netlify/Decap CMS [#6325](https://github.com/decaporg/decap-cms/issues/6325) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-36-badaa007462add5cc68ab2bbbaa66912)\n\n218. Netlify/Decap CMS [#6508](https://github.com/decaporg/decap-cms/issues/6508) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-83-badaa007462add5cc68ab2bbbaa66912)\n\n219. Netlify/Decap CMS [#1489](https://github.com/decaporg/decap-cms/issues/1489), [#5838](https://github.com/decaporg/decap-cms/issues/5838) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-61-badaa007462add5cc68ab2bbbaa66912)\n\n220. Netlify/Decap CMS [#450](https://github.com/decaporg/decap-cms/issues/450), [#2122](https://github.com/decaporg/decap-cms/issues/2122), [#6819](https://github.com/decaporg/decap-cms/issues/6819) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-104-badaa007462add5cc68ab2bbbaa66912)\n\n221. Netlify/Decap CMS [#961](https://github.com/decaporg/decap-cms/issues/961), [#5489](https://github.com/decaporg/decap-cms/issues/5489) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-123-badaa007462add5cc68ab2bbbaa66912)\n\n222. Netlify/Decap CMS [#962](https://github.com/decaporg/decap-cms/issues/962) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-96-badaa007462add5cc68ab2bbbaa66912)\n\n223. Netlify/Decap CMS [#3240](https://github.com/decaporg/decap-cms/issues/3240) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-6-badaa007462add5cc68ab2bbbaa66912)\n\n224. Netlify/Decap CMS [#4209](https://github.com/decaporg/decap-cms/issues/4209) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-74-badaa007462add5cc68ab2bbbaa66912)\n\n225. Netlify/Decap CMS [#5569](https://github.com/decaporg/decap-cms/issues/5569), [#6754](https://github.com/decaporg/decap-cms/discussions/6754) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-48-badaa007462add5cc68ab2bbbaa66912)\n\n226. Netlify/Decap CMS [#5901](https://github.com/decaporg/decap-cms/issues/5901) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-195-badaa007462add5cc68ab2bbbaa66912)\n\n227. Netlify/Decap CMS [#5419](https://github.com/decaporg/decap-cms/issues/5419), [#7107](https://github.com/decaporg/decap-cms/issues/7107) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-199-badaa007462add5cc68ab2bbbaa66912)\n\n228. Netlify/Decap CMS [#1322](https://github.com/decaporg/decap-cms/issues/1322), [#6442](https://github.com/decaporg/decap-cms/issues/6442) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-200-badaa007462add5cc68ab2bbbaa66912)\n\n229. Netlify/Decap CMS [#4288](https://github.com/decaporg/decap-cms/issues/4288) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-97-badaa007462add5cc68ab2bbbaa66912)\n\n230. Netlify/Decap CMS [#4208](https://github.com/decaporg/decap-cms/issues/4208) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-249-badaa007462add5cc68ab2bbbaa66912)\n\n231. Netlify/Decap CMS [#7124](https://github.com/decaporg/decap-cms/discussions/7124) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-142-badaa007462add5cc68ab2bbbaa66912)\n\n232. Netlify/Decap CMS [#3615](https://github.com/decaporg/decap-cms/issues/3615), [#4069](https://github.com/decaporg/decap-cms/issues/4069), [#5097](https://github.com/decaporg/decap-cms/issues/5097), [#6642](https://github.com/decaporg/decap-cms/issues/6642) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-22-badaa007462add5cc68ab2bbbaa66912)\n\n233. Netlify/Decap CMS [#2370](https://github.com/decaporg/decap-cms/issues/2370), [#5596](https://github.com/decaporg/decap-cms/issues/5596) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-47-badaa007462add5cc68ab2bbbaa66912)\n\n234. Netlify/Decap CMS [#7197](https://github.com/decaporg/decap-cms/issues/7197) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-109-badaa007462add5cc68ab2bbbaa66912)\n\n235. Netlify/Decap CMS [#5548](https://github.com/decaporg/decap-cms/issues/5548) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-134-badaa007462add5cc68ab2bbbaa66912)\n\n236. Netlify/Decap CMS [#2133](https://github.com/decaporg/decap-cms/issues/2133) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-135-badaa007462add5cc68ab2bbbaa66912)\n\n237. Netlify/Decap CMS [#13](https://github.com/decaporg/decap-cms/issues/13) — The issue appears to have been closed without a fix being available. [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-149-badaa007462add5cc68ab2bbbaa66912)\n\n238. Netlify/Decap CMS [#6816](https://github.com/decaporg/decap-cms/discussions/6816) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-132-badaa007462add5cc68ab2bbbaa66912)\n\n239. Netlify/Decap CMS [#3856](https://github.com/decaporg/decap-cms/issues/3856) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-98-badaa007462add5cc68ab2bbbaa66912)\n\n240. Netlify/Decap CMS [#3562](https://github.com/decaporg/decap-cms/issues/3562), [#6215](https://github.com/decaporg/decap-cms/issues/6215), [#7479](https://github.com/decaporg/decap-cms/issues/7479) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-117-badaa007462add5cc68ab2bbbaa66912)\n\n241. Netlify/Decap CMS [#4429](https://github.com/decaporg/decap-cms/issues/4429) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-131-badaa007462add5cc68ab2bbbaa66912) [↩2](https://github.com/sveltia/sveltia-cms#user-content-fnref-131-2-badaa007462add5cc68ab2bbbaa66912)\n\n242. Netlify/Decap CMS [#3671](https://github.com/decaporg/decap-cms/issues/3671) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-4-badaa007462add5cc68ab2bbbaa66912)\n\n243. Netlify/Decap CMS [#2113](https://github.com/decaporg/decap-cms/issues/2113), [#3240](https://github.com/decaporg/decap-cms/issues/3240) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-240-badaa007462add5cc68ab2bbbaa66912)\n\n244. Netlify/Decap CMS [#213](https://github.com/decaporg/decap-cms/issues/213), [#1032](https://github.com/decaporg/decap-cms/issues/1032), [#3244](https://github.com/decaporg/decap-cms/issues/3244), [#6730](https://github.com/decaporg/decap-cms/issues/6730), [#7459](https://github.com/decaporg/decap-cms/discussions/7459) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-239-badaa007462add5cc68ab2bbbaa66912)\n\n245. Netlify/Decap CMS [#192](https://github.com/decaporg/decap-cms/issues/192) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-242-badaa007462add5cc68ab2bbbaa66912)\n\n246. Netlify/Decap CMS [#717](https://github.com/decaporg/decap-cms/issues/717), [#5750](https://github.com/decaporg/decap-cms/issues/5750), [#6895](https://github.com/decaporg/decap-cms/issues/6895) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-243-badaa007462add5cc68ab2bbbaa66912)\n\n247. Netlify/Decap CMS [#1794](https://github.com/decaporg/decap-cms/issues/1794), [#2966](https://github.com/decaporg/decap-cms/issues/2966) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-247-badaa007462add5cc68ab2bbbaa66912)\n\n248. Netlify/Decap CMS [#857](https://github.com/decaporg/decap-cms/issues/857) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-241-badaa007462add5cc68ab2bbbaa66912)\n\n249. Netlify/Decap CMS [#1769](https://github.com/decaporg/decap-cms/issues/1769) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-245-badaa007462add5cc68ab2bbbaa66912)\n\n250. Netlify/Decap CMS [#1074](https://github.com/decaporg/decap-cms/issues/1074), [#1693](https://github.com/decaporg/decap-cms/issues/1693), [#3803](https://github.com/decaporg/decap-cms/issues/3803) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-246-badaa007462add5cc68ab2bbbaa66912)\n\n251. Netlify/Decap CMS [#836](https://github.com/decaporg/decap-cms/issues/836), [#3524](https://github.com/decaporg/decap-cms/issues/3524) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-248-badaa007462add5cc68ab2bbbaa66912)\n\n252. Netlify/Decap CMS [#1776](https://github.com/decaporg/decap-cms/issues/1776), [#2064](https://github.com/decaporg/decap-cms/issues/2064), [#7158](https://github.com/decaporg/decap-cms/issues/7158), [#7259](https://github.com/decaporg/decap-cms/issues/7259) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-122-badaa007462add5cc68ab2bbbaa66912)\n\n253. Netlify/Decap CMS [#475](https://github.com/decaporg/decap-cms/issues/475), [#5469](https://github.com/decaporg/decap-cms/issues/5469) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-125-badaa007462add5cc68ab2bbbaa66912)\n\n254. Netlify/Decap CMS [#942](https://github.com/decaporg/decap-cms/issues/942) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-261-badaa007462add5cc68ab2bbbaa66912)\n\n255. Netlify/Decap CMS [#2845](https://github.com/decaporg/decap-cms/issues/2845) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-256-badaa007462add5cc68ab2bbbaa66912)\n\n256. Netlify/Decap CMS [#341](https://github.com/decaporg/decap-cms/issues/341), [#1167](https://github.com/decaporg/decap-cms/issues/1167) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-10-badaa007462add5cc68ab2bbbaa66912)\n\n257. Netlify/Decap CMS [#1727](https://github.com/decaporg/decap-cms/issues/1727) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-262-badaa007462add5cc68ab2bbbaa66912)\n\n258. Netlify/Decap CMS [#1342](https://github.com/decaporg/decap-cms/issues/1342) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-263-badaa007462add5cc68ab2bbbaa66912)\n\n259. Netlify/Decap CMS [#1502](https://github.com/decaporg/decap-cms/issues/1502) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-238-badaa007462add5cc68ab2bbbaa66912)\n\n260. Netlify/Decap CMS [#2](https://github.com/decaporg/decap-cms/issues/2) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-23-badaa007462add5cc68ab2bbbaa66912)\n\n261. Netlify/Decap CMS [#277](https://github.com/decaporg/decap-cms/issues/277) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-166-badaa007462add5cc68ab2bbbaa66912)\n\n262. Netlify/Decap CMS [#263](https://github.com/decaporg/decap-cms/issues/263) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-167-badaa007462add5cc68ab2bbbaa66912)\n\n263. Netlify/Decap CMS [#1206](https://github.com/decaporg/decap-cms/issues/1206) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-244-badaa007462add5cc68ab2bbbaa66912)\n\n264. Netlify/Decap CMS [#5029](https://github.com/decaporg/decap-cms/issues/5029), [#5048](https://github.com/decaporg/decap-cms/issues/5048) [↩](https://github.com/sveltia/sveltia-cms#user-content-fnref-114-badaa007462add5cc68ab2bbbaa66912)\n\n\n## About\n\nNetlify/Decap CMS alternative. Fast, lightweight, Git-based headless CMS. Modern UX, first-class i18n support, mobile support + 100s of improvements. Framework-agnostic, open source & free.\n\n\n### Topics\n\n[static-site-generator](https://github.com/topics/static-site-generator \"Topic: static-site-generator\") [cms](https://github.com/topics/cms \"Topic: cms\") [github-api](https://github.com/topics/github-api \"Topic: github-api\") [svelte](https://github.com/topics/svelte \"Topic: svelte\") [content-management](https://github.com/topics/content-management \"Topic: content-management\") [dam](https://github.com/topics/dam \"Topic: dam\") [jamstack](https://github.com/topics/jamstack \"Topic: jamstack\") [content-management-system](https://github.com/topics/content-management-system \"Topic: content-management-system\") [dark-mode](https://github.com/topics/dark-mode \"Topic: dark-mode\") [headless-cms](https://github.com/topics/headless-cms \"Topic: headless-cms\") [stock-photos](https://github.com/topics/stock-photos \"Topic: stock-photos\") [digital-asset-management](https://github.com/topics/digital-asset-management \"Topic: digital-asset-management\") [netlify-cms](https://github.com/topics/netlify-cms \"Topic: netlify-cms\") [unsplash-api](https://github.com/topics/unsplash-api \"Topic: unsplash-api\") [pixabay-api](https://github.com/topics/pixabay-api \"Topic: pixabay-api\") [pexels-api](https://github.com/topics/pexels-api \"Topic: pexels-api\") [git-based-cms](https://github.com/topics/git-based-cms \"Topic: git-based-cms\") [decap-cms](https://github.com/topics/decap-cms \"Topic: decap-cms\") [sveltia-cms](https://github.com/topics/sveltia-cms \"Topic: sveltia-cms\")\n\n### Resources\n\n[Readme](https://github.com/sveltia/sveltia-cms#readme-ov-file)\n\n### License\n\n[MIT license](https://github.com/sveltia/sveltia-cms#MIT-1-ov-file)\n\n[Activity](https://github.com/sveltia/sveltia-cms/activity)\n\n[Custom properties](https://github.com/sveltia/sveltia-cms/custom-properties)\n\n### Stars\n\n[**1.6k**\\\\\nstars](https://github.com/sveltia/sveltia-cms/stargazers)\n\n### Watchers\n\n[**15**\\\\\nwatching](https://github.com/sveltia/sveltia-cms/watchers)\n\n### Forks\n\n[**86**\\\\\nforks](https://github.com/sveltia/sveltia-cms/forks)\n\n[Report repository](https://github.com/contact/report-content?content_url=https%3A%2F%2Fgithub.com%2Fsveltia%2Fsveltia-cms&report=sveltia+%28user%29)\n\n## [Releases\\  367](https://github.com/sveltia/sveltia-cms/releases)\n\n[v0.92.2\\\\\nLatest\\\\\n\\\\\nJul 30, 2025](https://github.com/sveltia/sveltia-cms/releases/tag/v0.92.2)\n\n[\\+ 366 releases](https://github.com/sveltia/sveltia-cms/releases)\n\n## [Contributors\\  6](https://github.com/sveltia/sveltia-cms/graphs/contributors)\n\n- [![@kyoshino](https://avatars.githubusercontent.com/u/2929505?s=64&v=4)](https://github.com/kyoshino)\n- [![@blu3id](https://avatars.githubusercontent.com/u/16974943?s=64&v=4)](https://github.com/blu3id)\n- [![@denyskon](https://avatars.githubusercontent.com/u/47871822?s=64&v=4)](https://github.com/denyskon)\n- [![@BlueFrog130](https://avatars.githubusercontent.com/u/50666443?s=64&v=4)](https://github.com/BlueFrog130)\n- [![@RDjarbeng](https://avatars.githubusercontent.com/u/57795443?s=64&v=4)](https://github.com/RDjarbeng)\n- [![@DucLongHoang](https://avatars.githubusercontent.com/u/91323806?s=64&v=4)](https://github.com/DucLongHoang)\n\n## Languages\n\n- [JavaScript82.1%](https://github.com/sveltia/sveltia-cms/search?l=javascript)\n- [Svelte17.9%](https://github.com/sveltia/sveltia-cms/search?l=svelte)","size_bytes":252842},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n// Serve content files and admin interface statically\napp.use('/content', express.static('content'));\n\n// Hoisting this up a level - since we also want to host rss.xml from /public\n// app.use('/admin', express.static('public/admin'));\napp.use(express.static('public'));\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2337},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { z } from \"zod\";\n\nconst contactFormSchema = z.object({\n  firstName: z.string().min(1, \"First name is required\"),\n  lastName: z.string().min(1, \"Last name is required\"),\n  email: z.string().email(\"Valid email is required\"),\n  phone: z.string().optional(),\n  organization: z.string().optional(),\n  subject: z.string().min(1, \"Subject is required\"),\n  message: z.string().min(10, \"Message must be at least 10 characters\"),\n});\n\nconst newsletterSubscriptionSchema = z.object({\n  email: z.string().email(\"Valid email is required\"),\n});\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Contact form submission\n  app.post(\"/api/contact\", async (req, res) => {\n    try {\n      const data = contactFormSchema.parse(req.body);\n      \n      // TODO: Implement email sending logic using nodemailer or similar\n      // For now, we'll just log the contact form submission\n      console.log(\"Contact form submission:\", data);\n      \n      // Simulate processing time\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      res.json({ \n        success: true, \n        message: \"Your message has been sent successfully. We'll get back to you within 24 hours.\" \n      });\n    } catch (error) {\n      console.error(\"Contact form error:\", error);\n      res.status(400).json({ \n        success: false, \n        message: \"There was an error sending your message. Please try again.\" \n      });\n    }\n  });\n\n  // Newsletter subscription\n  app.post(\"/api/newsletter/subscribe\", async (req, res) => {\n    try {\n      const data = newsletterSubscriptionSchema.parse(req.body);\n      \n      // TODO: Implement newsletter subscription logic\n      // This could integrate with email marketing services like Mailchimp, ConvertKit, etc.\n      console.log(\"Newsletter subscription:\", data);\n      \n      // Simulate processing time\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      res.json({ \n        success: true, \n        message: \"Successfully subscribed to the newsletter!\" \n      });\n    } catch (error) {\n      console.error(\"Newsletter subscription error:\", error);\n      res.status(400).json({ \n        success: false, \n        message: \"There was an error subscribing to the newsletter. Please try again.\" \n      });\n    }\n  });\n\n  // Health check endpoint\n  app.get(\"/api/health\", (req, res) => {\n    res.json({ status: \"ok\", timestamp: new Date().toISOString() });\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":2584},"server/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":993},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":584},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { useScrollToTop } from \"./hooks/use-scroll-to-top\";\nimport Navigation from \"./components/navigation\";\nimport Footer from \"./components/footer\";\nimport Home from \"./pages/home\";\nimport Newsletter from \"./pages/newsletter\";\nimport PracticeAreas from \"./pages/practice-areas\";\nimport Attorneys from \"./pages/attorneys\";\nimport Contact from \"./pages/contact\";\nimport NotFound from \"./pages/not-found\";\nimport { useEffect } from 'react';\n\n// Admin component that shows admin info\nfunction AdminInfo() {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n      <div className=\"max-w-md p-8 bg-white rounded-lg shadow-lg text-center\">\n        <h1 className=\"text-2xl font-bold text-fire-navy mb-4\">Sveltia CMS Admin</h1>\n        <p className=\"text-warm-gray mb-6\">\n          Access the modern, fast content management system powered by Sveltia CMS:\n        </p>\n        <a \n          href=\"/admin/index.html\" \n          className=\"inline-block bg-fire-red text-white px-6 py-3 rounded-lg hover:bg-red-700 transition-colors\"\n        >\n          Launch Sveltia CMS →\n        </a>\n        <p className=\"text-sm text-warm-gray mt-4\">\n          Requires GitHub authentication. Sveltia CMS offers improved performance, better UX, and enhanced features compared to Decap CMS.\n        </p>\n        <p className=\"text-xs text-warm-gray mt-2 border-t pt-2\">\n          Note: On static deployments, backend features like contact forms may not be available.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nfunction Router() {\n  useScrollToTop();\n\n  useEffect(() => {\n    // Add RSS link to document head\n    const existingLink = document.querySelector('link[rel=\"alternate\"][type=\"application/rss+xml\"]');\n    if (!existingLink) {\n      const link = document.createElement('link');\n      link.rel = 'alternate';\n      link.type = 'application/rss+xml';\n      link.title = 'Firehouse Lawyer Newsletter';\n      link.href = '/rss.xml';\n      document.head.appendChild(link);\n      return () => {\n        document.head.removeChild(link);\n      };\n    }\n  }, []);\n\n  \n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Navigation />\n      <main className=\"flex-1\">\n        <Switch>\n          <Route path=\"/\" component={Home} />\n          <Route path=\"/newsletter\" component={Newsletter} />\n          <Route path=\"/practice-areas\" component={PracticeAreas} />\n          <Route path=\"/attorneys\" component={Attorneys} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/admin\" component={AdminInfo} />\n          <Route component={NotFound} />\n        </Switch>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":3155},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Montserrat:wght@300;400;500;600;700;800;900&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 18%); /* #2F2F2F - Dark Gray Base */\n  --foreground: hsl(0, 0%, 95%); /* Light text for contrast */\n  --muted: hsl(0, 0%, 23%); /* #3A3A3A - Slightly lighter gray */\n  --muted-foreground: hsl(0, 0%, 75%);\n  --popover: hsl(0, 0%, 18%);\n  --popover-foreground: hsl(0, 0%, 95%);\n  --card: hsl(0, 0%, 29%); /* #4A4A4A - Card background */\n  --card-foreground: hsl(0, 0%, 95%);\n  --border: hsl(0, 100%, 27%); /* #8B0000 - Muted red borders */\n  --input: hsl(0, 0%, 18%);\n  --primary: hsl(0, 82%, 55%); /* #ed2c2c - Red primary */\n  --primary-foreground: hsl(0, 0%, 95%);\n  --secondary: hsl(0, 0%, 23%);\n  --secondary-foreground: hsl(0, 0%, 95%);\n  --accent: hsl(0, 100%, 27%); /* #8B0000 - Muted red accent */\n  --accent-foreground: hsl(0, 0%, 95%);\n  --destructive: hsl(0, 84.2%, 60.2%);\n  --destructive-foreground: hsl(0, 0%, 95%);\n  --ring: hsl(0, 82%, 55%);\n  --radius: 0.25rem; /* Sharper corners for gritty feel */\n  \n  /* Urban gritty themed colors */\n  --urban-dark: hsl(0, 0%, 10%); /* #1A1A1A - Navigation dark */\n  --urban-gray: hsl(0, 0%, 18%); /* #2F2F2F - Base dark gray */\n  --urban-medium: hsl(0, 0%, 23%); /* #3A3A3A - Medium gray */\n  --urban-light: hsl(0, 0%, 29%); /* #4A4A4A - Light gray */\n  --muted-red: hsl(0, 100%, 27%); /* #8B0000 - Muted red */\n  --muted-red-hover: hsl(0, 87%, 35%); /* #B22222 - Muted red hover */\n  --neon-orange: hsl(0, 82%, 55%); /* #ed2c2c - Red (keeping variable name for compatibility) */\n  --near-black: hsl(0, 0%, 5%); /* #0D0D0D - Footer near-black */\n}\n\n.dark {\n  --background: hsl(0, 0%, 10%); /* Even darker for dark mode */\n  --foreground: hsl(0, 0%, 95%);\n  --muted: hsl(0, 0%, 15%);\n  --muted-foreground: hsl(0, 0%, 75%);\n  --popover: hsl(0, 0%, 10%);\n  --popover-foreground: hsl(0, 0%, 95%);\n  --card: hsl(0, 0%, 18%);\n  --card-foreground: hsl(0, 0%, 95%);\n  --border: hsl(0, 100%, 27%);\n  --input: hsl(0, 0%, 10%);\n  --primary: hsl(0, 82%, 55%);\n  --primary-foreground: hsl(0, 0%, 95%);\n  --secondary: hsl(0, 0%, 15%);\n  --secondary-foreground: hsl(0, 0%, 95%);\n  --accent: hsl(0, 100%, 27%);\n  --accent-foreground: hsl(0, 0%, 95%);\n  --destructive: hsl(0, 62.8%, 30.6%);\n  --destructive-foreground: hsl(0, 0%, 95%);\n  --ring: hsl(0, 82%, 55%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n    font-family: 'Montserrat', sans-serif;\n    background-color: var(--urban-gray);\n    color: hsl(0, 0%, 95%);\n  }\n}\n\n@layer utilities {\n  /* Urban gritty color utilities */\n  .text-urban-dark {\n    color: var(--urban-dark);\n  }\n  \n  .text-urban-gray {\n    color: var(--urban-gray);\n  }\n  \n  .text-urban-medium {\n    color: var(--urban-medium);\n  }\n  \n  .text-urban-light {\n    color: var(--urban-light);\n  }\n  \n  .text-muted-red {\n    color: var(--muted-red);\n  }\n  \n  .text-neon-orange {\n    color: var(--neon-orange);\n  }\n  \n  .bg-urban-dark {\n    background-color: var(--urban-dark);\n  }\n  \n  .bg-urban-gray {\n    background-color: var(--urban-gray);\n  }\n  \n  .bg-urban-medium {\n    background-color: var(--urban-medium);\n  }\n  \n  .bg-urban-light {\n    background-color: var(--urban-light);\n  }\n  \n  .bg-muted-red {\n    background-color: var(--muted-red);\n  }\n  \n  .bg-neon-orange {\n    background-color: var(--neon-orange);\n  }\n  \n  .bg-near-black {\n    background-color: var(--near-black);\n  }\n  \n  .border-muted-red {\n    border-color: var(--muted-red);\n  }\n  \n  .border-neon-orange {\n    border-color: var(--neon-orange);\n  }\n  \n  .hover\\:bg-muted-red-hover:hover {\n    background-color: var(--muted-red-hover);\n  }\n  \n  .hover\\:text-muted-red-hover:hover {\n    color: var(--muted-red-hover);\n  }\n  \n  .hover\\:text-neon-orange:hover {\n    color: var(--neon-orange);\n  }\n  \n  .hover\\:text-muted-red:hover {\n    color: var(--muted-red);\n  }\n\n  .text-red-400 {\n    color: hsl(0, 82%, 65%); /* Lighter version of #ed2c2c for hover states */\n  }\n\n  .hover\\:text-red-400:hover {\n    color: hsl(0, 82%, 65%);\n  }\n\n  .bg-red-600 {\n    background-color: hsl(0, 84%, 60%); /* Darker version of #ed2c2c for hover states */\n  }\n\n  .hover\\:bg-red-600:hover {\n    background-color: hsl(0, 84%, 60%);\n  }\n\n  .text-orange-300 {\n    color: hsl(37, 90%, 70%); /* Light orange for better contrast */\n  }\n\n  .hover\\:text-orange-100:hover {\n    color: hsl(37, 85%, 85%); /* Even lighter orange for hover */\n  }\n  \n  /* Typography utilities */\n  .font-bebas {\n    font-family: 'Bebas Neue', sans-serif;\n  }\n  \n  .font-montserrat {\n    font-family: 'Montserrat', sans-serif;\n  }\n  \n  /* Urban texture and shadow effects */\n  .urban-shadow {\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.3), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  }\n  \n  .urban-shadow-lg {\n    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.4), 0 4px 6px -2px rgba(0, 0, 0, 0.1);\n  }\n  \n  .text-shadow-gritty {\n    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);\n  }\n  \n  .distressed-border {\n    border: 2px solid var(--neon-orange);\n    position: relative;\n  }\n  \n  /* Urban background patterns */\n  .urban-concrete {\n    background-image: \n      radial-gradient(circle at 1px 1px, rgba(255,255,255,0.02) 1px, transparent 0);\n    background-size: 20px 20px;\n  }\n  \n  .urban-grid {\n    background-image: \n      linear-gradient(rgba(255,255,255,0.03) 1px, transparent 1px),\n      linear-gradient(90deg, rgba(255,255,255,0.03) 1px, transparent 1px);\n    background-size: 40px 40px;\n  }\n}\n","size_bytes":5591},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"content/attorneys/eric-quinn.md":{"content":"---\nname: \"Eric T. Quinn\"\ntitle: \"Principal Attorney\"\nphone: \"(253) 590-6628\"\nemail: \"ericquinn@firehouselawyer2.com\"\norder: 1\nbio: |\n  Eric Quinn was born in University Place, Washington in 1982, and has lived in the Pacific Northwest his whole life, aside from a one-year stint in Michigan for law school. He graduated from Pacific Lutheran University in 2006. He is a member of the Rotary Club of Lakewood. Eric loves the outdoors and is also a performance artist. He does, however, spend most of his non-attorney time with family.\neducation: |\n  Eric graduated from the Seattle University School of Law, where he was a finalist in the second-year mock trial competition. He worked as a legal intern throughout all three years of his law school career.\nexperience: |\n  During his first year of law school, Eric worked at the State Appellate Defender's Office (SADO) in Detroit, Michigan. At SADO, he analyzed boxes (and boxes) of case files to determine if individuals had been wrongfully convicted of crimes based on faulty DNA evidence. After transferring to Seattle University for his second year of law school, he worked at the law firm of Patterson, Buchanan, Fobes, Leitch and Kalzer, P.S.\nbar_admissions: \"State of Washington, 2014\"\n---","size_bytes":1246},"content/attorneys/joseph-quinn.md":{"content":"---\nname: \"Joseph F. Quinn\"\ntitle: \"Of Counsel\"\nphone: \"(253) 576-3232\"\nemail: \"joequinn@firehouselawyer.com\"\norder: 2\nbio: |\n  Joseph F. Quinn represents virtually all of the Pierce County fire districts, among various other fire districts and regional fire authorities, along with 911 dispatch centers. He has argued before the United States Supreme Court. His extensive litigation and appellate experience, and his years spent as a commissioner of the Public Employment Relations Commission (appointed by Governor Booth Gardner, in 1986) is quite useful in this practice.\neducation: |\n  Graduate of Seattle University School of Law with extensive continuing legal education in government law, labor relations, and fire service administration.\nexperience: |\n  - Argued before the United States Supreme Court\n  - Former Commissioner, Public Employment Relations Commission (appointed by Governor Booth Gardner, 1986)\n  - Represents virtually all Pierce County fire districts\n  - Extensive litigation and appellate experience\n  - Over 30 years specializing in fire service law\nbar_admissions: \"State of Washington\"\n---","size_bytes":1118},"content/newsletters/2025-07-july-newsletter.md":{"content":"---\ntitle: \"July 2025 - Special-Meeting Notices Are Key\"\ndate: \"2025-07-15T00:00:00.000Z\"\ndescription: \"Today we discuss two OPMA cases involving notices of special meetings; we also consider apprenticeship requirements in public-works contracts, deductions from leave banks of FLSA-exempt employees, \\\"reverse discrimination,\\\" and some miscellaneous laws.\"\npdf_url: \"https://firehouselawyer.com/Newsletters/July2025FINAL.pdf\"\nfeatured: true\ncontent: |\n  This month's newsletter covers critical updates for fire service administrators and commissioners. We examine recent OPMA cases that clarify requirements for special meeting notices, ensuring your agency maintains compliance with transparency laws.\n\n  ## Key Topics Covered:\n\n  ### OPMA Special Meeting Requirements\n  Two recent cases provide important guidance on proper notice procedures for special meetings, including timing requirements and content specifications.\n\n  ### Public Works Contract Updates\n  New apprenticeship requirements affect how fire districts structure their public works contracts, with specific implications for equipment purchases and facility construction.\n\n  ### FLSA and Leave Bank Management\n  Important considerations for managing leave bank deductions for FLSA-exempt employees, including best practices for policy implementation.\n\n  ### Employment Law Updates\n  Recent developments in reverse discrimination law and their impact on fire service hiring and promotion practices.\n\n  ### Miscellaneous Legal Updates\n  Additional regulatory changes affecting fire districts, including updates to procurement rules and interlocal agreement requirements.\n---","size_bytes":1641},"content/pages/attorneys.md":{"content":"---\ntitle: \"Our Attorneys\"\nsubtitle: \"Experienced legal professionals dedicated to serving the fire service community.\"\n---","size_bytes":123},"content/pages/contact.md":{"content":"---\ntitle: \"Contact Us\"\nsubtitle: \"Ready to discuss your fire service legal needs? We're here to help.\"\noffice_address: |\n  7403 Lakewood Drive West, Suite # 11\n  Lakewood, WA 98499-7951\nemergency_note: \"Emergency consultations available 24/7 for critical fire service matters.\"\n---","size_bytes":282},"content/pages/home.md":{"content":"---\ntitle: \"Eric T. Quinn, P.S. - Representing the Fire Service\"\nhero_headline: \"Representing the Fire Service with Excellence\"\nhero_subtext: \"At Eric T. Quinn, P.S., we have a common goal: providing specialized legal counsel to fire districts, regional fire authorities, and emergency services across the Pacific Northwest.\"\nhero_image: \"https://images.unsplash.com/photo-1540979388789-6cee28a1cdc9?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080\"\nabout_title: \"Specialized Legal Counsel for Fire Service\"\nabout_image: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\"\nabout_content: |\n  Managing a government agency is no easy task. Every day you address many challenges, and we will help you solve them. We understand that the ultimate goal of the fire service is to ensure the safety and wellness of every citizen.\n\n  But that does not come without a cost to management. You may face an employee who alleges discrimination; a citizen who makes numerous public records requests; or the passage of an excess levy, which requires not only political will, but financial and organizational expertise.\n---","size_bytes":1166},"content/pages/newsletter.md":{"content":"---\ntitle: \"Our Newsletter\"\nsubtitle: \"Stay updated with the latest fire service legal insights and legislative changes.\"\nlatest_title: \"Special-Meeting Notices Are Key\"\nlatest_description: \"Today we discuss two OPMA cases involving notices of special meetings; we also consider apprenticeship requirements in public-works contracts, deductions from leave banks of FLSA-exempt employees, \\\"reverse discrimination,\\\" and some miscellaneous laws.\"\nlatest_pdf_url: \"https://firehouselawyer.com/Newsletters/July2025FINAL.pdf\"\nlatest_content: |\n  This month's newsletter covers critical updates for fire service administrators and commissioners. We examine recent OPMA cases that clarify requirements for special meeting notices, ensuring your agency maintains compliance with transparency laws.\n\n  Additional topics include new apprenticeship requirements in public works contracts, proper handling of FLSA-exempt employee leave deductions, and guidance on addressing reverse discrimination claims in the workplace.\n---","size_bytes":1015},"content/pages/practice-areas.md":{"content":"---\ntitle: \"Practice Areas\"\nsubtitle: \"Comprehensive legal services for fire districts, regional fire authorities, and emergency services.\"\nmergers_title: \"Mergers and Consolidations\"\nmergers_image: \"https://images.unsplash.com/photo-1589829085413-56de8ae18c73?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\"\npublic_records_title: \"Public Records Act\"\npublic_records_image: \"https://images.unsplash.com/photo-1450101499163-c8848c66ca85?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\"\nboard_retreats_title: \"Board Retreats\"\nboard_retreats_image: \"https://images.unsplash.com/photo-1563906267088-b029e7101114?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\"\nmergers_content: |\n  Mergers and Consolidations require a skilled attorney who understands not only their legal implications, but their political implications as well. Although Mergers and Consolidations has been a hot topic at many conferences in recent years, Mr. Quinn has actually been very active in consolidation and merger work since 1990.\n\n  He was personally very involved and remains involved in the following agencies formed as a result of such alliances: Central Pierce Fire & Rescue, East Pierce Fire & Rescue, West Pierce Fire & Rescue, Valley Regional Fire Authority, Riverside Fire Authority (Centralia area), West Thurston Regional Fire Authority, South King Fire & Rescue, and the list goes on and on.\npublic_records_content: |\n  The Washington Public Records Act (PRA) is another \"sunshine law\" mandating government transparency. Much like the OPMA, this law is construed broadly and its exemptions are construed narrowly. This growing area of law requires that your staff be well trained on the intricacies of the PRA.\n\n  We deal with PRA issues in this office, practically on a daily basis, so we know when to claim an exemption and when not to claim an exemption. We provide comprehensive training and ongoing support.\nboard_retreats_content: |\n  Eric and Joe Quinn facilitate annual Board retreats to train commissioners and administration about governance issues and working as a team, as is absolutely crucial in the fire service and government in general.\n---","size_bytes":2143},"content/practice-areas/contract-review.md":{"content":"---\ntitle: \"Contract Review\"\ndescription: \"Comprehensive contract drafting and review for mutual aid agreements and procurement.\"\nicon: \"ClipboardCheck\"\norder: 6\ncontent: |\n  More often than not, legal issues are resolved by recognizing the needs of those who have contrary interests to a client. Mr. Quinn has crafted and reviewed various mutual aid agreements and fire protection contracts, which were favorable to all parties involved, but most importantly, to his clients and the public they serve.\n\n  Our contract review services include apparatus purchase agreements, construction contracts, professional services agreements, interlocal agreements, and mutual aid compacts. We ensure all contracts protect your interests while maintaining positive relationships with other agencies and vendors.\n\n  Whether you're entering into a new agreement or reviewing existing contracts for compliance issues, we provide thorough analysis and practical recommendations to minimize risk and maximize your agency's legal protection.\n---","size_bytes":1028},"content/practice-areas/financial-management.md":{"content":"---\ntitle: \"Financial Management\"\ndescription: \"Expert advice on property taxes, fire benefit charges, and financial compliance matters.\"\nicon: \"DollarSign\"\norder: 5\ncontent: |\n  Property taxes and other financial issues can be baffling to elected officials and fire chiefs, but after more than thirty years in \"this business\" of local government, Mr. Quinn has considerable expertise with regard to property taxes, fire benefit charges, interlocal agreements, and just contracts in general.\n\n  Whether it is public works or purchasing apparatus, we are familiar with all of the laws, exceptions and rules regarding procurement. We have also led our clients through passage of excess property tax levies, and have considerable knowledge about fire benefit charges, which many fire districts in our area have adopted as an alternative revenue source.\n\n  Financial management also includes understanding the complexities of municipal finance, debt financing, and compliance with state and federal regulations affecting fire district revenues and expenditures.\n---","size_bytes":1061},"content/practice-areas/hipaa-compliance.md":{"content":"---\ntitle: \"HIPAA Compliance\"\ndescription: \"Protect medical information and ensure compliance with federal and state health privacy laws.\"\nicon: \"Shield\"\norder: 4\ncontent: |\n  Washington and federal law are both very protective of the medical information of individual persons. Quite often, Mr. Quinn addresses the intricacies of these laws, to avoid the consequences of disclosing protected health information without proper authority. He is very conversant with these laws; sometimes we receive requests for advice on medical records issues many times in one week!\n\n  He has developed numerous forms and policies to deal with HIPAA and the state's Health Care Information Act. These laws can be tricky, and we often get calls about release of information forms, what information can be disclosed and to whom, what needs to be redacted, and whether certain disclosures are mandatory or permissive.\n\n  Fire departments and EMS services handle sensitive medical information daily, making compliance with HIPAA and state privacy laws absolutely critical to avoid costly violations and protect patient rights.\n---","size_bytes":1110},"content/practice-areas/mergers-consolidations.md":{"content":"---\ntitle: \"Mergers and Consolidations\"\ndescription: \"Expert guidance through complex fire district mergers and consolidations with political and legal implications.\"\nicon: \"Building2\"\norder: 1\ncontent: |\n  Mergers and Consolidations require a skilled attorney who understands not only their legal implications, but their political implications as well. Although Mergers and Consolidations has been a hot topic at many conferences in recent years, Mr. Quinn has actually been very active in consolidation and merger work since 1990.\n\n  He was personally very involved and remains involved in the following agencies formed as a result of such alliances: Central Pierce Fire & Rescue, East Pierce Fire & Rescue, West Pierce Fire & Rescue, Valley Regional Fire Authority, Riverside Fire Authority (Centralia area), West Thurston Regional Fire Authority, South King Fire & Rescue, and the list goes on and on.\n\n  He has also consulted with or advised planning groups, cities or towns and fire districts on such matters without being their attorney, such as Friday Harbor and San Juan Fire District No. 3, Bremerton and two Kitsap County fire districts, and many others. He has vigorously sought, throughout his entire career, to facilitate meaningful and lasting relationships between municipal entities.\n---","size_bytes":1304},"content/practice-areas/personnel-matters.md":{"content":"---\ntitle: \"Personnel Matters\"\ndescription: \"Complete support for employment law, collective bargaining, and workplace policy issues.\"\nicon: \"Users\"\norder: 3\ncontent: |\n  We work in a fire station, and keep our doors open. Labor questions arise all the time, and fall under various different laws: Worker's compensation, disability leave, employment discrimination (ADA/WLAD), workplace safety (WISHA/OSHA), harassment, policies and procedures, collective bargaining, employment contracts, the Fair Labor Standards Act, and the Family Medical Leave Act. The list goes on.\n\n  Mr. Quinn's forty or more fire service clients probably employ approximately 2,000 people. We are also available to assist in labor negotiations at the bargaining table or behind the scenes, and have done so on various occasions. If there is a contract grievance filed, and arbitration is needed, we are willing to represent the employer throughout the arbitration proceedings.\n\n  If negotiations reach impasse and no labor contract can be reached through bargaining, remember that firefighter and police bargaining units are entitled to go to \"interest arbitration\" in which a three-member panel will determine the terms of your contract.\n---","size_bytes":1218},"content/practice-areas/public-records.md":{"content":"---\ntitle: \"Public Records & OPMA\"\ndescription: \"Navigate public records requests and open meeting requirements with confidence and compliance.\"\nicon: \"FileText\"\norder: 2\ncontent: |\n  The Washington Public Records Act (PRA) is another \"sunshine law\" mandating government transparency. Much like the OPMA, this law is construed broadly and its exemptions are construed narrowly. This growing area of law requires that your staff be well trained on the intricacies of the PRA, but when counsel is needed, we are there for you quickly and with detailed advice.\n\n  We deal with PRA issues in this office, practically on a daily basis, so we know when to claim an exemption and when not to claim an exemption. The Open Public Meetings Act (OPMA) requires that all meetings of a governing body of an agency be open to the public, with limited exceptions. For years, Mr. Quinn has navigated these exceptions, and understands how your agency may fully comply with the OPMA.\n\n  He has more than thirty years' experience with such issues and deals with them every week in his practice. Now he often teaches classes on this law to fire commissioners, fire chiefs and their employees and/or volunteers throughout the state.\n---","size_bytes":1215},"content/settings/general.md":{"content":"---\nsite_title: \"Eric T. Quinn, P.S. - Representing the Fire Service\"\nsite_description: \"Specialized legal counsel for fire districts, regional fire authorities, and emergency services across the Pacific Northwest. Expert representation in mergers, public records, personnel matters, and more.\"\nfirm_name: \"Eric T. Quinn, P.S.\"\ntagline: \"Representing the Fire Service\"\nphone: \"(253) 590-6628\"\nemail: \"ericquinn@firehouselawyer2.com\"\naddress: |\n  7403 Lakewood Drive West, Suite # 11\n  Lakewood, WA 98499-7951\noffice_hours: |\n  Monday - Friday: 8:00 AM - 5:00 PM\n  Saturday: By Appointment\n  Sunday: Closed\nsocial:\n  facebook: \"\"\n  twitter: \"\"\n  linkedin: \"\"\n---","size_bytes":661},"client/src/components/footer.tsx":{"content":"import { Link } from \"wouter\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-near-black text-white py-16 urban-concrete\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"lg:grid lg:grid-cols-4 lg:gap-8\">\n          <div className=\"lg:col-span-2 mb-8 lg:mb-0\">\n            <h3 className=\"text-2xl font-bebas font-bold mb-4 tracking-wider text-shadow-gritty\">ERIC T. QUINN, P.S.</h3>\n            <p className=\"text-gray-100 mb-6 max-w-md font-montserrat\">\n              Dedicated to representing the Fire Service with specialized legal counsel for fire districts, \n              regional fire authorities, and public agencies across the Pacific Northwest.\n            </p>\n          </div>\n\n          <div className=\"mb-8 lg:mb-0\">\n            <h4 className=\"text-lg font-bebas font-semibold mb-4 tracking-wide text-shadow-gritty\">QUICK LINKS</h4>\n            <ul className=\"space-y-2\">\n              <li><Link href=\"/\" className=\"text-neon-orange hover:text-red-400 transition-colors font-montserrat uppercase tracking-wide\" data-testid=\"footer-link-home\">Home</Link></li>\n              <li><Link href=\"/practice-areas\" className=\"text-neon-orange hover:text-red-400 transition-colors font-montserrat uppercase tracking-wide\" data-testid=\"footer-link-practice-areas\">Practice Areas</Link></li>\n              <li><Link href=\"/attorneys\" className=\"text-neon-orange hover:text-red-400 transition-colors font-montserrat uppercase tracking-wide\" data-testid=\"footer-link-attorneys\">Our Attorneys</Link></li>\n              <li><Link href=\"/newsletter\" className=\"text-neon-orange hover:text-red-400 transition-colors font-montserrat uppercase tracking-wide\" data-testid=\"footer-link-newsletter\">Newsletter</Link></li>\n              <li><Link href=\"/contact\" className=\"text-neon-orange hover:text-red-400 transition-colors font-montserrat uppercase tracking-wide\" data-testid=\"footer-link-contact\">Contact Us</Link></li>\n            </ul>\n          </div>\n\n          <div>\n            <h4 className=\"text-lg font-bebas font-semibold mb-4 tracking-wide text-shadow-gritty\">CONTACT INFO</h4>\n            <div className=\"space-y-2 text-gray-100 font-montserrat\">\n              <p>7403 Lakewood Drive West, Suite # 11</p>\n              <p>Lakewood, WA 98499-7951</p>\n              <p><a href=\"tel:12535906628\" className=\"text-neon-orange hover:text-red-400 transition-colors\" data-testid=\"footer-phone\">(253) 590-6628</a></p>\n              <p><a href=\"mailto:ericquinn@firehouselawyer2.com\" className=\"text-neon-orange hover:text-red-400 transition-colors\" data-testid=\"footer-email\">ericquinn@firehouselawyer2.com</a></p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"border-t border-neon-orange mt-12 pt-8\">\n          {/* Legal Disclaimer */}\n          <div className=\"mb-8 text-sm text-gray-200 leading-relaxed max-w-5xl mx-auto font-montserrat\">\n            <h4 className=\"text-gray-100 font-bebas font-semibold mb-3 tracking-wide text-shadow-gritty\">LEGAL DISCLAIMER</h4>\n            <p>\n              The information, materials and references on this web site are for informational purposes only and are not for the purpose of providing legal advice. You should consult an attorney to obtain advice with respect to any particular issue or problem. Should you wish to retain the firm's services, please contact us at 253-590-6628 Use of this website or any of the links contained herein does not create an attorney-client relationship, nor can the firm be responsible for the content of any outside website. Any information provided herein is not intended in any way to waive attorney-client privilege or attorney work product.\n            </p>\n          </div>\n          \n          <div className=\"text-center text-gray-100 font-montserrat\">\n            <p>&copy; 2025 Eric T. Quinn, P.S. All rights reserved. | Representing the Fire Service and Public Agencies</p>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":4023},"client/src/components/navigation.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Menu, X } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function Navigation() {\n  const [location] = useLocation();\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n  const navigation = [\n    { name: \"Home\", href: \"/\" },\n    { name: \"Newsletter\", href: \"/newsletter\" },\n    { name: \"Practice Areas\", href: \"/practice-areas\" },\n    { name: \"Attorneys\", href: \"/attorneys\" },\n    { name: \"Contact Us\", href: \"/contact\" },\n  ];\n\n  const isActive = (href: string) => {\n    if (href === \"/\" && location === \"/\") return true;\n    if (href !== \"/\" && location.startsWith(href)) return true;\n    return false;\n  };\n\n  return (\n    <nav className=\"bg-urban-dark urban-shadow-lg sticky top-0 z-50 border-b border-neon-orange\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-20\">\n          <div className=\"flex items-center\">\n            <Link href=\"/\" className=\"flex-shrink-0\">\n              <div>\n                <h1 className=\"text-2xl font-bebas font-bold text-white tracking-wider text-shadow-gritty\">ERIC T. QUINN, P.S.</h1>\n                <p className=\"text-sm text-neon-orange font-montserrat uppercase tracking-wide\">THE FIREHOUSE LAWYER</p>\n              </div>\n            </Link>\n          </div>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden lg:block\">\n            <div className=\"ml-10 flex items-baseline space-x-8\">\n              {navigation.map((item) => (\n                <Link\n                  key={item.name}\n                  href={item.href}\n                  className={`px-3 py-2 text-sm font-montserrat font-medium transition-all duration-300 ${\n                    isActive(item.href)\n                      ? \"text-neon-orange border-b-2 border-neon-orange\"\n                      : \"text-red-300 hover:text-white hover:scale-105\"\n                  }`}\n                  data-testid={`nav-link-${item.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                >\n                  {item.name.toUpperCase()}\n                </Link>\n              ))}\n            </div>\n          </div>\n\n          {/* Mobile menu button */}\n          <div className=\"lg:hidden\">\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n              className=\"text-white hover:text-red-400 hover:bg-transparent\"\n              data-testid=\"mobile-menu-toggle\"\n            >\n              {mobileMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n            </Button>\n          </div>\n        </div>\n      </div>\n      {/* Mobile Navigation */}\n      {mobileMenuOpen && (\n        <div className=\"lg:hidden\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3 bg-urban-medium border-t border-red-400\">\n            {navigation.map((item) => (\n              <Link\n                key={item.name}\n                href={item.href}\n                onClick={() => setMobileMenuOpen(false)}\n                className={`block px-4 py-3 font-montserrat font-medium uppercase tracking-wide transition-all duration-300 transform hover:translate-x-2 hover:scale-105 ${\n                  isActive(item.href) ? \"text-neon-orange border-l-4 border-neon-orange\" : \"text-white hover:text-red-400\"\n                }`}\n                data-testid={`mobile-nav-link-${item.name.toLowerCase().replace(/\\s+/g, '-')}`}\n              >\n                {item.name}\n              </Link>\n            ))}\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n}\n","size_bytes":3687},"client/src/components/newsletter-subscription.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface NewsletterSubscriptionProps {\n  variant?: \"default\" | \"sidebar\";\n}\n\nexport default function NewsletterSubscription({ variant = \"default\" }: NewsletterSubscriptionProps) {\n  const [email, setEmail] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!email) return;\n\n    setIsLoading(true);\n    \n    try {\n      // TODO: Implement newsletter subscription API call\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API call\n      \n      toast({\n        title: \"Subscribed successfully!\",\n        description: \"You'll receive our monthly newsletter with the latest fire service legal insights.\",\n      });\n      \n      setEmail(\"\");\n    } catch (error) {\n      toast({\n        title: \"Subscription failed\",\n        description: \"Please try again later or contact us directly.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (variant === \"sidebar\") {\n    return (\n      <div className=\"bg-urban-dark text-white p-8 distressed-border urban-shadow-lg urban-concrete\">\n        <h3 className=\"text-xl font-bebas font-bold mb-4 tracking-wider text-shadow-gritty\">SUBSCRIBE TO UPDATES</h3>\n        <p className=\"text-gray-200 mb-6 font-montserrat\">\n          Receive our monthly newsletter for our expert insights!\n        </p>\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <Input\n            type=\"email\"\n            placeholder=\"Your email address\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"w-full bg-urban-gray border-neon-orange text-white placeholder:text-gray-400 font-montserrat\"\n            required\n            data-testid=\"input-newsletter-email-sidebar\"\n          />\n          <Button \n            type=\"submit\" \n            disabled={isLoading}\n            className=\"w-full bg-neon-orange hover:bg-red-600 text-white hover:text-white urban-shadow border border-neon-orange font-montserrat font-semibold uppercase tracking-wide\"\n            data-testid=\"button-subscribe-sidebar\"\n          >\n            {isLoading ? \"Subscribing...\" : \"Subscribe Now\"}\n          </Button>\n        </form>\n      </div>\n    );\n  }\n\n  return (\n    <section className=\"py-20 bg-urban-dark urban-grid\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n        <h2 className=\"text-3xl lg:text-5xl font-bebas font-bold text-white mb-4 tracking-wider text-shadow-gritty\">STAY INFORMED</h2>\n        <p className=\"text-xl text-gray-200 mb-8 font-montserrat\">\n          Subscribe to our monthly newsletter for the latest updates on laws impacting fire departments and public agencies in general.\n        </p>\n        <form onSubmit={handleSubmit} className=\"flex flex-col sm:flex-row gap-4 max-w-md mx-auto\">\n          <Input\n            type=\"email\"\n            placeholder=\"Enter your email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"flex-1 bg-urban-gray border-neon-orange text-white placeholder:text-gray-400 font-montserrat\"\n            required\n            data-testid=\"input-newsletter-email\"\n          />\n          <Button \n            type=\"submit\" \n            disabled={isLoading}\n            className=\"bg-neon-orange hover:bg-red-600 px-8 py-3 urban-shadow border border-neon-orange font-montserrat font-semibold uppercase tracking-wide hover:scale-105 transition-all duration-300 text-white hover:text-white\"\n            data-testid=\"button-subscribe\"\n          >\n            {isLoading ? \"Subscribing...\" : \"Subscribe\"}\n          </Button>\n        </form>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3961},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-scroll-to-top.tsx":{"content":"import { useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\n\nexport function useScrollToTop() {\n  const [location] = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n}","size_bytes":212},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/cms.ts":{"content":"import matter from 'gray-matter';\nimport { remark } from 'remark';\nimport html from 'remark-html';\n\n// For server build of rss.xml\nimport { promises as fs } from 'fs';\nimport path from 'path';\n\nexport interface PageContent {\n  [key: string]: any;\n  content?: string;\n}\n\nexport interface AttorneyProfile {\n  name: string;\n  title: string;\n  phone: string;\n  email: string;\n  bio: string;\n  education?: string;\n  experience?: string;\n  bar_admissions?: string;\n  photo?: string;\n  order: number;\n}\n\nexport interface PracticeArea {\n  title: string;\n  description: string;\n  content: string;\n  icon: string;\n  order: number;\n}\n\nexport interface NewsletterIssue {\n  title: string;\n  date: string;\n  description: string;\n  content: string;\n  pdf_url?: string;\n  featured: boolean;\n  slug?: string;\n}\n\nexport interface SiteSettings {\n  site_title: string;\n  site_description: string;\n  firm_name: string;\n  tagline: string;\n  phone: string;\n  email: string;\n  address: string;\n  office_hours: string;\n  social: {\n    facebook?: string;\n    twitter?: string;\n    linkedin?: string;\n  };\n}\n\n// Cache for content to avoid repeated file reads\nconst contentCache = new Map<string, any>();\n\nasync function fetchContent(contentPath: string, isServer: boolean = false): Promise<string> {\n  const cacheKey = contentPath;\n  \n  if (contentCache.has(cacheKey)) {\n    return contentCache.get(cacheKey);\n  }\n\n  try {\n    if (isServer) {\n      const filePath = path.join(process.cwd(), contentPath);\n      const content = await fs.readFile(filePath, 'utf-8');\n      contentCache.set(cacheKey, content);\n      return content;\n    } else {\n      const response = await fetch(contentPath);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch ${contentPath}: ${response.status}`);\n      }\n      const content = await response.text();\n      contentCache.set(cacheKey, content);\n      return content;\n    }\n  } catch (error) {\n    console.error(`Error fetching content from ${contentPath}:`, error);\n    return '';\n  }\n}\n\nasync function processMarkdown(content: string): Promise<string> {\n  const result = await remark().use(html).process(content);\n  return result.toString();\n}\n\nexport async function getPageContent(pageName: string): Promise<PageContent> {\n  try {\n    const content = await fetchContent(`/content/pages/${pageName}.md`);\n    if (!content) return {};\n    \n    const { data, content: markdownContent } = matter(content);\n    \n    // Process markdown content if it exists\n    const processedContent = markdownContent ? await processMarkdown(markdownContent) : '';\n    \n    return {\n      ...data,\n      content: processedContent\n    };\n  } catch (error) {\n    console.error(`Error loading page content for ${pageName}:`, error);\n    return {};\n  }\n}\n\nexport async function getAttorneyProfiles(): Promise<AttorneyProfile[]> {\n  try {\n    // In a real implementation, you'd fetch a directory listing or have a known list\n    const attorneyFiles = ['eric-quinn', 'joseph-quinn'];\n    const attorneys: AttorneyProfile[] = [];\n    \n    for (const fileName of attorneyFiles) {\n      try {\n        const content = await fetchContent(`/content/attorneys/${fileName}.md`);\n        if (content) {\n          const { data } = matter(content);\n          attorneys.push(data as AttorneyProfile);\n        }\n      } catch (error) {\n        console.error(`Error loading attorney ${fileName}:`, error);\n      }\n    }\n    \n    return attorneys.sort((a, b) => (a.order || 0) - (b.order || 0));\n  } catch (error) {\n    console.error('Error loading attorney profiles:', error);\n    return [];\n  }\n}\n\nexport async function getPracticeAreas(): Promise<PracticeArea[]> {\n  try {\n    const practiceAreaFiles = [\n      'mergers-consolidations',\n      'public-records',\n      'personnel-matters',\n      'hipaa-compliance',\n      'financial-management',\n      'contract-review'\n    ];\n    const practiceAreas: PracticeArea[] = [];\n    \n    for (const fileName of practiceAreaFiles) {\n      try {\n        const content = await fetchContent(`/content/practice-areas/${fileName}.md`);\n        if (content) {\n          const { data, content: markdownContent } = matter(content);\n          const processedContent = markdownContent ? await processMarkdown(markdownContent) : '';\n          \n          practiceAreas.push({\n            ...data,\n            content: processedContent\n          } as PracticeArea);\n        }\n      } catch (error) {\n        console.error(`Error loading practice area ${fileName}:`, error);\n      }\n    }\n    \n    return practiceAreas.sort((a, b) => (a.order || 0) - (b.order || 0));\n  } catch (error) {\n    console.error('Error loading practice areas:', error);\n    return [];\n  }\n}\n\nexport async function getSiteSettings(): Promise<SiteSettings | null> {\n  try {\n    const content = await fetchContent('/content/settings/general.md');\n    if (!content) return null;\n    \n    const { data } = matter(content);\n    return data as SiteSettings;\n  } catch (error) {\n    console.error('Error loading site settings:', error);\n    return null;\n  }\n}\n\nexport async function getNewsletterIssues(isServer: boolean = false): Promise<NewsletterIssue[]> {\n  try {\n    let files: string[];\n    if (isServer) {\n      const contentDir = path.join(process.cwd(), 'content/newsletters');\n      files = await fs.readdir(contentDir);\n    } else {\n      // Client-side: Use an API endpoint or known files\n      files = ['issue-2025-01', 'issue-2025-02']; // Update with actual files or fetch from /api/newsletters\n    }\n    \n    const newsletters: NewsletterIssue[] = await Promise.all(\n      files\n        .filter(file => file.endsWith('.md'))\n        .map(async file => {\n          const fileName = file.replace(/\\.md$/, '');\n          const content = await fetchContent(`/content/newsletters/${fileName}.md`, isServer);\n          if (content) {\n            const { data, content: markdownContent } = matter(content);\n            const processedContent = markdownContent ? await processMarkdown(markdownContent) : '';\n            return {\n              title: data.title || 'Untitled',\n              date: data.date || new Date().toISOString(),\n              description: data.description || '',\n              content: processedContent,\n              pdf_url: data.pdf_url,\n              featured: data.featured || false,\n              slug: data.slug || fileName\n            };\n          }\n          return null;\n        })\n    );\n    \n    return newsletters\n      .filter((item): item is NewsletterIssue => item !== null)\n      .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n  } catch (error) {\n    console.error('Error loading newsletters:', error);\n    return [];\n  }\n}\n\n// Utility function to clear cache (useful for development)\nexport function clearContentCache() {\n  contentCache.clear();\n}","size_bytes":6803},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/attorneys.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Phone, Mail, CheckCircle } from \"lucide-react\";\nimport ericQuinnPhoto from \"../assets/images/eric-quinn.jpg\";\nimport josephQuinnPhoto from \"../assets/images/joseph-quinn.jpg\";\n\nexport default function Attorneys() {\n  return (\n    <div>\n      <div className=\"bg-urban-dark py-16 urban-grid\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <h1 className=\"text-4xl lg:text-6xl font-bebas font-bold text-white mb-4 tracking-wider text-shadow-gritty\">OUR ATTORNEYS</h1>\n          <p className=\"text-xl text-gray-200 font-montserrat\">Experienced legal professionals dedicated to serving the fire service community.</p>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16 bg-urban-gray urban-concrete min-h-screen\">\n        {/* Eric T. Quinn */}\n        <Card className=\"p-8 mb-12 bg-urban-medium border-neon-orange distressed-border urban-shadow-lg\">\n          <CardContent className=\"p-0\">\n            {/* Mobile/Tablet Image */}\n            <div className=\"lg:hidden mb-8\">\n              <div className=\"w-48 mx-auto sm:mx-0 bg-urban-light urban-shadow-lg p-2\" style={{ clipPath: 'polygon(0 0, 95% 0, 100% 95%, 5% 100%)' }}>\n                <div className=\"relative overflow-hidden\" style={{ clipPath: 'polygon(0 0, 95% 0, 100% 95%, 5% 100%)' }}>\n                  <img \n                    src={ericQuinnPhoto} \n                    alt=\"Eric T. Quinn\" \n                    className=\"w-full h-60 object-cover object-center\"\n                  />\n                  {/* No text overlay on mobile/tablet */}\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"lg:grid lg:grid-cols-3 lg:gap-12 items-start\">\n              <div className=\"lg:col-span-2\">\n                <h2 className=\"text-3xl lg:text-4xl font-bebas font-bold text-white mb-4 tracking-wider text-shadow-gritty\">ERIC T. QUINN</h2>\n                <p className=\"text-lg text-neon-orange font-semibold mb-6 font-montserrat\">Principal Attorney</p>\n                \n                <div className=\"mb-8\">\n                  <h3 className=\"text-xl font-bebas font-bold text-white mb-4 tracking-wide text-shadow-gritty\">PERSONAL BACKGROUND</h3>\n                  <p className=\"text-gray-100 mb-4 leading-relaxed font-montserrat\">\n                    Eric Quinn was born in University Place, Washington in 1982, and has lived in the Pacific Northwest his whole life, \n                    aside from a one-year stint in Michigan for law school. He graduated from Pacific Lutheran University in 2006. \n                    He is a member of the Rotary Club of Lakewood. Eric loves the outdoors and is also a performance artist. \n                    He does, however, spend most of his non-attorney time with family.\n                  </p>\n                </div>\n\n                <div className=\"mb-8\">\n                  <h3 className=\"text-xl font-bebas font-bold text-white mb-4 tracking-wide text-shadow-gritty\">LEGAL EDUCATION</h3>\n                  <p className=\"text-gray-100 mb-4 leading-relaxed font-montserrat\">\n                    Eric graduated from the Seattle University School of Law, where he was a finalist in the second-year mock trial competition. \n                    He worked as a legal intern throughout all three years of his law school career.\n                  </p>\n                </div>\n\n                <div className=\"mb-8\">\n                  <h3 className=\"text-xl font-bebas font-bold text-white mb-4 tracking-wide text-shadow-gritty\">LEGAL BACKGROUND</h3>\n                  <p className=\"text-gray-100 mb-4 leading-relaxed font-montserrat\">\n                    During his first year of law school, Eric worked at the State Appellate Defender's Office (SADO) in Detroit, Michigan. \n                    At SADO, he analyzed boxes (and boxes) of case files to determine if individuals had been wrongfully convicted of crimes \n                    based on faulty DNA evidence. After transferring to Seattle University for his second year of law school, he worked at \n                    the law firm of Patterson, Buchanan, Fobes, Leitch and Kalzer, P.S.\n                  </p>\n                </div>\n\n                <div className=\"mb-8\">\n                  <h3 className=\"text-xl font-bebas font-bold text-white mb-4 tracking-wide text-shadow-gritty\">BAR ADMISSIONS</h3>\n                  <p className=\"text-gray-100 font-montserrat\">State of Washington, 2014</p>\n                </div>\n\n                <div className=\"flex flex-col sm:flex-row gap-4\">\n                  <Button asChild className=\"bg-neon-orange hover:bg-red-600 text-white hover:text-white\">\n                    <a href=\"tel:12535906628\">\n                      <Phone className=\"w-5 h-5 mr-2\" />\n                      (253) 590-6628\n                    </a>\n                  </Button>\n                  <Button asChild variant=\"outline\" className=\"border-neon-orange text-white hover:bg-red-600 hover:text-white\">\n                    <a href=\"mailto:ericquinn@firehouselawyer2.com\">\n                      <Mail className=\"w-5 h-5 mr-2\" />\n                      Email Eric\n                    </a>\n                  </Button>\n                </div>\n              </div>\n              {/* Desktop Image */}\n              <div className=\"hidden lg:block mt-8 lg:mt-0\">\n                <div className=\"relative bg-urban-light urban-shadow-lg p-2\" style={{ clipPath: 'polygon(0 0, 95% 0, 100% 95%, 5% 100%)' }}>\n                  <div className=\"relative overflow-hidden\" style={{ clipPath: 'polygon(0 0, 95% 0, 100% 95%, 5% 100%)' }}>\n                    <img \n                      src={ericQuinnPhoto} \n                      alt=\"Eric T. Quinn\" \n                      className=\"w-full h-80 object-cover object-center\"\n                    />\n                    <div className=\"absolute bottom-0 left-0 right-0 h-1/4 bg-gradient-to-t from-black/80 via-black/50 to-transparent\"></div>\n                    <div className=\"absolute bottom-0 left-0 right-0 p-6 text-white\">\n                      <h3 className=\"text-xl font-bebas font-bold tracking-wide text-shadow-gritty\">ERIC T. QUINN</h3>\n                      <p className=\"text-neon-orange font-montserrat font-semibold text-shadow-gritty\">Principal Attorney</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Joseph F. Quinn */}\n        <Card className=\"p-8 bg-urban-medium border-neon-orange distressed-border urban-shadow-lg\">\n          <CardContent className=\"p-0\">\n            {/* Mobile/Tablet Image */}\n            <div className=\"lg:hidden mb-8\">\n              <div className=\"w-48 mx-auto sm:mx-0 bg-urban-light urban-shadow-lg p-2\" style={{ clipPath: 'polygon(0 0, 95% 0, 100% 95%, 5% 100%)' }}>\n                <div className=\"relative overflow-hidden\" style={{ clipPath: 'polygon(0 0, 95% 0, 100% 95%, 5% 100%)' }}>\n                  <img \n                    src={josephQuinnPhoto} \n                    alt=\"Joseph F. Quinn\" \n                    className=\"w-full h-60 object-cover object-center\"\n                  />\n                  {/* No text overlay on mobile/tablet */}\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"lg:grid lg:grid-cols-3 lg:gap-12 items-start\">\n              {/* Desktop Image */}\n              <div className=\"hidden lg:block order-2 lg:order-1 mt-8 lg:mt-0\">\n                <div className=\"relative bg-urban-light urban-shadow-lg p-2\" style={{ clipPath: 'polygon(0 0, 95% 0, 100% 95%, 5% 100%)' }}>\n                  <div className=\"relative overflow-hidden\" style={{ clipPath: 'polygon(0 0, 95% 0, 100% 95%, 5% 100%)' }}>\n                    <img \n                      src={josephQuinnPhoto} \n                      alt=\"Joseph F. Quinn\" \n                      className=\"w-full h-80 object-cover object-center\"\n                    />\n                    <div className=\"absolute bottom-0 left-0 right-0 h-1/4 bg-gradient-to-t from-black/80 via-black/50 to-transparent\"></div>\n                    <div className=\"absolute bottom-0 left-0 right-0 p-6 text-white\">\n                      <h3 className=\"text-xl font-bebas font-bold tracking-wide text-shadow-gritty\">JOSEPH F. QUINN</h3>\n                      <p className=\"text-neon-orange font-montserrat font-semibold text-shadow-gritty\">Of Counsel</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"lg:col-span-2 order-1 lg:order-2\">\n                <h2 className=\"text-3xl lg:text-4xl font-bebas font-bold text-white mb-4 tracking-wider text-shadow-gritty\">JOSEPH F. QUINN</h2>\n                <p className=\"text-lg text-neon-orange font-semibold mb-6 font-montserrat\">Of Counsel</p>\n                \n                <div className=\"mb-8\">\n                  <h3 className=\"text-xl font-bebas font-bold text-white mb-4 tracking-wide text-shadow-gritty\">EXPERIENCE & BACKGROUND</h3>\n                  <p className=\"text-gray-100 mb-4 leading-relaxed font-montserrat\">\n                    Joseph F. Quinn represents virtually all of the Pierce County fire districts, among various other fire districts \n                    and regional fire authorities, along with 911 dispatch centers. He has argued before the United States Supreme Court. \n                    His extensive litigation and appellate experience, and his years spent as a commissioner of the Public Employment \n                    Relations Commission (appointed by Governor Booth Gardner, in 1986) is quite useful in this practice.\n                  </p>\n                </div>\n\n                <div className=\"mb-8\">\n                  <h3 className=\"text-xl font-bebas font-bold text-white mb-4 tracking-wide text-shadow-gritty\">NOTABLE ACHIEVEMENTS</h3>\n                  <ul className=\"text-gray-100 space-y-2 font-montserrat\">\n                    <li className=\"flex items-start space-x-2\">\n                      <CheckCircle className=\"w-5 h-5 text-neon-orange mt-0.5 flex-shrink-0\" />\n                      <span>Argued before the United States Supreme Court</span>\n                    </li>\n                    <li className=\"flex items-start space-x-2\">\n                      <CheckCircle className=\"w-5 h-5 text-neon-orange mt-0.5 flex-shrink-0\" />\n                      <span>Former Commissioner, Public Employment Relations Commission</span>\n                    </li>\n                    <li className=\"flex items-start space-x-2\">\n                      <CheckCircle className=\"w-5 h-5 text-neon-orange mt-0.5 flex-shrink-0\" />\n                      <span>Represents virtually all Pierce County fire districts</span>\n                    </li>\n                    <li className=\"flex items-start space-x-2\">\n                      <CheckCircle className=\"w-5 h-5 text-neon-orange mt-0.5 flex-shrink-0\" />\n                      <span>Extensive litigation and appellate experience</span>\n                    </li>\n                  </ul>\n                </div>\n\n                <div className=\"flex flex-col sm:flex-row gap-4\">\n                  <Button asChild className=\"bg-neon-orange hover:bg-red-600 text-white hover:text-white\">\n                    <a href=\"tel:12535763232\">\n                      <Phone className=\"w-5 h-5 mr-2\" />\n                      (253) 576-3232\n                    </a>\n                  </Button>\n                  <Button asChild variant=\"outline\" className=\"border-neon-orange text-white hover:bg-red-600 hover:text-white\">\n                    <a href=\"mailto:joequinn@firehouselawyer.com\">\n                      <Mail className=\"w-5 h-5 mr-2\" />\n                      Email Joe\n                    </a>\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","size_bytes":12138},"client/src/pages/contact.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Phone, Mail, MapPin, Clock } from \"lucide-react\";\n\nexport default function Contact() {\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    organization: \"\",\n    subject: \"\",\n    message: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    try {\n      // TODO: Implement contact form submission\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API call\n      \n      toast({\n        title: \"Message sent successfully!\",\n        description: \"We'll get back to you within 24 hours.\",\n      });\n      \n      // Reset form\n      setFormData({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phone: \"\",\n        organization: \"\",\n        subject: \"\",\n        message: \"\"\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to send message\",\n        description: \"Please try again or contact us directly.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  return (\n    <div>\n      <div className=\"bg-fire-navy py-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <h1 className=\"text-4xl lg:text-5xl font-bold text-white mb-4\">Contact Us</h1>\n          <p className=\"text-xl text-gray-200\">Ready to discuss your legal needs? We're here to help.</p>\n        </div>\n      </div>\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16\">\n        <div className=\"lg:grid lg:grid-cols-2 lg:gap-16\">\n          {/* Contact Form */}\n          <Card className=\"p-8 border-neon-orange\">\n            <CardContent className=\"p-0\">\n              <h2 className=\"text-2xl font-bold text-fire-navy mb-6\">Send Us a Message</h2>\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  <div>\n                    <Label htmlFor=\"firstName\">First Name</Label>\n                    <Input\n                      id=\"firstName\"\n                      value={formData.firstName}\n                      onChange={(e) => handleInputChange(\"firstName\", e.target.value)}\n                      required\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"lastName\">Last Name</Label>\n                    <Input\n                      id=\"lastName\"\n                      value={formData.lastName}\n                      onChange={(e) => handleInputChange(\"lastName\", e.target.value)}\n                      required\n                    />\n                  </div>\n                </div>\n                \n                <div>\n                  <Label htmlFor=\"email\">Email Address</Label>\n                  <Input\n                    id=\"email\"\n                    type=\"email\"\n                    value={formData.email}\n                    onChange={(e) => handleInputChange(\"email\", e.target.value)}\n                    required\n                  />\n                </div>\n                \n                <div>\n                  <Label htmlFor=\"phone\">Phone Number</Label>\n                  <Input\n                    id=\"phone\"\n                    type=\"tel\"\n                    value={formData.phone}\n                    onChange={(e) => handleInputChange(\"phone\", e.target.value)}\n                  />\n                </div>\n                \n                <div>\n                  <Label htmlFor=\"organization\">Fire District/Organization</Label>\n                  <Input\n                    id=\"organization\"\n                    value={formData.organization}\n                    onChange={(e) => handleInputChange(\"organization\", e.target.value)}\n                  />\n                </div>\n                \n                <div>\n                  <Label htmlFor=\"subject\">Subject</Label>\n                  <Select value={formData.subject} onValueChange={(value) => handleInputChange(\"subject\", value)}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Select a topic\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"mergers\">Mergers and Consolidations</SelectItem>\n                      <SelectItem value=\"public-records\">Public Records</SelectItem>\n                      <SelectItem value=\"personnel\">Personnel Matters</SelectItem>\n                      <SelectItem value=\"hipaa\">HIPAA Compliance</SelectItem>\n                      <SelectItem value=\"meetings\">Open Meetings</SelectItem>\n                      <SelectItem value=\"financial\">Financial Management</SelectItem>\n                      <SelectItem value=\"other\">Other</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                \n                <div>\n                  <Label htmlFor=\"message\">Message</Label>\n                  <Textarea\n                    id=\"message\"\n                    rows={6}\n                    placeholder=\"Please describe your legal needs...\"\n                    value={formData.message}\n                    onChange={(e) => handleInputChange(\"message\", e.target.value)}\n                    required\n                  />\n                </div>\n                \n                <Button \n                  type=\"submit\" \n                  disabled={isLoading}\n                  className=\"w-full bg-neon-orange text-white hover:bg-red-600 hover:text-white\"\n                >\n                  {isLoading ? \"Sending...\" : \"Send Message\"}\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n\n          {/* Contact Information */}\n          <div className=\"mt-12 lg:mt-0 space-y-8\">\n            {/* Attorney Contact Cards */}\n            <Card className=\"p-8 border-neon-orange\">\n              <CardContent className=\"p-0\">\n                <h3 className=\"text-xl font-bold text-fire-navy mb-6\">Contact the Firehouse Lawyer Today!</h3>\n                \n                <div className=\"space-y-6\">\n                  <div className=\"border-b border-gray-200 pb-6\">\n                    <h4 className=\"font-bold text-fire-navy mb-3\">Eric T. Quinn</h4>\n                    <div className=\"space-y-2\">\n                      <a href=\"tel:12535906628\" className=\"flex items-center space-x-3 text-warm-gray hover:text-neon-orange transition-colors\">\n                        <Phone className=\"w-5 h-5\" />\n                        <span>(253) 590-6628</span>\n                      </a>\n                      <a href=\"mailto:ericquinn@firehouselawyer2.com\" className=\"flex items-center space-x-3 text-warm-gray hover:text-neon-orange transition-colors\">\n                        <Mail className=\"w-5 h-5\" />\n                        <span>ericquinn@firehouselawyer2.com</span>\n                      </a>\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"font-bold text-fire-navy mb-3\">Joseph F. Quinn, Of Counsel</h4>\n                    <div className=\"space-y-2\">\n                      <a href=\"tel:12535763232\" className=\"flex items-center space-x-3 text-warm-gray hover:text-neon-orange transition-colors\">\n                        <Phone className=\"w-5 h-5\" />\n                        <span>(253) 576-3232</span>\n                      </a>\n                      <a href=\"mailto:joequinn@firehouselawyer.com\" className=\"flex items-center space-x-3 text-warm-gray hover:text-neon-orange transition-colors\">\n                        <Mail className=\"w-5 h-5\" />\n                        <span>joequinn@firehouselawyer.com</span>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Office Location */}\n            <Card className=\"p-8 border-neon-orange\">\n              <CardContent className=\"p-0\">\n                <h3 className=\"text-xl font-bold text-fire-navy mb-4\">Office Location</h3>\n                <div className=\"flex items-start space-x-3\">\n                  <MapPin className=\"w-5 h-5 text-neon-orange mt-1 flex-shrink-0\" />\n                  <div>\n                    <p className=\"font-semibold text-fire-navy\">Mailing Address:</p>\n                    <p className=\"text-warm-gray\">7403 Lakewood Drive West, Suite # 11</p>\n                    <p className=\"text-warm-gray\">Lakewood, WA 98499-7951</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Office Hours */}\n            <Card className=\"bg-fire-navy text-white p-8 border-neon-orange\">\n              <CardContent className=\"p-0\">\n                <h3 className=\"text-xl font-bold mb-4 flex items-center\">\n                  <Clock className=\"w-5 h-5 mr-2\" />\n                  Office Hours\n                </h3>\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span>Monday - Friday:</span>\n                    <span>8:00 AM - 5:00 PM</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Saturday:</span>\n                    <span>By Appointment</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Sunday:</span>\n                    <span>Closed</span>\n                  </div>\n                </div>\n                <p className=\"text-orange-100 text-sm mt-4\">Emergency consultations available 24/7 for critical fire service matters.</p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":10399},"client/src/pages/home.tsx":{"content":"import { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport NewsletterSubscription from \"@/components/newsletter-subscription\";\nimport { \n  Building2, \n  FileText, \n  Users, \n  Shield, \n  DollarSign, \n  ClipboardCheck,\n  Calendar,\n  Bell\n} from \"lucide-react\";\nimport { useState, useEffect } from \"react\";\n\n// Import local images\nimport bog1 from \"../assets/images/bog-1.jpg\";\nimport joe3 from \"../assets/images/joe-3.jpg\";\nimport plant from \"../assets/images/plant.jpg\";\nimport rainier from \"../assets/images/rainier.jpg\";\nimport joeFiretruck from \"../assets/images/joe-with-firetruck.jpg\";\n\nexport default function Home() {\n  const heroImages = [\n    { src: bog1, alt: \"Pacific Northwest landscape\" },\n    { src: joe3, alt: \"Legal professional\" },\n    { src: plant, alt: \"Pacific Northwest nature\" },\n    { src: rainier, alt: \"Mount Rainier landscape\" }\n  ];\n\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentImageIndex((prevIndex) => \n        prevIndex === heroImages.length - 1 ? 0 : prevIndex + 1\n      );\n    }, 5000); // Change image every 5 seconds\n\n    return () => clearInterval(interval);\n  }, [heroImages.length]);\n\n\n\n  const practiceAreas = [\n    {\n      icon: Building2,\n      title: \"Mergers and Consolidations\",\n      description: \"Expert guidance through complex fire district mergers and consolidations with political and legal implications.\"\n    },\n    {\n      icon: FileText,\n      title: \"Public Records & OPMA\",\n      description: \"Navigate public records requests and open meeting requirements with confidence and compliance.\"\n    },\n    {\n      icon: Users,\n      title: \"Personnel Matters\",\n      description: \"Complete support for employment law, collective bargaining, and workplace policy issues.\"\n    },\n    {\n      icon: Shield,\n      title: \"HIPAA Compliance\",\n      description: \"Protect medical information and ensure compliance with federal and state health privacy laws.\"\n    },\n    {\n      icon: DollarSign,\n      title: \"Public Finances\",\n      description: \"Expert advice on property taxes, fire benefit charges, and financial compliance matters.\"\n    },\n    {\n      icon: ClipboardCheck,\n      title: \"Contract Review\",\n      description: \"Comprehensive contract drafting and review for mutual aid agreements and procurement.\"\n    }\n  ];\n\n  return (\n    <div>\n      {/* Hero Section */}\n      <section className=\"relative bg-urban-dark overflow-hidden urban-grid\">\n        <div className=\"absolute inset-0\">\n          <div className=\"relative w-full h-full\">\n            {heroImages.map((image, index) => (\n              <img \n                key={index}\n                src={image.src} \n                alt={image.alt}\n                className={`absolute inset-0 w-full h-full object-cover transition-opacity duration-1000 ${\n                  index === currentImageIndex ? 'opacity-100' : 'opacity-0'\n                } ${\n                  index === 1 ? 'lg:object-top object-center' : 'object-center'\n                }`}\n              />\n            ))}\n          </div>\n          {/* Urban overlay with texture - Balanced for text readability */}\n          <div className=\"absolute inset-0 bg-black/70 urban-concrete\"></div>\n          <div className=\"absolute inset-0 bg-gradient-to-br from-black/60 via-transparent to-black/40\"></div>\n        </div>\n\n        {/* Carousel Indicators */}\n        <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2 z-10\">\n          {heroImages.map((_, index) => (\n            <button\n              key={index}\n              onClick={() => setCurrentImageIndex(index)}\n              className={`w-3 h-3 transition-all duration-300 ${\n                index === currentImageIndex \n                  ? 'bg-neon-orange scale-125' \n                  : 'bg-white/50 hover:bg-neon-orange/75 scale-100'\n              }`}\n              style={{ clipPath: 'polygon(0 0, 100% 0, 85% 100%, 0% 100%)' }}\n              aria-label={`Go to slide ${index + 1}`}\n              data-testid={`hero-indicator-${index}`}\n            />\n          ))}\n        </div>\n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-24 lg:py-32\">\n          <div className=\"lg:w-2/3\">\n            <h1 className=\"text-4xl lg:text-7xl font-bebas font-bold text-white mb-6 leading-tight text-shadow-gritty tracking-wider\">\n              REPRESENTING THE <span className=\"text-neon-orange text-shadow-gritty\">FIRE SERVICE</span> WITH EXCELLENCE\n            </h1>\n            <p className=\"text-xl text-gray-200 mb-8 leading-relaxed font-montserrat text-shadow-gritty\">\n              At Eric T. Quinn, P.S., we have a common goal: providing specialized legal counsel to fire districts, \n              regional fire authorities, and public agencies across the Pacific Northwest.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              <Button \n                asChild \n                size=\"lg\" \n                className=\"bg-neon-orange hover:bg-red-600 urban-shadow-lg border border-neon-orange hover:scale-105 transition-all duration-300 font-montserrat font-semibold uppercase tracking-wide text-white hover:text-white\"\n                data-testid=\"button-explore-practice-areas\"\n              >\n                <Link href=\"/practice-areas\">\n                  Explore Our Practice Areas\n                </Link>\n              </Button>\n              <Button \n                asChild \n                variant=\"outline\" \n                size=\"lg\" \n                className=\"border-neon-orange text-white hover:bg-red-600 hover:text-white bg-transparent urban-shadow-lg hover:scale-105 transition-all duration-300 font-montserrat font-semibold uppercase tracking-wide\"\n                data-testid=\"button-schedule-consultation\"\n              >\n                <Link href=\"/contact\">\n                  Schedule Consultation\n                </Link>\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* About Section */}\n      <section className=\"py-20 bg-urban-medium urban-concrete\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"lg:grid lg:grid-cols-2 lg:gap-16 items-center\">\n            <div>\n              <h2 className=\"text-3xl lg:text-5xl font-bebas font-bold text-white mb-6 tracking-wider text-shadow-gritty\">\n                SPECIALIZED LEGAL COUNSEL FOR FIRE SERVICE AND PUBLIC AGENCIES\n              </h2>\n              <p className=\"text-lg text-gray-300 mb-6 leading-relaxed font-montserrat\">\n                Managing a government agency is no easy task. Every day you address many challenges, and we will help you solve them. \n                We understand that the ultimate goal of the fire service is to ensure the safety and wellness of every person.\n              </p>\n              <p className=\"text-lg text-gray-300 mb-8 leading-relaxed font-montserrat\">\n                But that does not come without a cost to management. You may face an employee who alleges discrimination; \n                a citizen who makes numerous public records requests; or the passage of an excess levy, which requires not only \n                political will, but financial and organizational expertise.\n              </p>\n              <Button \n                asChild \n                variant=\"link\" \n                className=\"text-neon-orange hover:text-red-400 p-0 font-montserrat font-semibold uppercase tracking-wide transition-all duration-300\"\n                data-testid=\"link-meet-attorneys\"\n              >\n                <Link href=\"/attorneys\">\n                  Meet Our Attorneys →\n                </Link>\n              </Button>\n            </div>\n            <div className=\"mt-10 lg:mt-0\">\n              <div className=\"relative\">\n                <img \n                  src={joeFiretruck} \n                  alt=\"Joseph Quinn with vintage fire truck\" \n                  className=\"w-full h-96 object-cover object-center urban-shadow-lg distressed-border\" \n                  style={{ clipPath: 'polygon(0 0, 95% 0, 100% 95%, 5% 100%)' }}\n                />\n                <div className=\"absolute inset-0 bg-gradient-to-tr from-black/20 to-transparent\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Practice Areas Preview */}\n      <section className=\"py-20 bg-urban-gray urban-grid\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-5xl font-bebas font-bold text-white mb-4 tracking-wider text-shadow-gritty\">OUR PRACTICE AREAS</h2>\n            <p className=\"text-lg text-gray-300 max-w-3xl mx-auto font-montserrat\">\n              Comprehensive legal services tailored specifically for fire districts, regional fire authorities, and public agencies.\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {practiceAreas.map((area, index) => (\n              <Card key={index} className=\"bg-urban-light border-neon-orange hover:border-red-400 urban-shadow hover:urban-shadow-lg transition-all duration-300 hover:scale-105 distressed-border\" data-testid={`practice-area-card-${index}`}>\n                <CardContent className=\"p-8\">\n                  <div className=\"w-16 h-16 bg-neon-orange rounded-none flex items-center justify-center mb-6 urban-shadow-lg hover:bg-red-600 transition-all duration-300 hover:scale-110\" style={{ clipPath: 'polygon(10% 0%, 100% 0%, 90% 100%, 0% 100%)' }}>\n                    <area.icon className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <h3 className=\"text-xl font-bebas font-bold text-white mb-3 tracking-wide\">{area.title.toUpperCase()}</h3>\n                  <p className=\"text-gray-300 font-montserrat\">{area.description}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          <div className=\"text-center mt-12\">\n            <Button \n              asChild \n              size=\"lg\" \n              className=\"bg-neon-orange hover:bg-red-600 urban-shadow-lg border border-neon-orange hover:scale-105 transition-all duration-300 font-montserrat font-semibold uppercase tracking-wide text-white hover:text-white\"\n              data-testid=\"button-view-all-practice-areas\"\n            >\n              <Link href=\"/practice-areas\">\n                View All Practice Areas\n              </Link>\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* Announcements Section */}\n      <section className=\"py-20 bg-urban-medium urban-concrete\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-5xl font-bebas font-bold text-white mb-4 tracking-wider text-shadow-gritty\">ANNOUNCEMENTS</h2>\n            <p className=\"text-lg text-gray-300 max-w-3xl mx-auto font-montserrat\">\n              Stay updated with our latest programs, events, and educational opportunities.\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-2 gap-8 max-w-5xl mx-auto\">\n            {/* Services for All Public Agencies */}\n            <Card className=\"bg-urban-light border-neon-orange hover:border-red-400 urban-shadow hover:urban-shadow-lg transition-all duration-300 hover:scale-105 distressed-border\" data-testid=\"announcement-card-public-agencies\">\n              <CardContent className=\"p-8\">\n                <div className=\"w-16 h-16 bg-neon-orange rounded-none flex items-center justify-center mb-6 urban-shadow-lg hover:bg-red-600 transition-all duration-300 hover:scale-110\" style={{ clipPath: 'polygon(10% 0%, 100% 0%, 90% 100%, 0% 100%)' }}>\n                  <Building2 className=\"w-8 h-8 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-bebas font-bold text-white mb-3 tracking-wide\">SERVING ALL PUBLIC AGENCIES</h3>\n                <p className=\"text-gray-300 mb-4 leading-relaxed font-montserrat\">\n                  Are you not with a fire district or regional fire authority? Don't fret. Our skills transfer to any \n                  type of municipal corporation, such as a school district, city or public utility district, to name a few!\n                </p>\n                <div className=\"text-sm text-white bg-neon-orange/20 px-3 py-2 rounded font-montserrat font-semibold uppercase tracking-wide\">\n                  Contact us to discuss your agency's needs\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Municipal Roundtable */}\n            <Card className=\"bg-urban-light border-neon-orange hover:border-red-400 urban-shadow hover:urban-shadow-lg transition-all duration-300 hover:scale-105 distressed-border\" data-testid=\"announcement-card-roundtable\">\n              <CardContent className=\"p-8\">\n                <div className=\"w-16 h-16 bg-neon-orange rounded-none flex items-center justify-center mb-6 urban-shadow-lg hover:bg-red-600 transition-all duration-300 hover:scale-110\" style={{ clipPath: 'polygon(10% 0%, 100% 0%, 90% 100%, 0% 100%)' }}>\n                  <Calendar className=\"w-8 h-8 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-bebas font-bold text-white mb-3 tracking-wide\">MUNICIPAL ROUNDTABLE</h3>\n                <p className=\"text-gray-300 mb-4 leading-relaxed font-montserrat\">\n                  Join us every three months for our Municipal Roundtable sessions, where we discuss current \n                  legal issues affecting fire departments and public agencies across the region.\n                </p>\n                <div className=\"text-sm text-white bg-neon-orange/20 px-3 py-2 rounded font-montserrat font-semibold uppercase tracking-wide\">\n                  Next session: Contact us for dates\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          <div className=\"text-center mt-12\">\n            <Button \n              asChild \n              size=\"lg\" \n              variant=\"outline\" \n              className=\"border-neon-orange text-white hover:bg-red-600 hover:text-white urban-shadow-lg hover:scale-105 transition-all duration-300 font-montserrat font-semibold uppercase tracking-wide\"\n              data-testid=\"button-contact-event-details\"\n            >\n              <Link href=\"/contact\">\n                Contact Us for Event Details\n              </Link>\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* Newsletter CTA */}\n      <NewsletterSubscription />\n    </div>\n  );\n}\n","size_bytes":14832},"client/src/pages/newsletter.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport NewsletterSubscription from \"@/components/newsletter-subscription\";\nimport { Download, ExternalLink, CheckCircle, Search } from \"lucide-react\";\n\nexport default function Newsletter() {\n  const [subscriptionEmail, setSubscriptionEmail] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const archiveIssues = [\n    {\n      title: \"June 2025 - Personnel Policy Updates\",\n      description: \"New guidelines for employee handbook revisions and disciplinary procedures\",\n      date: \"June 2025\"\n    },\n    {\n      title: \"May 2025 - Budget Season Compliance\",\n      description: \"Essential requirements for annual budget processes and financial reporting\",\n      date: \"May 2025\"\n    },\n    {\n      title: \"April 2025 - OPMA Best Practices\",\n      description: \"Recent case law affecting public meetings and transparency requirements\",\n      date: \"April 2025\"\n    },\n    {\n      title: \"March 2025 - Fire Safety Regulations\",\n      description: \"Updated fire safety codes and emergency response protocols\",\n      date: \"March 2025\"\n    },\n    {\n      title: \"February 2025 - Labor Law Changes\",\n      description: \"New overtime regulations and collective bargaining updates\",\n      date: \"February 2025\"\n    },\n    {\n      title: \"January 2025 - Equipment Procurement\",\n      description: \"Guidelines for purchasing fire department equipment and vehicles\",\n      date: \"January 2025\"\n    },\n    {\n      title: \"December 2024 - Pension Updates\",\n      description: \"Changes to firefighter pension plans and retirement benefits\",\n      date: \"December 2024\"\n    },\n    {\n      title: \"November 2024 - Training Requirements\",\n      description: \"Mandatory training programs and certification standards\",\n      date: \"November 2024\"\n    }\n  ];\n\n  const filteredIssues = archiveIssues.filter(issue =>\n    issue.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    issue.description.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const benefits = [\n    \"Monthly legal updates\",\n    \"Case law analysis\",\n    \"Legislative changes\",\n    \"Best practices guidance\"\n  ];\n\n  return (\n    <div>\n      <div className=\"bg-fire-navy py-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <h1 className=\"text-4xl lg:text-5xl font-bold text-white mb-4\">Our Newsletter</h1>\n          <p className=\"text-xl text-gray-200\">Stay updated laws impacting fire departments and other public agencies.</p>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16\">\n        <div className=\"lg:grid lg:grid-cols-3 lg:gap-12\">\n          <div className=\"lg:col-span-2\">\n            {/* Latest Issue */}\n            <Card className=\"p-8 mb-8 border-neon-orange\">\n              <CardContent className=\"p-0\">\n                <div className=\"flex items-start justify-between mb-6\">\n                  <div>\n                    <h2 className=\"text-2xl font-bold text-fire-navy mb-2\">Latest Issue - July 2025</h2>\n                    <p className=\"text-warm-gray\">Special-Meeting Notices Are Key</p>\n                  </div>\n                  <Badge className=\"bg-neon-orange text-black\">NEW</Badge>\n                </div>\n                <p className=\"text-warm-gray mb-6 leading-relaxed\">\n                  Today we discuss two OPMA cases involving notices of special meetings; we also consider apprenticeship \n                  requirements in public-works contracts, deductions from leave banks of FLSA-exempt employees, \"reverse discrimination,\" \n                  and some miscellaneous laws.\n                </p>\n                <div className=\"flex flex-col sm:flex-row gap-4\">\n                  <Button asChild className=\"bg-neon-orange text-white hover:bg-red-600 hover:text-white\">\n                    <a href=\"https://firehouselawyer.com/Newsletters/July2025FINAL.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">\n                      <Download className=\"w-4 h-4 mr-2\" />\n                      Read Full Issue (PDF)\n                    </a>\n                  </Button>\n                  <Button variant=\"outline\" className=\"border-neon-orange text-white hover:bg-red-600 hover:text-white\">\n                    <ExternalLink className=\"w-4 h-4 mr-2\" />\n                    View Online\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Newsletter Archive */}\n            <Card className=\"p-8 border-neon-orange\">\n              <CardContent className=\"p-0\">\n                <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-4\">\n                  <h3 className=\"text-xl font-bold text-fire-navy\">Newsletter Archive</h3>\n                  <div className=\"relative w-full sm:w-auto sm:min-w-[300px]\">\n                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n                    <Input\n                      type=\"text\"\n                      placeholder=\"Search archive...\"\n                      value={searchQuery}\n                      onChange={(e) => setSearchQuery(e.target.value)}\n                      className=\"pl-10\"\n                      data-testid=\"input-search-archive\"\n                    />\n                  </div>\n                </div>\n                <div className=\"space-y-4\">\n                  {filteredIssues.length > 0 ? (\n                    filteredIssues.map((issue, index) => (\n                      <div key={index} className=\"flex items-center justify-between p-4 border border-gray-200 rounded-lg hover:border-neon-orange transition-colors\" data-testid={`card-archive-${index}`}>\n                        <div>\n                          <h4 className=\"font-semibold text-fire-navy\">{issue.title}</h4>\n                          <p className=\"text-sm text-warm-gray\">{issue.description}</p>\n                        </div>\n                        <Button variant=\"ghost\" size=\"icon\" className=\"text-neon-orange hover:text-red-600 hover:bg-transparent\" data-testid={`button-download-${index}`}>\n                          <Download className=\"w-5 h-5\" />\n                        </Button>\n                      </div>\n                    ))\n                  ) : (\n                    <div className=\"text-center py-8\">\n                      <p className=\"text-warm-gray\">No newsletters found matching your search.</p>\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Subscription Sidebar */}\n          <div className=\"mt-12 lg:mt-0 space-y-8\">\n            <NewsletterSubscription variant=\"sidebar\" />\n\n            {/* Newsletter Benefits */}\n            <Card className=\"p-8 border-neon-orange\">\n              <CardContent className=\"p-0\">\n                <h3 className=\"text-xl font-bold text-fire-navy mb-4\">What You'll Get</h3>\n                <ul className=\"space-y-3\">\n                  {benefits.map((benefit, index) => (\n                    <li key={index} className=\"flex items-start space-x-3\">\n                      <CheckCircle className=\"w-5 h-5 text-neon-orange mt-0.5 flex-shrink-0\" />\n                      <span className=\"text-warm-gray\">{benefit}</span>\n                    </li>\n                  ))}\n                </ul>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":7667},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/practice-areas.tsx":{"content":"import { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { CheckCircle } from \"lucide-react\";\n\nexport default function PracticeAreas() {\n  const practiceAreas = [\n    {\n      title: \"Open Public Meetings\",\n      description: \"The Open Public Meetings Act (OPMA) requires that all meetings of a governing body of an agency be open to the public, with limited exceptions. We have more than thirty years' experience with such issues.\"\n    },\n    {\n      title: \"HIPAA Compliance\",\n      description: \"Washington and federal law are both very protective of the medical information of individual persons. We address the intricacies of these laws to avoid consequences of improper disclosure.\"\n    },\n    {\n      title: \"Personnel/Labor Matters\",\n      description: \"We work in a fire station, and keep our doors open. Labor questions arise all the time, covering worker's compensation, employment discrimination, workplace safety, and collective bargaining.\"\n    },\n    {\n      title: \"Financial Management\",\n      description: \"Property taxes and other financial issues can be baffling. After more than thirty years in local government, we have considerable expertise with property taxes, fire benefit charges, and procurement.\"\n    }\n  ];\n\n  return (\n    <div>\n      <div className=\"bg-urban-dark py-16 urban-grid\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <h1 className=\"text-4xl lg:text-6xl font-bebas font-bold text-white mb-4 tracking-wider text-shadow-gritty\">PRACTICE AREAS</h1>\n          <p className=\"text-xl text-gray-200 font-montserrat\">Comprehensive legal services for fire districts, regional fire authorities, and public agencies in general.</p>\n        </div>\n      </div>\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16 bg-urban-gray urban-concrete min-h-screen\">\n        {/* Mergers and Consolidations */}\n        <Card className=\"p-8 mb-8 bg-urban-medium border-neon-orange distressed-border urban-shadow-lg\">\n          <CardContent className=\"p-0\">\n            <div className=\"lg:grid lg:grid-cols-3 lg:gap-8 items-start\">\n              <div className=\"lg:col-span-2\">\n                <h2 className=\"text-3xl lg:text-4xl font-bebas font-bold text-white mb-4 tracking-wider text-shadow-gritty\">MERGERS AND CONSOLIDATIONS</h2>\n                <p className=\"text-gray-100 mb-4 leading-relaxed font-montserrat\">\n                  Mergers and Consolidations require a skilled attorney who understands not only their legal implications, \n                  but their political implications as well. Although Mergers and Consolidations has been a hot topic at many \n                  conferences in recent years, Mr. Quinn has actually been very active in consolidation and merger work since 1990.\n                </p>\n                <p className=\"text-gray-100 mb-4 leading-relaxed font-montserrat\">\n                  He was personally very involved and remains involved in the following agencies formed as a result of such alliances: \n                  Central Pierce Fire & Rescue, East Pierce Fire & Rescue, West Pierce Fire & Rescue, Valley Regional Fire Authority, \n                  Riverside Fire Authority (Centralia area), West Thurston Regional Fire Authority, South King Fire & Rescue, and the list goes on and on.\n                </p>\n                <ul className=\"text-gray-100 space-y-2 font-montserrat\">\n                  <li className=\"flex items-start space-x-2\">\n                    <CheckCircle className=\"w-5 h-5 text-neon-orange mt-0.5 flex-shrink-0\" />\n                    <span>Legal framework development</span>\n                  </li>\n                  <li className=\"flex items-start space-x-2\">\n                    <CheckCircle className=\"w-5 h-5 text-neon-orange mt-0.5 flex-shrink-0\" />\n                    <span>Political strategy consultation</span>\n                  </li>\n                  <li className=\"flex items-start space-x-2\">\n                    <CheckCircle className=\"w-5 h-5 text-neon-orange mt-0.5 flex-shrink-0\" />\n                    <span>Implementation oversight</span>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"mt-8 lg:mt-0\">\n                <div className=\"relative\">\n                  <img \n                    src=\"https://images.unsplash.com/photo-1600622269746-258d4124170a?q=80&w=1471&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\" \n                    alt=\"Business handshake representing mergers and consolidations\" \n                    className=\"w-full urban-shadow-lg distressed-border\" \n                    style={{ clipPath: 'polygon(0 0, 95% 0, 100% 95%, 5% 100%)' }}\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-tr from-black/20 to-transparent\"></div>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Public Records Act */}\n        <Card className=\"p-8 mb-8 bg-urban-medium border-neon-orange distressed-border urban-shadow-lg\">\n          <CardContent className=\"p-0\">\n            <div className=\"lg:grid lg:grid-cols-3 lg:gap-8 items-start\">\n              <div className=\"order-2 lg:order-1 mt-8 lg:mt-0\">\n                <div className=\"relative\">\n                  <img \n                    src=\"https://images.unsplash.com/photo-1450101499163-c8848c66ca85?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                    alt=\"Legal documents and office\" \n                    className=\"w-full urban-shadow-lg distressed-border\" \n                    style={{ clipPath: 'polygon(5% 0, 100% 0, 95% 100%, 0% 100%)' }}\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-tl from-black/20 to-transparent\"></div>\n                </div>\n              </div>\n              <div className=\"lg:col-span-2 order-1 lg:order-2\">\n                <h2 className=\"text-3xl lg:text-4xl font-bebas font-bold text-white mb-4 tracking-wider text-shadow-gritty\">PUBLIC RECORDS ACT</h2>\n                <p className=\"text-gray-100 mb-4 leading-relaxed font-montserrat\">\n                  The Washington Public Records Act (PRA) is another \"sunshine law\" mandating government transparency. Much like the OPMA, \n                  this law is construed broadly and its exemptions are construed narrowly. This growing area of law requires that your staff \n                  be well trained on the intricacies of the PRA.\n                </p>\n                <p className=\"text-gray-100 mb-4 leading-relaxed font-montserrat\">\n                  We deal with PRA issues in this office, practically on a daily basis, so we know when to claim an exemption and when not to claim an exemption. \n                  We provide comprehensive training and ongoing support.\n                </p>\n                <ul className=\"text-gray-100 space-y-2 font-montserrat\">\n                  <li className=\"flex items-start space-x-2\">\n                    <CheckCircle className=\"w-5 h-5 text-neon-orange mt-0.5 flex-shrink-0\" />\n                    <span>PRA compliance training</span>\n                  </li>\n                  <li className=\"flex items-start space-x-2\">\n                    <CheckCircle className=\"w-5 h-5 text-neon-orange mt-0.5 flex-shrink-0\" />\n                    <span>Request response strategies</span>\n                  </li>\n                  <li className=\"flex items-start space-x-2\">\n                    <CheckCircle className=\"w-5 h-5 text-neon-orange mt-0.5 flex-shrink-0\" />\n                    <span>Exemption analysis</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Additional Practice Areas Grid */}\n        <div className=\"grid md:grid-cols-2 gap-8\">\n          {practiceAreas.map((area, index) => (\n            <Card key={index} className=\"p-8 bg-urban-medium border-neon-orange distressed-border urban-shadow hover:urban-shadow-lg transition-all duration-300 hover:scale-105\" data-testid={`practice-area-detail-${index}`}>\n              <CardContent className=\"p-0\">\n                <h3 className=\"text-3xl lg:text-4xl font-bebas font-bold text-white mb-4 tracking-wider text-shadow-gritty\">{area.title.toUpperCase()}</h3>\n                <p className=\"text-gray-100 mb-4 font-montserrat\">{area.description}</p>\n                <Button \n                  variant=\"link\" \n                  className=\"text-neon-orange hover:text-red-400 p-0 font-montserrat font-semibold uppercase tracking-wide transition-all duration-300\"\n                  data-testid={`button-learn-more-${index}`}\n                >\n                  Learn More →\n                </Button>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        {/* Board Retreats Special Section */}\n        <Card className=\"bg-urban-medium border-neon-orange p-8 mt-8 distressed-border urban-shadow-lg relative overflow-hidden\">\n          <div className=\"absolute inset-0 bg-gradient-to-r from-urban-dark/90 via-urban-medium/80 to-transparent\"></div>\n          <CardContent className=\"p-0 relative z-10\">\n            <div className=\"lg:grid lg:grid-cols-2 lg:gap-8 items-center\">\n              <div>\n                <h3 className=\"text-3xl lg:text-4xl font-bebas font-bold mb-4 tracking-wider text-shadow-gritty text-white\">BOARD RETREATS</h3>\n                <p className=\"text-gray-200 mb-6 leading-relaxed font-montserrat\">\n                  Eric and Joe Quinn facilitate annual Board retreats to train commissioners and administration about governance issues \n                  and working as a team, as is absolutely crucial in the fire service and government in general.\n                </p>\n                <Button \n                  asChild \n                  className=\"bg-neon-orange text-white hover:bg-red-600 hover:text-white font-montserrat font-semibold uppercase tracking-wide hover:scale-105 transition-all duration-300 urban-shadow-lg\"\n                  data-testid=\"button-schedule-retreat\"\n                >\n                  <Link href=\"/contact\">\n                    Schedule a Retreat\n                  </Link>\n                </Button>\n              </div>\n              <div className=\"mt-8 lg:mt-0\">\n                <div className=\"relative\">\n                  <img \n                    src=\"https://images.unsplash.com/photo-1529070538774-1843cb3265df?q=80&w=1170\" \n                    alt=\"Fire department building\" \n                    className=\"w-full urban-shadow-lg distressed-border\" \n                    style={{ clipPath: 'polygon(0 0, 95% 0, 100% 95%, 5% 100%)' }}\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-tr from-black/20 to-transparent\"></div>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","size_bytes":11016},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/vite-plugin-rss.ts":{"content":"// client/vite-plugin-rss.ts\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport type { Plugin } from 'vite';\nimport { getNewsletterIssues } from './src/lib/cms';\n\n// Use Netlify's URL env var in production, fallback to localhost for dev\nconst SITE_URL = process.env.URL || process.env.DEPLOY_URL || 'http://localhost:5000';\nconst SITE_TITLE = 'Firehouse Lawyer Newsletter';\nconst SITE_DESCRIPTION = 'Latest newsletters from Firehouse Lawyer';\n\nexport function vitePluginRss(): Plugin {\n  return {\n    name: 'vite-plugin-rss',\n    async writeBundle() {\n      const newsletters = await getNewsletterIssues(true); // isServer: true\n\n      const xml = `<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n        <rss version=\"2.0\" xmlns:atom=\"http://www.w3.org/2005/Atom\" xmlns:media=\"http://search.yahoo.com/mrss/\">\n          <channel>\n            <title><![CDATA[${SITE_TITLE}]]></title>\n            <description><![CDATA[${SITE_DESCRIPTION}]]></description>\n            <link>${SITE_URL}</link>\n            <atom:link href=\"${SITE_URL}/rss.xml\" rel=\"self\" type=\"application/rss+xml\"/>\n            <language>en-us</language>\n            ${newsletters.map(item => `\n              <item>\n                <title><![CDATA[${item.title}]]></title>\n                <link>${SITE_URL}/newsletters/${item.slug || item.title.toLowerCase().replace(/\\s+/g, '-')}</link>\n                <guid isPermaLink=\"true\">${SITE_URL}/newsletters/${item.slug || item.title.toLowerCase().replace(/\\s+/g, '-')}</guid>\n                <pubDate>${new Date(item.date).toUTCString()}</pubDate>\n                <description><![CDATA[${item.description}]]></description>\n                ${item.pdf_url ? `<enclosure url=\"${item.pdf_url.startsWith('http') ? item.pdf_url : SITE_URL + item.pdf_url}\" type=\"application/pdf\"/>` : ''}\n                ${item.pdf_url ? `<media:content url=\"${item.pdf_url.startsWith('http') ? item.pdf_url : SITE_URL + item.pdf_url}\" medium=\"document\"/>` : ''}\n              </item>\n            `).join('')}\n          </channel>\n        </rss>`;\n\n      const outputPath = path.join(process.cwd(), 'dist/public/rss.xml');\n      // Ensure the directory exists\n      await fs.mkdir(path.dirname(outputPath), { recursive: true });\n      await fs.writeFile(outputPath, xml);\n      console.log('RSS feed generated at dist/public/rss.xml');\n    }\n  };\n}","size_bytes":2346},"README.md":{"content":"# firehouse-laywer-b","size_bytes":20}}}